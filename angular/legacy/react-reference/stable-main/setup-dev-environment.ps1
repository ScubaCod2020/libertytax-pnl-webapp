# Development Environment Setup Script
# Place this in your D:\Dev\ directory and run it to configure your development environment

Write-Host "üöÄ Setting up Development Environment..." -ForegroundColor Green

# Define development paths
$DevPaths = @(
    'D:\Dev\nodejs',
    'D:\Dev\nvm',
    'D:\Dev\git\bin',
    'D:\Dev\tools',
    'D:\Dev\scripts'
)

# Current session PATH update
Write-Host "üìù Updating PATH for current session..." -ForegroundColor Yellow
foreach ($path in $DevPaths) {
    if (Test-Path $path) {
        $env:Path = $env:Path + ";$path"
        Write-Host "  ‚úÖ Added: $path" -ForegroundColor Green
    } else {
        Write-Host "  ‚ö†Ô∏è  Not found: $path" -ForegroundColor Yellow
    }
}

# Verify tools are available
Write-Host "`nüîç Verifying development tools..." -ForegroundColor Yellow

try {
    $nodeVersion = node -v
    Write-Host "  ‚úÖ Node.js: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "  ‚ùå Node.js not found" -ForegroundColor Red
}

try {
    $npmVersion = npm -v
    Write-Host "  ‚úÖ npm: $npmVersion" -ForegroundColor Green
} catch {
    Write-Host "  ‚ùå npm not found" -ForegroundColor Red
}

try {
    $gitVersion = git --version
    Write-Host "  ‚úÖ Git: $gitVersion" -ForegroundColor Green
} catch {
    Write-Host "  ‚ùå Git not found" -ForegroundColor Red
}

# PowerShell Profile setup
Write-Host "`nüìã PowerShell Profile Configuration..." -ForegroundColor Yellow

$profileContent = @"
# Development Environment Auto-Setup
# Generated by setup-dev-environment.ps1

# Development tool paths
`$DevPaths = @(
    'D:\Dev\nodejs',
    'D:\Dev\nvm',
    'D:\Dev\git\bin',
    'D:\Dev\tools',
    'D:\Dev\scripts'
)

# Add development paths to PATH
foreach (`$path in `$DevPaths) {
    if ((Test-Path `$path) -and (`$env:Path -notlike "*`$path*")) {
        `$env:Path = `$env:Path + ";`$path"
    }
}

# Development aliases
Set-Alias -Name ll -Value Get-ChildItem
Set-Alias -Name grep -Value Select-String

# Quick navigation functions
function dev { Set-Location "D:\Dev" }
function projects { Set-Location "D:\Dev\projects" }
function tools { Set-Location "D:\Dev\tools" }

# Git shortcuts
function gs { git status }
function ga { git add . }
function gc { param([string]`$message) git commit -m `$message }
function gp { git push }
function gl { git log --oneline -10 }

# npm shortcuts
function ni { npm install }
function ns { npm start }
function nt { npm test }
function nb { npm run build }

# Quick project setup
function setup-project {
    param([string]`$name)
    if (`$name) {
        New-Item -ItemType Directory -Path "D:\Dev\projects\`$name" -Force
        Set-Location "D:\Dev\projects\`$name"
        Write-Host "üìÅ Created and navigated to: D:\Dev\projects\`$name" -ForegroundColor Green
    } else {
        Write-Host "Usage: setup-project <project-name>" -ForegroundColor Yellow
    }
}

Write-Host "‚úÖ Development environment loaded!" -ForegroundColor Green
"@

if (!(Test-Path $PROFILE)) {
    New-Item -ItemType File -Path $PROFILE -Force | Out-Null
}

Set-Content -Path $PROFILE -Value $profileContent
Write-Host "  ‚úÖ PowerShell profile updated: $PROFILE" -ForegroundColor Green

Write-Host "`nüéØ Setup Complete!" -ForegroundColor Green
Write-Host "Run '. `$PROFILE' to reload your profile, or restart PowerShell" -ForegroundColor Yellow
Write-Host "`nUseful commands:" -ForegroundColor Cyan
Write-Host "  dev          - Navigate to D:\Dev" -ForegroundColor White
Write-Host "  projects     - Navigate to D:\Dev\projects" -ForegroundColor White
Write-Host "  setup-project <name> - Create new project directory" -ForegroundColor White
Write-Host "  gs           - git status" -ForegroundColor White
Write-Host "  ga           - git add ." -ForegroundColor White
Write-Host "  gc 'message' - git commit -m 'message'" -ForegroundColor White
Write-Host "  ni           - npm install" -ForegroundColor White
Write-Host "  nt           - npm test" -ForegroundColor White
