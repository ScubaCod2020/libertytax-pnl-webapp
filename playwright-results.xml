<testsuites id="" name="" tests="588" failures="31" skipped="513" errors="0" time="533.513368">
<testsuite name="app.spec.ts" timestamp="2025-09-25T13:01:31.192Z" hostname="chromium" tests="15" failures="15" skipped="0" time="389.61" errors="0">
<testcase name="Liberty Tax P&amp;L Application › displays the main application interface" classname="app.spec.ts" time="9.019">
<failure message="app.spec.ts:65:3 displays the main application interface" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:65:3 › Liberty Tax P&L Application › displays the main application interface 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Liberty Tax • P&L Budget & Forecast')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Liberty Tax • P&L Budget & Forecast')


      65 |   test('displays the main application interface', async ({ page }) => {
      66 |     await expect(page).toHaveTitle(/Liberty Tax/)
    > 67 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
         |                                                                            ^
      68 |     
      69 |     // Check main sections are present
      70 |     await expect(page.locator('text=Quick Inputs')).toBeVisible()
        at E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:67:76

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › has correct initial values" classname="app.spec.ts" time="9.442">
<failure message="app.spec.ts:76:3 has correct initial values" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:76:3 › Liberty Tax P&L Application › has correct initial values ─────────

    Error: expect(locator).toHaveValue(expected) failed

    Locator: locator('select[aria-label="Region"]')
    Expected string: "US"
    Received: <element(s) not found>
    Timeout: 5000ms

    Call log:
      - Expect "toHaveValue" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      75 |
      76 |   test('has correct initial values', async ({ page }) => {
    > 77 |     await expect(pnlPage.regionSelect).toHaveValue('US')
         |                                        ^
      78 |     await expect(pnlPage.avgNetFeeInput).toHaveValue('125')
      79 |     await expect(pnlPage.taxPrepReturnsInput).toHaveValue('1600')
      80 |     await expect(pnlPage.taxRushReturnsInput).toHaveValue('0')
        at E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:77:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › enables TaxRush input when region is set to Canada" classname="app.spec.ts" time="33.779">
<failure message="app.spec.ts:84:3 enables TaxRush input when region is set to Canada" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:84:3 › Liberty Tax P&L Application › enables TaxRush input when region is set to Canada 

    Test timeout of 30000ms exceeded.

    Error: locator.selectOption: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:85:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › disables and resets TaxRush when switching to US" classname="app.spec.ts" time="34.258">
<failure message="app.spec.ts:89:3 disables and resets TaxRush when switching to US" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:89:3 › Liberty Tax P&L Application › disables and resets TaxRush when switching to US 

    Test timeout of 30000ms exceeded.

    Error: locator.selectOption: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:91:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › updates calculations when inputs change" classname="app.spec.ts" time="34.471">
<failure message="app.spec.ts:101:3 updates calculations when inputs change" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:101:3 › Liberty Tax P&L Application › updates calculations when inputs change 

    Test timeout of 30000ms exceeded.

    Error: locator.textContent: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('.kpi:has-text("Net Income") .value')


      101 |   test('updates calculations when inputs change', async ({ page }) => {
      102 |     // Get initial net income
    > 103 |     const initialNetIncome = await pnlPage.netIncomeValue.textContent()
          |                                                           ^
      104 |     
      105 |     // Change average net fee
      106 |     await pnlPage.setAvgNetFee(200)
        at E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:103:59

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › persists data across page reloads" classname="app.spec.ts" time="34.725">
<failure message="app.spec.ts:114:3 persists data across page reloads" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:114:3 › Liberty Tax P&L Application › persists data across page reloads ─

    Test timeout of 30000ms exceeded.

    Error: locator.selectOption: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:116:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › resets all values when reset button is clicked" classname="app.spec.ts" time="33.824">
<failure message="app.spec.ts:134:3 resets all values when reset button is clicked" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:134:3 › Liberty Tax P&L Application › resets all values when reset button is clicked 

    Test timeout of 30000ms exceeded.

    Error: locator.selectOption: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:136:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › displays KPI status colors correctly" classname="app.spec.ts" time="7.416">
<failure message="app.spec.ts:150:3 displays KPI status colors correctly" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:150:3 › Liberty Tax P&L Application › displays KPI status colors correctly 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.kpi:has-text("Net Income")')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.kpi:has-text("Net Income")')


      154 |     const costPerReturnKPI = page.locator('.kpi:has-text("Cost / Return")')
      155 |     
    > 156 |     await expect(netIncomeKPI).toBeVisible()
          |                                ^
      157 |     await expect(netMarginKPI).toBeVisible()
      158 |     await expect(costPerReturnKPI).toBeVisible()
      159 |     
        at E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:156:32

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › shows pro-tips based on KPI status" classname="app.spec.ts" time="7.517">
<failure message="app.spec.ts:170:3 shows pro-tips based on KPI status" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:170:3 › Liberty Tax P&L Application › shows pro-tips based on KPI status 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.card:has-text("Pro-Tips")')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.card:has-text("Pro-Tips")')


      174 |     // There should be some tips shown (content depends on current KPI status)
      175 |     const proTipsSection = page.locator('.card:has-text("Pro-Tips")')
    > 176 |     await expect(proTipsSection).toBeVisible()
          |                                  ^
      177 |   })
      178 |
      179 |   test('handles edge case of zero returns', async ({ page }) => {
        at E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:176:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles edge case of zero returns" classname="app.spec.ts" time="33.845">
<failure message="app.spec.ts:179:3 handles edge case of zero returns" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:179:3 › Liberty Tax P&L Application › handles edge case of zero returns ─

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('label:has-text("Tax Prep Returns") + input')


      28 |
      29 |   async setTaxPrepReturns(value: number) {
    > 30 |     await this.taxPrepReturnsInput.fill(value.toString())
         |                                    ^
      31 |     await this.taxPrepReturnsInput.blur()
      32 |   }
      33 |
        at PnLPage.setTaxPrepReturns (E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:30:36)
        at E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:180:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles very large input values" classname="app.spec.ts" time="33.716">
<failure message="app.spec.ts:189:3 handles very large input values" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:189:3 › Liberty Tax P&L Application › handles very large input values ───

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      23 |
      24 |   async setAvgNetFee(value: number) {
    > 25 |     await this.avgNetFeeInput.fill(value.toString())
         |                               ^
      26 |     await this.avgNetFeeInput.blur()
      27 |   }
      28 |
        at PnLPage.setAvgNetFee (E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:25:31)
        at E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:190:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › maintains TaxRush stickiness in Canada" classname="app.spec.ts" time="36.839">
<failure message="app.spec.ts:202:3 maintains TaxRush stickiness in Canada" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:202:3 › Liberty Tax P&L Application › maintains TaxRush stickiness in Canada 

    Test timeout of 30000ms exceeded.

    Error: locator.selectOption: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:204:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › keyboard navigation works correctly" classname="app.spec.ts" time="7.188">
<failure message="app.spec.ts:212:3 keyboard navigation works correctly" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:212:3 › Liberty Tax P&L Application › keyboard navigation works correctly 

    Error: expect(locator).toBeFocused() failed

    Locator:  locator('select[aria-label="Region"]')
    Expected: focused
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeFocused" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      213 |     // Test tab navigation through inputs
      214 |     await page.keyboard.press('Tab')
    > 215 |     await expect(pnlPage.regionSelect).toBeFocused()
          |                                        ^
      216 |     
      217 |     // Continue tabbing to inputs
      218 |     await page.keyboard.press('Tab')
        at E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:215:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Performance &amp; Responsiveness › loads within acceptable time" classname="app.spec.ts" time="36.011">
<failure message="app.spec.ts:225:3 loads within acceptable time" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:225:3 › Performance & Responsiveness › loads within acceptable time ─────

    Test timeout of 30000ms exceeded.

    Error: locator.waitFor: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('text=Liberty Tax • P&L Budget & Forecast') to be visible


      226 |     const startTime = Date.now()
      227 |     await page.goto('/')
    > 228 |     await page.locator('text=Liberty Tax • P&L Budget & Forecast').waitFor()
          |                                                                    ^
      229 |     const loadTime = Date.now() - startTime
      230 |     
      231 |     expect(loadTime).toBeLessThan(3000) // 3 seconds max
        at E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:228:68

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Performance-Responsiveness-loads-within-acceptable-time-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Performance-Responsiveness-loads-within-acceptable-time-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Performance-Responsiveness-loads-within-acceptable-time-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Performance-Responsiveness-loads-within-acceptable-time-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Performance-Responsiveness-loads-within-acceptable-time-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Performance-Responsiveness-loads-within-acceptable-time-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Performance &amp; Responsiveness › calculations are performant" classname="app.spec.ts" time="37.56">
<failure message="app.spec.ts:234:3 calculations are performant" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:234:3 › Performance & Responsiveness › calculations are performant ──────

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      23 |
      24 |   async setAvgNetFee(value: number) {
    > 25 |     await this.avgNetFeeInput.fill(value.toString())
         |                               ^
      26 |     await this.avgNetFeeInput.blur()
      27 |   }
      28 |
        at PnLPage.setAvgNetFee (E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:25:31)
        at E:\dev\libertytax-pnl-webapp\test\e2e\app.spec.ts:242:21

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-chromium\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="basic-functionality.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="chromium" tests="6" failures="3" skipped="1" time="28.264" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › homepage loads successfully" classname="basic-functionality.spec.js" time="4.501">
<failure message="basic-functionality.spec.js:9:3 homepage loads successfully" type="FAILURE">
<![CDATA[  [chromium] › basic-functionality.spec.js:9:3 › Liberty Tax P&L Webapp - Basic Functionality › homepage loads successfully 

    Error: expect(received).toBeTruthy()

    Received: false

      16 |     // Look for key elements that should be present
      17 |     const hasMainContent = await page.locator('main, #root, .app, [class*="app"]').first().isVisible();
    > 18 |     expect(hasMainContent).toBeTruthy();
         |                            ^
      19 |   });
      20 |
      21 |   test('wizard can be opened', async ({ page }) => {
        at E:\dev\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:18:28

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-chromium\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › wizard can be opened" classname="basic-functionality.spec.js" time="9.047">
<failure message="basic-functionality.spec.js:21:3 wizard can be opened" type="FAILURE">
<![CDATA[  [chromium] › basic-functionality.spec.js:21:3 › Liberty Tax P&L Webapp - Basic Functionality › wizard can be opened 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('h1, h2, h3, [class*="wizard"], [id*="wizard"]').filter({ hasText: /welcome|region|store|step/i }).first()
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('h1, h2, h3, [class*="wizard"], [id*="wizard"]').filter({ hasText: /welcome|region|store|step/i }).first()


      33 |       });
      34 |       
    > 35 |       await expect(wizardContent.first()).toBeVisible({ timeout: 5000 });
         |                                           ^
      36 |     } else {
      37 |       test.skip('Start wizard button not found - may be different implementation');
      38 |     }
        at E:\dev\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:35:43

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-chromium\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › debug panel can be accessed" classname="basic-functionality.spec.js" time="2.598">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › no JavaScript errors on page load" classname="basic-functionality.spec.js" time="4.84">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › responsive design - no horizontal scroll" classname="basic-functionality.spec.js" time="5.332">
<failure message="basic-functionality.spec.js:71:3 responsive design - no horizontal scroll" type="FAILURE">
<![CDATA[  [chromium] › basic-functionality.spec.js:71:3 › Liberty Tax P&L Webapp - Basic Functionality › responsive design - no horizontal scroll 

    Error: expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 380
    Received:    408

      87 |       
      88 |       // Allow small tolerance (5px) for rounding
    > 89 |       expect(bodyWidth).toBeLessThanOrEqual(viewportWidth + 5);
         |                         ^
      90 |     }
      91 |   });
      92 |
        at E:\dev\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:89:25

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-chromium\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › basic form interactions work" classname="basic-functionality.spec.js" time="1.946">
</testcase>
</testsuite>
<testsuite name="generated\wizardinputs.generated.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="chromium" tests="34" failures="0" skipped="0" time="150.5" errors="0">
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="1.796">
<system-out>
<![CDATA[Testing: percentage accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="4.889">
<system-out>
<![CDATA[Testing: percentage accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="2.788">
<system-out>
<![CDATA[Testing: percentage rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="2.178">
<system-out>
<![CDATA[Testing: percentage rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects string input" classname="generated\wizardinputs.generated.spec.js" time="10.896">
<system-out>
<![CDATA[Testing: percentage rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects null input" classname="generated\wizardinputs.generated.spec.js" time="1.744">
<system-out>
<![CDATA[Testing: percentage rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="4.766">
<system-out>
<![CDATA[Testing: currency accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="6.373">
<system-out>
<![CDATA[Testing: currency accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="6.173">
<system-out>
<![CDATA[Testing: currency rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="9.959">
<system-out>
<![CDATA[Testing: currency rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects string input" classname="generated\wizardinputs.generated.spec.js" time="4.791">
<system-out>
<![CDATA[Testing: currency rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects null input" classname="generated\wizardinputs.generated.spec.js" time="7.661">
<system-out>
<![CDATA[Testing: currency rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="2.928">
<system-out>
<![CDATA[Testing: returns accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="7.056">
<system-out>
<![CDATA[Testing: returns accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="6.508">
<system-out>
<![CDATA[Testing: returns rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="7.915">
<system-out>
<![CDATA[Testing: returns rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects string input" classname="generated\wizardinputs.generated.spec.js" time="7.588">
<system-out>
<![CDATA[Testing: returns rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects null input" classname="generated\wizardinputs.generated.spec.js" time="2.786">
<system-out>
<![CDATA[Testing: returns rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="2.461">
<system-out>
<![CDATA[Testing: growth accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="4.327">
<system-out>
<![CDATA[Testing: growth accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="3.828">
<system-out>
<![CDATA[Testing: growth rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="4.183">
<system-out>
<![CDATA[Testing: growth rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects string input" classname="generated\wizardinputs.generated.spec.js" time="4.254">
<system-out>
<![CDATA[Testing: growth rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects null input" classname="generated\wizardinputs.generated.spec.js" time="3.206">
<system-out>
<![CDATA[Testing: growth rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › keyboard navigation works correctly" classname="generated\wizardinputs.generated.spec.js" time="3.001">
<system-out>
<![CDATA[Testing: keyboard navigation works correctly
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › screen reader announcements are correct" classname="generated\wizardinputs.generated.spec.js" time="4.539">
<system-out>
<![CDATA[Testing: screen reader announcements are correct
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › error messages are announced" classname="generated\wizardinputs.generated.spec.js" time="2.373">
<system-out>
<![CDATA[Testing: error messages are announced
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › color contrast meets WCAG standards" classname="generated\wizardinputs.generated.spec.js" time="2.271">
<system-out>
<![CDATA[Testing: color contrast meets WCAG standards
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › renders within performance budget" classname="generated\wizardinputs.generated.spec.js" time="2.6">
<system-out>
<![CDATA[Testing: renders within performance budget
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › handles rapid input changes efficiently" classname="generated\wizardinputs.generated.spec.js" time="2.489">
<system-out>
<![CDATA[Testing: handles rapid input changes efficiently
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › calculation updates are debounced" classname="generated\wizardinputs.generated.spec.js" time="2.824">
<system-out>
<![CDATA[Testing: calculation updates are debounced
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › complete wizard flow successfully" classname="generated\wizardinputs.generated.spec.js" time="3.153">
<system-out>
<![CDATA[Testing: complete wizard flow successfully
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › recover from validation errors gracefully" classname="generated\wizardinputs.generated.spec.js" time="3.232">
<system-out>
<![CDATA[Testing: recover from validation errors gracefully
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › data persistence across page refresh" classname="generated\wizardinputs.generated.spec.js" time="2.964">
<system-out>
<![CDATA[Testing: data persistence across page refresh
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="mobile\mobile-specific.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="chromium" tests="8" failures="2" skipped="0" time="19.009" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › touch targets are large enough" classname="mobile\mobile-specific.spec.js" time="2.454">
<failure message="mobile-specific.spec.js:9:3 touch targets are large enough" type="FAILURE">
<![CDATA[  [chromium] › mobile\mobile-specific.spec.js:9:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › touch targets are large enough 

    Error: expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 44
    Received:    26

      19 |           // Minimum touch target size should be 44x44px (Apple guidelines)
      20 |           expect(box.width).toBeGreaterThanOrEqual(44);
    > 21 |           expect(box.height).toBeGreaterThanOrEqual(44);
         |                              ^
      22 |         }
      23 |       }
      24 |     }
        at E:\dev\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:21:30

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile keyboard interactions" classname="mobile\mobile-specific.spec.js" time="2.659">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › viewport meta tag prevents zoom" classname="mobile\mobile-specific.spec.js" time="2.208">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › orientation change handling" classname="mobile\mobile-specific.spec.js" time="2.382">
<failure message="mobile-specific.spec.js:54:3 orientation change handling" type="FAILURE">
<![CDATA[  [chromium] › mobile\mobile-specific.spec.js:54:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › orientation change handling 

    Error: expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 380
    Received:    408

      62 |     // Check no horizontal scroll in portrait
      63 |     let bodyWidth = await page.evaluate(() => document.body.scrollWidth);
    > 64 |     expect(bodyWidth).toBeLessThanOrEqual(375 + 5);
         |                       ^
      65 |     
      66 |     // Switch to landscape
      67 |     await page.setViewportSize({ width: 667, height: 375 });
        at E:\dev\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:64:23

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile-specific layout elements" classname="mobile\mobile-specific.spec.js" time="2.167">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › scroll behavior on mobile" classname="mobile\mobile-specific.spec.js" time="2.807">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile performance - load time" classname="mobile\mobile-specific.spec.js" time="2.785">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile gestures do not interfere" classname="mobile\mobile-specific.spec.js" time="1.547">
</testcase>
</testsuite>
<testsuite name="mobile\responsive.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="chromium" tests="18" failures="11" skipped="5" time="215.409" errors="0">
<testcase name="Mobile Responsiveness › displays correctly on mobile viewports" classname="mobile\responsive.spec.js" time="8.914">
<failure message="responsive.spec.js:8:3 displays correctly on mobile viewports" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:8:3 › Mobile Responsiveness › displays correctly on mobile viewports 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Liberty Tax • P&L Budget & Forecast')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Liberty Tax • P&L Budget & Forecast')


       8 |   test('displays correctly on mobile viewports', async ({ page }) => {
       9 |     // Test main elements are visible
    > 10 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
         |                                                                            ^
      11 |     await expect(page.locator('text=Quick Inputs')).toBeVisible()
      12 |     await expect(page.locator('text=Dashboard')).toBeVisible()
      13 |   })
        at E:\dev\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:10:76

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › region selector is accessible on mobile" classname="mobile\responsive.spec.js" time="7.676">
<failure message="responsive.spec.js:15:3 region selector is accessible on mobile" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:15:3 › Mobile Responsiveness › region selector is accessible on mobile 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('select[aria-label="Region"]')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      15 |   test('region selector is accessible on mobile', async ({ page }) => {
      16 |     const regionSelect = page.locator('select[aria-label="Region"]')
    > 17 |     await expect(regionSelect).toBeVisible()
         |                                ^
      18 |     
      19 |     // Should be large enough to tap
      20 |     const box = await regionSelect.boundingBox()
        at E:\dev\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:17:32

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › input fields are properly sized for mobile" classname="mobile\responsive.spec.js" time="1.909">
</testcase>
<testcase name="Mobile Responsiveness › KPI cards stack vertically on mobile" classname="mobile\responsive.spec.js" time="34.111">
<failure message="responsive.spec.js:39:3 KPI cards stack vertically on mobile" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:39:3 › Mobile Responsiveness › KPI cards stack vertically on mobile 

    Test timeout of 30000ms exceeded.

    Error: locator.boundingBox: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('.kpi').first()


      42 |     const secondCard = kpiCards.nth(1)
      43 |     
    > 44 |     const firstBox = await firstCard.boundingBox()
         |                                      ^
      45 |     const secondBox = await secondCard.boundingBox()
      46 |     
      47 |     // Second card should be below first card (higher Y position)
        at E:\dev\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:44:38

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › text is readable on mobile screens" classname="mobile\responsive.spec.js" time="3.288">
</testcase>
<testcase name="Mobile Responsiveness › footer content is accessible on mobile" classname="mobile\responsive.spec.js" time="7.642">
<failure message="responsive.spec.js:65:3 footer content is accessible on mobile" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:65:3 › Mobile Responsiveness › footer content is accessible on mobile 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.footer')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.footer')


      65 |   test('footer content is accessible on mobile', async ({ page }) => {
      66 |     const footer = page.locator('.footer')
    > 67 |     await expect(footer).toBeVisible()
         |                          ^
      68 |     
      69 |     // Footer text should be readable
      70 |     const footerText = await footer.textContent()
        at E:\dev\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:67:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › tap to focus inputs works correctly" classname="mobile\responsive.spec.js" time="1.428">
<failure message="responsive.spec.js:80:3 tap to focus inputs works correctly" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:80:3 › Touch Interactions › tap to focus inputs works correctly 

    Error: locator.tap: The page does not support tap. Use hasTouch context option to enable touch support.

      82 |     
      83 |     // Tap to focus
    > 84 |     await avgNetFeeInput.tap()
         |                          ^
      85 |     await expect(avgNetFeeInput).toBeFocused()
      86 |   })
      87 |
        at E:\dev\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:84:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › tap and hold does not interfere with input" classname="mobile\responsive.spec.js" time="1.55">
<failure message="responsive.spec.js:88:3 tap and hold does not interfere with input" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:88:3 › Touch Interactions › tap and hold does not interfere with input 

    Error: locator.tap: The page does not support tap. Use hasTouch context option to enable touch support.

      90 |     
      91 |     // Long press should not cause issues
    > 92 |     await avgNetFeeInput.tap({ force: true })
         |                          ^
      93 |     await page.waitForTimeout(1000) // Simulate long press
      94 |     
      95 |     // Should still be able to type
        at E:\dev\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:92:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › select dropdown works with touch" classname="mobile\responsive.spec.js" time="1.852">
<failure message="responsive.spec.js:100:3 select dropdown works with touch" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:100:3 › Touch Interactions › select dropdown works with touch 

    Error: locator.tap: The page does not support tap. Use hasTouch context option to enable touch support.

      101 |     const regionSelect = page.locator('select[aria-label="Region"]')
      102 |     
    > 103 |     await regionSelect.tap()
          |                        ^
      104 |     await regionSelect.selectOption('CA')
      105 |     
      106 |     await expect(regionSelect).toHaveValue('CA')
        at E:\dev\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:103:24

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › reset button responds to touch" classname="mobile\responsive.spec.js" time="33.81">
<failure message="responsive.spec.js:109:3 reset button responds to touch" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:109:3 › Touch Interactions › reset button responds to touch 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      112 |     
      113 |     // Change a value
    > 114 |     await avgNetFeeInput.fill('200')
          |                          ^
      115 |     
      116 |     // Tap reset
      117 |     await resetButton.tap()
        at E:\dev\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:114:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Performance › app loads quickly on mobile connections" classname="mobile\responsive.spec.js" time="35.354">
<failure message="responsive.spec.js:125:3 app loads quickly on mobile connections" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:125:3 › Mobile Performance › app loads quickly on mobile connections 

    Test timeout of 30000ms exceeded.

    Error: locator.waitFor: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('text=Liberty Tax • P&L Budget & Forecast') to be visible


      132 |     const startTime = Date.now()
      133 |     await page.goto('/')
    > 134 |     await page.locator('text=Liberty Tax • P&L Budget & Forecast').waitFor()
          |                                                                    ^
      135 |     const loadTime = Date.now() - startTime
      136 |     
      137 |     expect(loadTime).toBeLessThan(5000) // 5 seconds max on slow connection
        at E:\dev\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:134:68

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-P-b9ef1-ickly-on-mobile-connections-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-P-b9ef1-ickly-on-mobile-connections-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-P-b9ef1-ickly-on-mobile-connections-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-P-b9ef1-ickly-on-mobile-connections-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-P-b9ef1-ickly-on-mobile-connections-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-P-b9ef1-ickly-on-mobile-connections-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Performance › calculations remain responsive during rapid input" classname="mobile\responsive.spec.js" time="38.03">
<failure message="responsive.spec.js:140:3 calculations remain responsive during rapid input" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:140:3 › Mobile Performance › calculations remain responsive during rapid input 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      144 |     const values = ['100', '150', '200', '250', '300']
      145 |     for (const value of values) {
    > 146 |       await avgNetFeeInput.fill(value)
          |                            ^
      147 |       await page.waitForTimeout(100) // Brief pause between changes
      148 |     }
      149 |     
        at E:\dev\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:146:28

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-chromium\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › prevents zoom on input focus (if implemented)" classname="mobile\responsive.spec.js" time="36.581">
<failure message="responsive.spec.js:159:3 prevents zoom on input focus (if implemented)" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:159:3 › Mobile Specific Features › prevents zoom on input focus (if implemented) 

    Test timeout of 30000ms exceeded.

    Error: locator.getAttribute: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('meta[name="viewport"]')


      160 |     // Check if viewport meta tag prevents zoom
      161 |     const viewportMeta = page.locator('meta[name="viewport"]')
    > 162 |     const content = await viewportMeta.getAttribute('content')
          |                                        ^
      163 |     
      164 |     // This test depends on whether zoom prevention is desired
      165 |     // Some accessibility guidelines recommend allowing zoom
        at E:\dev\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:162:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--chromium\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › handles device orientation changes gracefully" classname="mobile\responsive.spec.js" time="1.38">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Specific Features › supports dark mode if device prefers it" classname="mobile\responsive.spec.js" time="1.884">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility on Mobile › maintains proper focus management" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility on Mobile › form labels work with screen readers" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility on Mobile › maintains sufficient color contrast" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="snapshots.spec.ts" timestamp="2025-09-25T13:01:31.192Z" hostname="chromium" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="UI Snapshots › capture key screens" classname="snapshots.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="wizard-flow-matrix.spec.ts" timestamp="2025-09-25T13:01:31.192Z" hostname="chromium" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Wizard Flow Matrix (Angular approx) › Scenario: US returns=500, fee=250, growth=5, other=0" classname="wizard-flow-matrix.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Wizard Flow Matrix (Angular approx) › Scenario: CA returns=1600, fee=250, growth=0, other=0" classname="wizard-flow-matrix.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="app.spec.ts" timestamp="2025-09-25T13:01:31.192Z" hostname="firefox" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="Liberty Tax P&amp;L Application › displays the main application interface" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › has correct initial values" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › enables TaxRush input when region is set to Canada" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › disables and resets TaxRush when switching to US" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › updates calculations when inputs change" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › persists data across page reloads" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › resets all values when reset button is clicked" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › displays KPI status colors correctly" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › shows pro-tips based on KPI status" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles edge case of zero returns" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles very large input values" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › maintains TaxRush stickiness in Canada" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › keyboard navigation works correctly" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance &amp; Responsiveness › loads within acceptable time" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance &amp; Responsiveness › calculations are performant" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="basic-functionality.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="firefox" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › homepage loads successfully" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › wizard can be opened" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › debug panel can be accessed" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › no JavaScript errors on page load" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › responsive design - no horizontal scroll" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › basic form interactions work" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="generated\wizardinputs.generated.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="firefox" tests="34" failures="0" skipped="34" time="0" errors="0">
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › keyboard navigation works correctly" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › screen reader announcements are correct" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › error messages are announced" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › color contrast meets WCAG standards" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › renders within performance budget" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › handles rapid input changes efficiently" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › calculation updates are debounced" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › complete wizard flow successfully" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › recover from validation errors gracefully" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › data persistence across page refresh" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile\mobile-specific.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="firefox" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › touch targets are large enough" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile keyboard interactions" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › viewport meta tag prevents zoom" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › orientation change handling" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile-specific layout elements" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › scroll behavior on mobile" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile performance - load time" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile gestures do not interfere" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile\responsive.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="firefox" tests="18" failures="0" skipped="18" time="0" errors="0">
<testcase name="Mobile Responsiveness › displays correctly on mobile viewports" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › region selector is accessible on mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › input fields are properly sized for mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › KPI cards stack vertically on mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › text is readable on mobile screens" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › footer content is accessible on mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › tap to focus inputs works correctly" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › tap and hold does not interfere with input" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › select dropdown works with touch" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › reset button responds to touch" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Performance › app loads quickly on mobile connections" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Performance › calculations remain responsive during rapid input" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Specific Features › prevents zoom on input focus (if implemented)" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Specific Features › handles device orientation changes gracefully" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Specific Features › supports dark mode if device prefers it" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility on Mobile › maintains proper focus management" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility on Mobile › form labels work with screen readers" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility on Mobile › maintains sufficient color contrast" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="snapshots.spec.ts" timestamp="2025-09-25T13:01:31.192Z" hostname="firefox" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="UI Snapshots › capture key screens" classname="snapshots.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="wizard-flow-matrix.spec.ts" timestamp="2025-09-25T13:01:31.192Z" hostname="firefox" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Wizard Flow Matrix (Angular approx) › Scenario: US returns=500, fee=250, growth=5, other=0" classname="wizard-flow-matrix.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Wizard Flow Matrix (Angular approx) › Scenario: CA returns=1600, fee=250, growth=0, other=0" classname="wizard-flow-matrix.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="app.spec.ts" timestamp="2025-09-25T13:01:31.192Z" hostname="webkit" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="Liberty Tax P&amp;L Application › displays the main application interface" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › has correct initial values" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › enables TaxRush input when region is set to Canada" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › disables and resets TaxRush when switching to US" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › updates calculations when inputs change" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › persists data across page reloads" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › resets all values when reset button is clicked" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › displays KPI status colors correctly" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › shows pro-tips based on KPI status" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles edge case of zero returns" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles very large input values" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › maintains TaxRush stickiness in Canada" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › keyboard navigation works correctly" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance &amp; Responsiveness › loads within acceptable time" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance &amp; Responsiveness › calculations are performant" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="basic-functionality.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="webkit" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › homepage loads successfully" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › wizard can be opened" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › debug panel can be accessed" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › no JavaScript errors on page load" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › responsive design - no horizontal scroll" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › basic form interactions work" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="generated\wizardinputs.generated.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="webkit" tests="34" failures="0" skipped="34" time="0" errors="0">
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › keyboard navigation works correctly" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › screen reader announcements are correct" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › error messages are announced" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › color contrast meets WCAG standards" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › renders within performance budget" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › handles rapid input changes efficiently" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › calculation updates are debounced" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › complete wizard flow successfully" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › recover from validation errors gracefully" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › data persistence across page refresh" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile\mobile-specific.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="webkit" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › touch targets are large enough" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile keyboard interactions" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › viewport meta tag prevents zoom" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › orientation change handling" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile-specific layout elements" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › scroll behavior on mobile" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile performance - load time" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile gestures do not interfere" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile\responsive.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="webkit" tests="18" failures="0" skipped="18" time="0" errors="0">
<testcase name="Mobile Responsiveness › displays correctly on mobile viewports" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › region selector is accessible on mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › input fields are properly sized for mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › KPI cards stack vertically on mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › text is readable on mobile screens" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › footer content is accessible on mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › tap to focus inputs works correctly" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › tap and hold does not interfere with input" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › select dropdown works with touch" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › reset button responds to touch" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Performance › app loads quickly on mobile connections" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Performance › calculations remain responsive during rapid input" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Specific Features › prevents zoom on input focus (if implemented)" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Specific Features › handles device orientation changes gracefully" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Specific Features › supports dark mode if device prefers it" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility on Mobile › maintains proper focus management" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility on Mobile › form labels work with screen readers" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility on Mobile › maintains sufficient color contrast" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="snapshots.spec.ts" timestamp="2025-09-25T13:01:31.192Z" hostname="webkit" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="UI Snapshots › capture key screens" classname="snapshots.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="wizard-flow-matrix.spec.ts" timestamp="2025-09-25T13:01:31.192Z" hostname="webkit" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Wizard Flow Matrix (Angular approx) › Scenario: US returns=500, fee=250, growth=5, other=0" classname="wizard-flow-matrix.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Wizard Flow Matrix (Angular approx) › Scenario: CA returns=1600, fee=250, growth=0, other=0" classname="wizard-flow-matrix.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="app.spec.ts" timestamp="2025-09-25T13:01:31.192Z" hostname="Mobile Chrome" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="Liberty Tax P&amp;L Application › displays the main application interface" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › has correct initial values" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › enables TaxRush input when region is set to Canada" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › disables and resets TaxRush when switching to US" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › updates calculations when inputs change" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › persists data across page reloads" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › resets all values when reset button is clicked" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › displays KPI status colors correctly" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › shows pro-tips based on KPI status" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles edge case of zero returns" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles very large input values" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › maintains TaxRush stickiness in Canada" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › keyboard navigation works correctly" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance &amp; Responsiveness › loads within acceptable time" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance &amp; Responsiveness › calculations are performant" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="basic-functionality.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="Mobile Chrome" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › homepage loads successfully" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › wizard can be opened" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › debug panel can be accessed" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › no JavaScript errors on page load" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › responsive design - no horizontal scroll" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › basic form interactions work" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="generated\wizardinputs.generated.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="Mobile Chrome" tests="34" failures="0" skipped="34" time="0" errors="0">
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › keyboard navigation works correctly" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › screen reader announcements are correct" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › error messages are announced" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › color contrast meets WCAG standards" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › renders within performance budget" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › handles rapid input changes efficiently" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › calculation updates are debounced" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › complete wizard flow successfully" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › recover from validation errors gracefully" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › data persistence across page refresh" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile\mobile-specific.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="Mobile Chrome" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › touch targets are large enough" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile keyboard interactions" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › viewport meta tag prevents zoom" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › orientation change handling" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile-specific layout elements" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › scroll behavior on mobile" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile performance - load time" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile gestures do not interfere" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile\responsive.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="Mobile Chrome" tests="18" failures="0" skipped="18" time="0" errors="0">
<testcase name="Mobile Responsiveness › displays correctly on mobile viewports" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › region selector is accessible on mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › input fields are properly sized for mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › KPI cards stack vertically on mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › text is readable on mobile screens" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › footer content is accessible on mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › tap to focus inputs works correctly" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › tap and hold does not interfere with input" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › select dropdown works with touch" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › reset button responds to touch" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Performance › app loads quickly on mobile connections" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Performance › calculations remain responsive during rapid input" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Specific Features › prevents zoom on input focus (if implemented)" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Specific Features › handles device orientation changes gracefully" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Specific Features › supports dark mode if device prefers it" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility on Mobile › maintains proper focus management" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility on Mobile › form labels work with screen readers" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility on Mobile › maintains sufficient color contrast" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="snapshots.spec.ts" timestamp="2025-09-25T13:01:31.192Z" hostname="Mobile Chrome" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="UI Snapshots › capture key screens" classname="snapshots.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="wizard-flow-matrix.spec.ts" timestamp="2025-09-25T13:01:31.192Z" hostname="Mobile Chrome" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Wizard Flow Matrix (Angular approx) › Scenario: US returns=500, fee=250, growth=5, other=0" classname="wizard-flow-matrix.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Wizard Flow Matrix (Angular approx) › Scenario: CA returns=1600, fee=250, growth=0, other=0" classname="wizard-flow-matrix.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="app.spec.ts" timestamp="2025-09-25T13:01:31.192Z" hostname="Mobile Safari" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="Liberty Tax P&amp;L Application › displays the main application interface" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › has correct initial values" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › enables TaxRush input when region is set to Canada" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › disables and resets TaxRush when switching to US" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › updates calculations when inputs change" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › persists data across page reloads" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › resets all values when reset button is clicked" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › displays KPI status colors correctly" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › shows pro-tips based on KPI status" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles edge case of zero returns" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles very large input values" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › maintains TaxRush stickiness in Canada" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › keyboard navigation works correctly" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance &amp; Responsiveness › loads within acceptable time" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance &amp; Responsiveness › calculations are performant" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="basic-functionality.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="Mobile Safari" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › homepage loads successfully" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › wizard can be opened" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › debug panel can be accessed" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › no JavaScript errors on page load" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › responsive design - no horizontal scroll" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › basic form interactions work" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="generated\wizardinputs.generated.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="Mobile Safari" tests="34" failures="0" skipped="34" time="0" errors="0">
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › keyboard navigation works correctly" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › screen reader announcements are correct" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › error messages are announced" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › color contrast meets WCAG standards" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › renders within performance budget" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › handles rapid input changes efficiently" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › calculation updates are debounced" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › complete wizard flow successfully" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › recover from validation errors gracefully" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › data persistence across page refresh" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile\mobile-specific.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="Mobile Safari" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › touch targets are large enough" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile keyboard interactions" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › viewport meta tag prevents zoom" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › orientation change handling" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile-specific layout elements" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › scroll behavior on mobile" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile performance - load time" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile gestures do not interfere" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile\responsive.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="Mobile Safari" tests="18" failures="0" skipped="18" time="0" errors="0">
<testcase name="Mobile Responsiveness › displays correctly on mobile viewports" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › region selector is accessible on mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › input fields are properly sized for mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › KPI cards stack vertically on mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › text is readable on mobile screens" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › footer content is accessible on mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › tap to focus inputs works correctly" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › tap and hold does not interfere with input" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › select dropdown works with touch" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › reset button responds to touch" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Performance › app loads quickly on mobile connections" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Performance › calculations remain responsive during rapid input" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Specific Features › prevents zoom on input focus (if implemented)" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Specific Features › handles device orientation changes gracefully" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Specific Features › supports dark mode if device prefers it" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility on Mobile › maintains proper focus management" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility on Mobile › form labels work with screen readers" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility on Mobile › maintains sufficient color contrast" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="snapshots.spec.ts" timestamp="2025-09-25T13:01:31.192Z" hostname="Mobile Safari" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="UI Snapshots › capture key screens" classname="snapshots.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="wizard-flow-matrix.spec.ts" timestamp="2025-09-25T13:01:31.192Z" hostname="Mobile Safari" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Wizard Flow Matrix (Angular approx) › Scenario: US returns=500, fee=250, growth=5, other=0" classname="wizard-flow-matrix.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Wizard Flow Matrix (Angular approx) › Scenario: CA returns=1600, fee=250, growth=0, other=0" classname="wizard-flow-matrix.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="app.spec.ts" timestamp="2025-09-25T13:01:31.192Z" hostname="Microsoft Edge" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="Liberty Tax P&amp;L Application › displays the main application interface" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › has correct initial values" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › enables TaxRush input when region is set to Canada" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › disables and resets TaxRush when switching to US" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › updates calculations when inputs change" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › persists data across page reloads" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › resets all values when reset button is clicked" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › displays KPI status colors correctly" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › shows pro-tips based on KPI status" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles edge case of zero returns" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles very large input values" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › maintains TaxRush stickiness in Canada" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › keyboard navigation works correctly" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance &amp; Responsiveness › loads within acceptable time" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance &amp; Responsiveness › calculations are performant" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="basic-functionality.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="Microsoft Edge" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › homepage loads successfully" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › wizard can be opened" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › debug panel can be accessed" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › no JavaScript errors on page load" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › responsive design - no horizontal scroll" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › basic form interactions work" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="generated\wizardinputs.generated.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="Microsoft Edge" tests="34" failures="0" skipped="34" time="0" errors="0">
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › keyboard navigation works correctly" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › screen reader announcements are correct" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › error messages are announced" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › color contrast meets WCAG standards" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › renders within performance budget" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › handles rapid input changes efficiently" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › calculation updates are debounced" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › complete wizard flow successfully" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › recover from validation errors gracefully" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › data persistence across page refresh" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile\mobile-specific.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="Microsoft Edge" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › touch targets are large enough" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile keyboard interactions" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › viewport meta tag prevents zoom" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › orientation change handling" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile-specific layout elements" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › scroll behavior on mobile" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile performance - load time" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile gestures do not interfere" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile\responsive.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="Microsoft Edge" tests="18" failures="0" skipped="18" time="0" errors="0">
<testcase name="Mobile Responsiveness › displays correctly on mobile viewports" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › region selector is accessible on mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › input fields are properly sized for mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › KPI cards stack vertically on mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › text is readable on mobile screens" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › footer content is accessible on mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › tap to focus inputs works correctly" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › tap and hold does not interfere with input" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › select dropdown works with touch" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › reset button responds to touch" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Performance › app loads quickly on mobile connections" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Performance › calculations remain responsive during rapid input" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Specific Features › prevents zoom on input focus (if implemented)" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Specific Features › handles device orientation changes gracefully" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Specific Features › supports dark mode if device prefers it" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility on Mobile › maintains proper focus management" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility on Mobile › form labels work with screen readers" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility on Mobile › maintains sufficient color contrast" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="snapshots.spec.ts" timestamp="2025-09-25T13:01:31.192Z" hostname="Microsoft Edge" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="UI Snapshots › capture key screens" classname="snapshots.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="wizard-flow-matrix.spec.ts" timestamp="2025-09-25T13:01:31.192Z" hostname="Microsoft Edge" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Wizard Flow Matrix (Angular approx) › Scenario: US returns=500, fee=250, growth=5, other=0" classname="wizard-flow-matrix.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Wizard Flow Matrix (Angular approx) › Scenario: CA returns=1600, fee=250, growth=0, other=0" classname="wizard-flow-matrix.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="app.spec.ts" timestamp="2025-09-25T13:01:31.192Z" hostname="Google Chrome" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="Liberty Tax P&amp;L Application › displays the main application interface" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › has correct initial values" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › enables TaxRush input when region is set to Canada" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › disables and resets TaxRush when switching to US" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › updates calculations when inputs change" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › persists data across page reloads" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › resets all values when reset button is clicked" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › displays KPI status colors correctly" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › shows pro-tips based on KPI status" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles edge case of zero returns" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles very large input values" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › maintains TaxRush stickiness in Canada" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › keyboard navigation works correctly" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance &amp; Responsiveness › loads within acceptable time" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance &amp; Responsiveness › calculations are performant" classname="app.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="basic-functionality.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="Google Chrome" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › homepage loads successfully" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › wizard can be opened" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › debug panel can be accessed" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › no JavaScript errors on page load" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › responsive design - no horizontal scroll" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › basic form interactions work" classname="basic-functionality.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="generated\wizardinputs.generated.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="Google Chrome" tests="34" failures="0" skipped="34" time="0" errors="0">
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › keyboard navigation works correctly" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › screen reader announcements are correct" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › error messages are announced" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › color contrast meets WCAG standards" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › renders within performance budget" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › handles rapid input changes efficiently" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › calculation updates are debounced" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › complete wizard flow successfully" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › recover from validation errors gracefully" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › data persistence across page refresh" classname="generated\wizardinputs.generated.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile\mobile-specific.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="Google Chrome" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › touch targets are large enough" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile keyboard interactions" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › viewport meta tag prevents zoom" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › orientation change handling" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile-specific layout elements" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › scroll behavior on mobile" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile performance - load time" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile gestures do not interfere" classname="mobile\mobile-specific.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile\responsive.spec.js" timestamp="2025-09-25T13:01:31.192Z" hostname="Google Chrome" tests="18" failures="0" skipped="18" time="0" errors="0">
<testcase name="Mobile Responsiveness › displays correctly on mobile viewports" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › region selector is accessible on mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › input fields are properly sized for mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › KPI cards stack vertically on mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › text is readable on mobile screens" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › footer content is accessible on mobile" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › tap to focus inputs works correctly" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › tap and hold does not interfere with input" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › select dropdown works with touch" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Touch Interactions › reset button responds to touch" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Performance › app loads quickly on mobile connections" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Performance › calculations remain responsive during rapid input" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Specific Features › prevents zoom on input focus (if implemented)" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Specific Features › handles device orientation changes gracefully" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Specific Features › supports dark mode if device prefers it" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility on Mobile › maintains proper focus management" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility on Mobile › form labels work with screen readers" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility on Mobile › maintains sufficient color contrast" classname="mobile\responsive.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="snapshots.spec.ts" timestamp="2025-09-25T13:01:31.192Z" hostname="Google Chrome" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="UI Snapshots › capture key screens" classname="snapshots.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="wizard-flow-matrix.spec.ts" timestamp="2025-09-25T13:01:31.192Z" hostname="Google Chrome" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Wizard Flow Matrix (Angular approx) › Scenario: US returns=500, fee=250, growth=5, other=0" classname="wizard-flow-matrix.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Wizard Flow Matrix (Angular approx) › Scenario: CA returns=1600, fee=250, growth=0, other=0" classname="wizard-flow-matrix.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
</testsuites>