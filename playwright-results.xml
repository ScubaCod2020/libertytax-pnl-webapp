<testsuites id="" name="" tests="574" failures="253" skipped="9" errors="0" time="1026.024459">
<testsuite name="app.spec.ts" timestamp="2025-09-21T14:00:33.654Z" hostname="chromium" tests="15" failures="14" skipped="0" time="169.503" errors="0">
<testcase name="Liberty Tax P&amp;L Application › displays the main application interface" classname="app.spec.ts" time="10.284">
<failure message="app.spec.ts:65:3 displays the main application interface" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:65:3 › Liberty Tax P&L Application › displays the main application interface 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Quick Inputs')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Quick Inputs')


      68 |     
      69 |     // Check main sections are present
    > 70 |     await expect(page.locator('text=Quick Inputs')).toBeVisible()
         |                                                     ^
      71 |     await expect(page.locator('text=Dashboard')).toBeVisible()
      72 |     await expect(page.locator('text=Income Drivers')).toBeVisible()
      73 |     await expect(page.locator('text=Expense Percentages')).toBeVisible()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:70:53

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › has correct initial values" classname="app.spec.ts" time="4.538">
<failure message="app.spec.ts:76:3 has correct initial values" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:76:3 › Liberty Tax P&L Application › has correct initial values ─────────

    Error: expect.toHaveValue: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - Expect "toHaveValue" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      75 |
      76 |   test('has correct initial values', async ({ page }) => {
    > 77 |     await expect(pnlPage.regionSelect).toHaveValue('US')
         |                                        ^
      78 |     await expect(pnlPage.avgNetFeeInput).toHaveValue('125')
      79 |     await expect(pnlPage.taxPrepReturnsInput).toHaveValue('1600')
      80 |     await expect(pnlPage.taxRushReturnsInput).toHaveValue('0')
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:77:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › enables TaxRush input when region is set to Canada" classname="app.spec.ts" time="4.149">
<failure message="app.spec.ts:84:3 enables TaxRush input when region is set to Canada" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:84:3 › Liberty Tax P&L Application › enables TaxRush input when region is set to Canada 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:85:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › disables and resets TaxRush when switching to US" classname="app.spec.ts" time="4.534">
<failure message="app.spec.ts:89:3 disables and resets TaxRush when switching to US" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:89:3 › Liberty Tax P&L Application › disables and resets TaxRush when switching to US 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:91:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › updates calculations when inputs change" classname="app.spec.ts" time="31.481">
<failure message="app.spec.ts:101:3 updates calculations when inputs change" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:101:3 › Liberty Tax P&L Application › updates calculations when inputs change 

    Test timeout of 30000ms exceeded.

    Error: locator.textContent: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('.kpi:has-text("Net Income") .value')


      101 |   test('updates calculations when inputs change', async ({ page }) => {
      102 |     // Get initial net income
    > 103 |     const initialNetIncome = await pnlPage.netIncomeValue.textContent()
          |                                                           ^
      104 |     
      105 |     // Change average net fee
      106 |     await pnlPage.setAvgNetFee(200)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:103:59

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › persists data across page reloads" classname="app.spec.ts" time="1.1">
<failure message="app.spec.ts:114:3 persists data across page reloads" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:114:3 › Liberty Tax P&L Application › persists data across page reloads ─

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:116:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › resets all values when reset button is clicked" classname="app.spec.ts" time="1.082">
<failure message="app.spec.ts:134:3 resets all values when reset button is clicked" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:134:3 › Liberty Tax P&L Application › resets all values when reset button is clicked 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:136:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › displays KPI status colors correctly" classname="app.spec.ts" time="6.307">
<failure message="app.spec.ts:150:3 displays KPI status colors correctly" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:150:3 › Liberty Tax P&L Application › displays KPI status colors correctly 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.kpi:has-text("Net Income")')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.kpi:has-text("Net Income")')


      154 |     const costPerReturnKPI = page.locator('.kpi:has-text("Cost / Return")')
      155 |     
    > 156 |     await expect(netIncomeKPI).toBeVisible()
          |                                ^
      157 |     await expect(netMarginKPI).toBeVisible()
      158 |     await expect(costPerReturnKPI).toBeVisible()
      159 |     
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:156:32

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › shows pro-tips based on KPI status" classname="app.spec.ts" time="6.355">
<failure message="app.spec.ts:170:3 shows pro-tips based on KPI status" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:170:3 › Liberty Tax P&L Application › shows pro-tips based on KPI status 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.card:has-text("Pro-Tips")')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.card:has-text("Pro-Tips")')


      174 |     // There should be some tips shown (content depends on current KPI status)
      175 |     const proTipsSection = page.locator('.card:has-text("Pro-Tips")')
    > 176 |     await expect(proTipsSection).toBeVisible()
          |                                  ^
      177 |   })
      178 |
      179 |   test('handles edge case of zero returns', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:176:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles edge case of zero returns" classname="app.spec.ts" time="31.882">
<failure message="app.spec.ts:179:3 handles edge case of zero returns" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:179:3 › Liberty Tax P&L Application › handles edge case of zero returns ─

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('label:has-text("Tax Prep Returns") + input')
        - locator resolved to <input id="ret-lbl" value="1600" aria-label="Tax Prep Returns"/>
        - fill("0")
      - attempting fill action
        2 × waiting for element to be visible, enabled and editable
          - element is not visible
        - retrying fill action
        - waiting 20ms
        2 × waiting for element to be visible, enabled and editable
          - element is not visible
        - retrying fill action
          - waiting 100ms
        58 × waiting for element to be visible, enabled and editable
           - element is not visible
         - retrying fill action
           - waiting 500ms


      28 |
      29 |   async setTaxPrepReturns(value: number) {
    > 30 |     await this.taxPrepReturnsInput.fill(value.toString())
         |                                    ^
      31 |     await this.taxPrepReturnsInput.blur()
      32 |   }
      33 |
        at PnLPage.setTaxPrepReturns (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:30:36)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:180:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles very large input values" classname="app.spec.ts" time="32.142">
<failure message="app.spec.ts:189:3 handles very large input values" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:189:3 › Liberty Tax P&L Application › handles very large input values ───

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      23 |
      24 |   async setAvgNetFee(value: number) {
    > 25 |     await this.avgNetFeeInput.fill(value.toString())
         |                               ^
      26 |     await this.avgNetFeeInput.blur()
      27 |   }
      28 |
        at PnLPage.setAvgNetFee (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:25:31)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:190:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › maintains TaxRush stickiness in Canada" classname="app.spec.ts" time="0.856">
<failure message="app.spec.ts:202:3 maintains TaxRush stickiness in Canada" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:202:3 › Liberty Tax P&L Application › maintains TaxRush stickiness in Canada 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:204:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › keyboard navigation works correctly" classname="app.spec.ts" time="0.738">
<failure message="app.spec.ts:212:3 keyboard navigation works correctly" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:212:3 › Liberty Tax P&L Application › keyboard navigation works correctly 

    Error: expect.toBeFocused: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - Expect "toBeFocused" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      213 |     // Test tab navigation through inputs
      214 |     await page.keyboard.press('Tab')
    > 215 |     await expect(pnlPage.regionSelect).toBeFocused()
          |                                        ^
      216 |     
      217 |     // Continue tabbing to inputs
      218 |     await page.keyboard.press('Tab')
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:215:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Performance &amp; Responsiveness › loads within acceptable time" classname="app.spec.ts" time="0.709">
</testcase>
<testcase name="Performance &amp; Responsiveness › calculations are performant" classname="app.spec.ts" time="33.346">
<failure message="app.spec.ts:234:3 calculations are performant" type="FAILURE">
<![CDATA[  [chromium] › app.spec.ts:234:3 › Performance & Responsiveness › calculations are performant ──────

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      23 |
      24 |   async setAvgNetFee(value: number) {
    > 25 |     await this.avgNetFeeInput.fill(value.toString())
         |                               ^
      26 |     await this.avgNetFeeInput.blur()
      27 |   }
      28 |
        at PnLPage.setAvgNetFee (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:25:31)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:242:21

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-chromium\video.webm]]

[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-chromium\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="basic-functionality.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="chromium" tests="6" failures="3" skipped="1" time="11.114" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › homepage loads successfully" classname="basic-functionality.spec.js" time="0.877">
<failure message="basic-functionality.spec.js:9:3 homepage loads successfully" type="FAILURE">
<![CDATA[  [chromium] › basic-functionality.spec.js:9:3 › Liberty Tax P&L Webapp - Basic Functionality › homepage loads successfully 

    Error: expect(received).toBeTruthy()

    Received: false

      16 |     // Look for key elements that should be present
      17 |     const hasMainContent = await page.locator('main, #root, .app, [class*="app"]').first().isVisible();
    > 18 |     expect(hasMainContent).toBeTruthy();
         |                            ^
      19 |   });
      20 |
      21 |   test('wizard can be opened', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:18:28

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-chromium\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › wizard can be opened" classname="basic-functionality.spec.js" time="6.224">
<failure message="basic-functionality.spec.js:21:3 wizard can be opened" type="FAILURE">
<![CDATA[  [chromium] › basic-functionality.spec.js:21:3 › Liberty Tax P&L Webapp - Basic Functionality › wizard can be opened 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('h1, h2, h3, [class*="wizard"], [id*="wizard"]').filter({ hasText: /welcome|region|store|step/i }).first()
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('h1, h2, h3, [class*="wizard"], [id*="wizard"]').filter({ hasText: /welcome|region|store|step/i }).first()


      33 |       });
      34 |       
    > 35 |       await expect(wizardContent.first()).toBeVisible({ timeout: 5000 });
         |                                           ^
      36 |     } else {
      37 |       test.skip('Start wizard button not found - may be different implementation');
      38 |     }
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:35:43

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-chromium\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › debug panel can be accessed" classname="basic-functionality.spec.js" time="0.65">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › no JavaScript errors on page load" classname="basic-functionality.spec.js" time="1.12">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › responsive design - no horizontal scroll" classname="basic-functionality.spec.js" time="1.245">
<failure message="basic-functionality.spec.js:71:3 responsive design - no horizontal scroll" type="FAILURE">
<![CDATA[  [chromium] › basic-functionality.spec.js:71:3 › Liberty Tax P&L Webapp - Basic Functionality › responsive design - no horizontal scroll 

    Error: expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 380
    Received:    565

      87 |       
      88 |       // Allow small tolerance (5px) for rounding
    > 89 |       expect(bodyWidth).toBeLessThanOrEqual(viewportWidth + 5);
         |                         ^
      90 |     }
      91 |   });
      92 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:89:25

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-chromium\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › basic form interactions work" classname="basic-functionality.spec.js" time="0.998">
</testcase>
</testsuite>
<testsuite name="generated\wizardinputs.generated.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="chromium" tests="34" failures="0" skipped="0" time="36.093" errors="0">
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0.93">
<system-out>
<![CDATA[Testing: percentage accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0.925">
<system-out>
<![CDATA[Testing: percentage accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0.775">
<system-out>
<![CDATA[Testing: percentage rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0.844">
<system-out>
<![CDATA[Testing: percentage rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0.882">
<system-out>
<![CDATA[Testing: percentage rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects null input" classname="generated\wizardinputs.generated.spec.js" time="1.02">
<system-out>
<![CDATA[Testing: percentage rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0.894">
<system-out>
<![CDATA[Testing: currency accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="1.014">
<system-out>
<![CDATA[Testing: currency accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0.822">
<system-out>
<![CDATA[Testing: currency rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0.844">
<system-out>
<![CDATA[Testing: currency rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0.83">
<system-out>
<![CDATA[Testing: currency rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0.916">
<system-out>
<![CDATA[Testing: currency rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0.865">
<system-out>
<![CDATA[Testing: returns accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="1.116">
<system-out>
<![CDATA[Testing: returns accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="1.054">
<system-out>
<![CDATA[Testing: returns rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="1.092">
<system-out>
<![CDATA[Testing: returns rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects string input" classname="generated\wizardinputs.generated.spec.js" time="1.237">
<system-out>
<![CDATA[Testing: returns rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects null input" classname="generated\wizardinputs.generated.spec.js" time="1.198">
<system-out>
<![CDATA[Testing: returns rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="1.258">
<system-out>
<![CDATA[Testing: growth accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="1.211">
<system-out>
<![CDATA[Testing: growth accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="1.055">
<system-out>
<![CDATA[Testing: growth rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0.836">
<system-out>
<![CDATA[Testing: growth rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0.89">
<system-out>
<![CDATA[Testing: growth rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects null input" classname="generated\wizardinputs.generated.spec.js" time="1.193">
<system-out>
<![CDATA[Testing: growth rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › keyboard navigation works correctly" classname="generated\wizardinputs.generated.spec.js" time="1.04">
<system-out>
<![CDATA[Testing: keyboard navigation works correctly
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › screen reader announcements are correct" classname="generated\wizardinputs.generated.spec.js" time="1.067">
<system-out>
<![CDATA[Testing: screen reader announcements are correct
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › error messages are announced" classname="generated\wizardinputs.generated.spec.js" time="1.328">
<system-out>
<![CDATA[Testing: error messages are announced
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › color contrast meets WCAG standards" classname="generated\wizardinputs.generated.spec.js" time="1.245">
<system-out>
<![CDATA[Testing: color contrast meets WCAG standards
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › renders within performance budget" classname="generated\wizardinputs.generated.spec.js" time="1.092">
<system-out>
<![CDATA[Testing: renders within performance budget
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › handles rapid input changes efficiently" classname="generated\wizardinputs.generated.spec.js" time="0.95">
<system-out>
<![CDATA[Testing: handles rapid input changes efficiently
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › calculation updates are debounced" classname="generated\wizardinputs.generated.spec.js" time="1.196">
<system-out>
<![CDATA[Testing: calculation updates are debounced
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › complete wizard flow successfully" classname="generated\wizardinputs.generated.spec.js" time="1.406">
<system-out>
<![CDATA[Testing: complete wizard flow successfully
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › recover from validation errors gracefully" classname="generated\wizardinputs.generated.spec.js" time="1.431">
<system-out>
<![CDATA[Testing: recover from validation errors gracefully
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › data persistence across page refresh" classname="generated\wizardinputs.generated.spec.js" time="1.637">
<system-out>
<![CDATA[Testing: data persistence across page refresh
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="mobile\mobile-specific.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="chromium" tests="8" failures="3" skipped="0" time="8.587" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › touch targets are large enough" classname="mobile\mobile-specific.spec.js" time="1.038">
<failure message="mobile-specific.spec.js:9:3 touch targets are large enough" type="FAILURE">
<![CDATA[  [chromium] › mobile\mobile-specific.spec.js:9:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › touch targets are large enough 

    Error: expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 44
    Received:    27

      19 |           // Minimum touch target size should be 44x44px (Apple guidelines)
      20 |           expect(box.width).toBeGreaterThanOrEqual(44);
    > 21 |           expect(box.height).toBeGreaterThanOrEqual(44);
         |                              ^
      22 |         }
      23 |       }
      24 |     }
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:21:30

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile keyboard interactions" classname="mobile\mobile-specific.spec.js" time="0.95">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › viewport meta tag prevents zoom" classname="mobile\mobile-specific.spec.js" time="1.115">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › orientation change handling" classname="mobile\mobile-specific.spec.js" time="1.394">
<failure message="mobile-specific.spec.js:54:3 orientation change handling" type="FAILURE">
<![CDATA[  [chromium] › mobile\mobile-specific.spec.js:54:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › orientation change handling 

    Error: expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 380
    Received:    565

      62 |     // Check no horizontal scroll in portrait
      63 |     let bodyWidth = await page.evaluate(() => document.body.scrollWidth);
    > 64 |     expect(bodyWidth).toBeLessThanOrEqual(375 + 5);
         |                       ^
      65 |     
      66 |     // Switch to landscape
      67 |     await page.setViewportSize({ width: 667, height: 375 });
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:64:23

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile-specific layout elements" classname="mobile\mobile-specific.spec.js" time="0.702">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › scroll behavior on mobile" classname="mobile\mobile-specific.spec.js" time="1.1">
<failure message="mobile-specific.spec.js:93:3 scroll behavior on mobile" type="FAILURE">
<![CDATA[  [chromium] › mobile\mobile-specific.spec.js:93:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › scroll behavior on mobile 

    Error: expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 1285
    Received:    1412

      105 |       
      106 |       // Should not have horizontal scroll
    > 107 |       expect(dimensions.scrollWidth).toBeLessThanOrEqual(dimensions.clientWidth + 5);
          |                                      ^
      108 |       
      109 |       // Should be able to scroll vertically if content is tall
      110 |       if (dimensions.scrollHeight > dimensions.clientHeight) {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:107:38

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile performance - load time" classname="mobile\mobile-specific.spec.js" time="1.537">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile gestures do not interfere" classname="mobile\mobile-specific.spec.js" time="0.751">
</testcase>
</testsuite>
<testsuite name="mobile\responsive.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="chromium" tests="18" failures="15" skipped="0" time="196.268" errors="0">
<testcase name="Mobile Responsiveness › displays correctly on mobile viewports" classname="mobile\responsive.spec.js" time="6.215">
<failure message="responsive.spec.js:8:3 displays correctly on mobile viewports" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:8:3 › Mobile Responsiveness › displays correctly on mobile viewports 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Quick Inputs')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Quick Inputs')


       9 |     // Test main elements are visible
      10 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
    > 11 |     await expect(page.locator('text=Quick Inputs')).toBeVisible()
         |                                                     ^
      12 |     await expect(page.locator('text=Dashboard')).toBeVisible()
      13 |   })
      14 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:11:53

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › region selector is accessible on mobile" classname="mobile\responsive.spec.js" time="1.108">
<failure message="responsive.spec.js:15:3 region selector is accessible on mobile" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:15:3 › Mobile Responsiveness › region selector is accessible on mobile 

    Error: expect.toBeVisible: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      15 |   test('region selector is accessible on mobile', async ({ page }) => {
      16 |     const regionSelect = page.locator('select[aria-label="Region"]')
    > 17 |     await expect(regionSelect).toBeVisible()
         |                                ^
      18 |     
      19 |     // Should be large enough to tap
      20 |     const box = await regionSelect.boundingBox()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:17:32

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › input fields are properly sized for mobile" classname="mobile\responsive.spec.js" time="0.756">
</testcase>
<testcase name="Mobile Responsiveness › KPI cards stack vertically on mobile" classname="mobile\responsive.spec.js" time="31.833">
<failure message="responsive.spec.js:39:3 KPI cards stack vertically on mobile" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:39:3 › Mobile Responsiveness › KPI cards stack vertically on mobile 

    Test timeout of 30000ms exceeded.

    Error: locator.boundingBox: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('.kpi').first()


      42 |     const secondCard = kpiCards.nth(1)
      43 |     
    > 44 |     const firstBox = await firstCard.boundingBox()
         |                                      ^
      45 |     const secondBox = await secondCard.boundingBox()
      46 |     
      47 |     // Second card should be below first card (higher Y position)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:44:38

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › text is readable on mobile screens" classname="mobile\responsive.spec.js" time="0.923">
</testcase>
<testcase name="Mobile Responsiveness › footer content is accessible on mobile" classname="mobile\responsive.spec.js" time="5.989">
<failure message="responsive.spec.js:65:3 footer content is accessible on mobile" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:65:3 › Mobile Responsiveness › footer content is accessible on mobile 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.footer')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.footer')


      65 |   test('footer content is accessible on mobile', async ({ page }) => {
      66 |     const footer = page.locator('.footer')
    > 67 |     await expect(footer).toBeVisible()
         |                          ^
      68 |     
      69 |     // Footer text should be readable
      70 |     const footerText = await footer.textContent()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:67:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › tap to focus inputs works correctly" classname="mobile\responsive.spec.js" time="0.645">
<failure message="responsive.spec.js:80:3 tap to focus inputs works correctly" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:80:3 › Touch Interactions › tap to focus inputs works correctly 

    Error: locator.tap: The page does not support tap. Use hasTouch context option to enable touch support.

      82 |     
      83 |     // Tap to focus
    > 84 |     await avgNetFeeInput.tap()
         |                          ^
      85 |     await expect(avgNetFeeInput).toBeFocused()
      86 |   })
      87 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:84:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › tap and hold does not interfere with input" classname="mobile\responsive.spec.js" time="0.729">
<failure message="responsive.spec.js:88:3 tap and hold does not interfere with input" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:88:3 › Touch Interactions › tap and hold does not interfere with input 

    Error: locator.tap: The page does not support tap. Use hasTouch context option to enable touch support.

      90 |     
      91 |     // Long press should not cause issues
    > 92 |     await avgNetFeeInput.tap({ force: true })
         |                          ^
      93 |     await page.waitForTimeout(1000) // Simulate long press
      94 |     
      95 |     // Should still be able to type
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:92:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › select dropdown works with touch" classname="mobile\responsive.spec.js" time="0.74">
<failure message="responsive.spec.js:100:3 select dropdown works with touch" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:100:3 › Touch Interactions › select dropdown works with touch 

    Error: locator.tap: The page does not support tap. Use hasTouch context option to enable touch support.

      101 |     const regionSelect = page.locator('select[aria-label="Region"]')
      102 |     
    > 103 |     await regionSelect.tap()
          |                        ^
      104 |     await regionSelect.selectOption('CA')
      105 |     
      106 |     await expect(regionSelect).toHaveValue('CA')
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:103:24

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › reset button responds to touch" classname="mobile\responsive.spec.js" time="31.54">
<failure message="responsive.spec.js:109:3 reset button responds to touch" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:109:3 › Touch Interactions › reset button responds to touch 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      112 |     
      113 |     // Change a value
    > 114 |     await avgNetFeeInput.fill('200')
          |                          ^
      115 |     
      116 |     // Tap reset
      117 |     await resetButton.tap()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:114:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-chromium\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Performance › app loads quickly on mobile connections" classname="mobile\responsive.spec.js" time="1.978">
</testcase>
<testcase name="Mobile Performance › calculations remain responsive during rapid input" classname="mobile\responsive.spec.js" time="32.431">
<failure message="responsive.spec.js:140:3 calculations remain responsive during rapid input" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:140:3 › Mobile Performance › calculations remain responsive during rapid input 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      144 |     const values = ['100', '150', '200', '250', '300']
      145 |     for (const value of values) {
    > 146 |       await avgNetFeeInput.fill(value)
          |                            ^
      147 |       await page.waitForTimeout(100) // Brief pause between changes
      148 |     }
      149 |     
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:146:28

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-chromium\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › prevents zoom on input focus (if implemented)" classname="mobile\responsive.spec.js" time="32.476">
<failure message="responsive.spec.js:159:3 prevents zoom on input focus (if implemented)" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:159:3 › Mobile Specific Features › prevents zoom on input focus (if implemented) 

    Test timeout of 30000ms exceeded.

    Error: locator.getAttribute: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('meta[name="viewport"]')


      160 |     // Check if viewport meta tag prevents zoom
      161 |     const viewportMeta = page.locator('meta[name="viewport"]')
    > 162 |     const content = await viewportMeta.getAttribute('content')
          |                                        ^
      163 |     
      164 |     // This test depends on whether zoom prevention is desired
      165 |     // Some accessibility guidelines recommend allowing zoom
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:162:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--chromium\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › handles device orientation changes gracefully" classname="mobile\responsive.spec.js" time="5.54">
<failure message="responsive.spec.js:172:3 handles device orientation changes gracefully" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:172:3 › Mobile Specific Features › handles device orientation changes gracefully 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Liberty Tax • P&L Budget & Forecast')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Liberty Tax • P&L Budget & Forecast')


      173 |     // Start in portrait
      174 |     await page.setViewportSize({ width: 390, height: 844 })
    > 175 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
          |                                                                            ^
      176 |     
      177 |     // Switch to landscape
      178 |     await page.setViewportSize({ width: 844, height: 390 })
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:175:76

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-chromium\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › supports dark mode if device prefers it" classname="mobile\responsive.spec.js" time="5.552">
<failure message="responsive.spec.js:186:3 supports dark mode if device prefers it" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:186:3 › Mobile Specific Features › supports dark mode if device prefers it 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Liberty Tax • P&L Budget & Forecast')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Liberty Tax • P&L Budget & Forecast')


      190 |     
      191 |     // App should still function (specific styling tests would go here)
    > 192 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
          |                                                                            ^
      193 |   })
      194 | })
      195 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:192:76

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-chromium\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility on Mobile › maintains proper focus management" classname="mobile\responsive.spec.js" time="5.583">
<failure message="responsive.spec.js:197:3 maintains proper focus management" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:197:3 › Accessibility on Mobile › maintains proper focus management 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator(':focus')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator(':focus')


      199 |     await page.keyboard.press('Tab')
      200 |     const focusedElement = page.locator(':focus')
    > 201 |     await expect(focusedElement).toBeVisible()
          |                                  ^
      202 |   })
      203 |
      204 |   test('form labels work with screen readers', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:201:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-chromium\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility on Mobile › form labels work with screen readers" classname="mobile\responsive.spec.js" time="31.994">
<failure message="responsive.spec.js:204:3 form labels work with screen readers" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:204:3 › Accessibility on Mobile › form labels work with screen readers 

    Test timeout of 30000ms exceeded.

    Error: locator.textContent: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('label:has(input[type="number"])').first()


      204 |   test('form labels work with screen readers', async ({ page }) => {
      205 |     const avgNetFeeInput = page.locator('input[type="number"]').first()
    > 206 |     const labelText = await page.locator('label:has(input[type="number"])').first().textContent()
          |                                                                                     ^
      207 |     
      208 |     expect(labelText).toContain('Average Net Fee')
      209 |   })
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:206:85

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-chromium\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility on Mobile › maintains sufficient color contrast" classname="mobile\responsive.spec.js" time="0.236">
<failure message="responsive.spec.js:211:3 maintains sufficient color contrast" type="FAILURE">
<![CDATA[  [chromium] › mobile\responsive.spec.js:211:3 › Accessibility on Mobile › maintains sufficient color contrast 

    Error: expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      215 |     const count = await kpiElements.count()
      216 |     
    > 217 |     expect(count).toBeGreaterThan(0)
          |                   ^
      218 |   })
      219 | })
      220 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:217:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-chromium\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-chromium\video.webm]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="snapshots.spec.ts" timestamp="2025-09-21T14:00:33.654Z" hostname="chromium" tests="1" failures="0" skipped="0" time="6.009" errors="0">
<testcase name="UI Snapshots › capture key screens" classname="snapshots.spec.ts" time="6.009">
</testcase>
</testsuite>
<testsuite name="app.spec.ts" timestamp="2025-09-21T14:00:33.654Z" hostname="firefox" tests="15" failures="15" skipped="0" time="182.539" errors="0">
<testcase name="Liberty Tax P&amp;L Application › displays the main application interface" classname="app.spec.ts" time="8.986">
<failure message="app.spec.ts:65:3 displays the main application interface" type="FAILURE">
<![CDATA[  [firefox] › app.spec.ts:65:3 › Liberty Tax P&L Application › displays the main application interface 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Quick Inputs')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Quick Inputs')


      68 |     
      69 |     // Check main sections are present
    > 70 |     await expect(page.locator('text=Quick Inputs')).toBeVisible()
         |                                                     ^
      71 |     await expect(page.locator('text=Dashboard')).toBeVisible()
      72 |     await expect(page.locator('text=Income Drivers')).toBeVisible()
      73 |     await expect(page.locator('text=Expense Percentages')).toBeVisible()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:70:53

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-firefox\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › has correct initial values" classname="app.spec.ts" time="3.739">
<failure message="app.spec.ts:76:3 has correct initial values" type="FAILURE">
<![CDATA[  [firefox] › app.spec.ts:76:3 › Liberty Tax P&L Application › has correct initial values ──────────

    Error: expect.toHaveValue: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - Expect "toHaveValue" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      75 |
      76 |   test('has correct initial values', async ({ page }) => {
    > 77 |     await expect(pnlPage.regionSelect).toHaveValue('US')
         |                                        ^
      78 |     await expect(pnlPage.avgNetFeeInput).toHaveValue('125')
      79 |     await expect(pnlPage.taxPrepReturnsInput).toHaveValue('1600')
      80 |     await expect(pnlPage.taxRushReturnsInput).toHaveValue('0')
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:77:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-firefox\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › enables TaxRush input when region is set to Canada" classname="app.spec.ts" time="4.182">
<failure message="app.spec.ts:84:3 enables TaxRush input when region is set to Canada" type="FAILURE">
<![CDATA[  [firefox] › app.spec.ts:84:3 › Liberty Tax P&L Application › enables TaxRush input when region is set to Canada 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:85:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-firefox\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › disables and resets TaxRush when switching to US" classname="app.spec.ts" time="4.219">
<failure message="app.spec.ts:89:3 disables and resets TaxRush when switching to US" type="FAILURE">
<![CDATA[  [firefox] › app.spec.ts:89:3 › Liberty Tax P&L Application › disables and resets TaxRush when switching to US 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:91:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-firefox\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › updates calculations when inputs change" classname="app.spec.ts" time="30.181">
<failure message="app.spec.ts:101:3 updates calculations when inputs change" type="FAILURE">
<![CDATA[  [firefox] › app.spec.ts:101:3 › Liberty Tax P&L Application › updates calculations when inputs change 

    Test timeout of 30000ms exceeded.

    Error: locator.textContent: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('.kpi:has-text("Net Income") .value')


      101 |   test('updates calculations when inputs change', async ({ page }) => {
      102 |     // Get initial net income
    > 103 |     const initialNetIncome = await pnlPage.netIncomeValue.textContent()
          |                                                           ^
      104 |     
      105 |     // Change average net fee
      106 |     await pnlPage.setAvgNetFee(200)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:103:59

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-firefox\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › persists data across page reloads" classname="app.spec.ts" time="4.129">
<failure message="app.spec.ts:114:3 persists data across page reloads" type="FAILURE">
<![CDATA[  [firefox] › app.spec.ts:114:3 › Liberty Tax P&L Application › persists data across page reloads ──

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:116:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-firefox\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › resets all values when reset button is clicked" classname="app.spec.ts" time="4.383">
<failure message="app.spec.ts:134:3 resets all values when reset button is clicked" type="FAILURE">
<![CDATA[  [firefox] › app.spec.ts:134:3 › Liberty Tax P&L Application › resets all values when reset button is clicked 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:136:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-firefox\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › displays KPI status colors correctly" classname="app.spec.ts" time="9.086">
<failure message="app.spec.ts:150:3 displays KPI status colors correctly" type="FAILURE">
<![CDATA[  [firefox] › app.spec.ts:150:3 › Liberty Tax P&L Application › displays KPI status colors correctly 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.kpi:has-text("Net Income")')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.kpi:has-text("Net Income")')


      154 |     const costPerReturnKPI = page.locator('.kpi:has-text("Cost / Return")')
      155 |     
    > 156 |     await expect(netIncomeKPI).toBeVisible()
          |                                ^
      157 |     await expect(netMarginKPI).toBeVisible()
      158 |     await expect(costPerReturnKPI).toBeVisible()
      159 |     
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:156:32

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-firefox\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › shows pro-tips based on KPI status" classname="app.spec.ts" time="8.845">
<failure message="app.spec.ts:170:3 shows pro-tips based on KPI status" type="FAILURE">
<![CDATA[  [firefox] › app.spec.ts:170:3 › Liberty Tax P&L Application › shows pro-tips based on KPI status ─

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.card:has-text("Pro-Tips")')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.card:has-text("Pro-Tips")')


      174 |     // There should be some tips shown (content depends on current KPI status)
      175 |     const proTipsSection = page.locator('.card:has-text("Pro-Tips")')
    > 176 |     await expect(proTipsSection).toBeVisible()
          |                                  ^
      177 |   })
      178 |
      179 |   test('handles edge case of zero returns', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:176:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-firefox\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles edge case of zero returns" classname="app.spec.ts" time="30.125">
<failure message="app.spec.ts:179:3 handles edge case of zero returns" type="FAILURE">
<![CDATA[  [firefox] › app.spec.ts:179:3 › Liberty Tax P&L Application › handles edge case of zero returns ──

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('label:has-text("Tax Prep Returns") + input')
        - locator resolved to <input id="ret-lbl" value="1600" aria-label="Tax Prep Returns"/>
        - fill("0")
      - attempting fill action
        2 × waiting for element to be visible, enabled and editable
          - element is not visible
        - retrying fill action
        - waiting 20ms
        2 × waiting for element to be visible, enabled and editable
          - element is not visible
        - retrying fill action
          - waiting 100ms
        49 × waiting for element to be visible, enabled and editable
           - element is not visible
         - retrying fill action
           - waiting 500ms


      28 |
      29 |   async setTaxPrepReturns(value: number) {
    > 30 |     await this.taxPrepReturnsInput.fill(value.toString())
         |                                    ^
      31 |     await this.taxPrepReturnsInput.blur()
      32 |   }
      33 |
        at PnLPage.setTaxPrepReturns (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:30:36)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:180:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-firefox\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles very large input values" classname="app.spec.ts" time="30.129">
<failure message="app.spec.ts:189:3 handles very large input values" type="FAILURE">
<![CDATA[  [firefox] › app.spec.ts:189:3 › Liberty Tax P&L Application › handles very large input values ────

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      23 |
      24 |   async setAvgNetFee(value: number) {
    > 25 |     await this.avgNetFeeInput.fill(value.toString())
         |                               ^
      26 |     await this.avgNetFeeInput.blur()
      27 |   }
      28 |
        at PnLPage.setAvgNetFee (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:25:31)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:190:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-firefox\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › maintains TaxRush stickiness in Canada" classname="app.spec.ts" time="4.078">
<failure message="app.spec.ts:202:3 maintains TaxRush stickiness in Canada" type="FAILURE">
<![CDATA[  [firefox] › app.spec.ts:202:3 › Liberty Tax P&L Application › maintains TaxRush stickiness in Canada 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:204:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-firefox\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › keyboard navigation works correctly" classname="app.spec.ts" time="5.2">
<failure message="app.spec.ts:212:3 keyboard navigation works correctly" type="FAILURE">
<![CDATA[  [firefox] › app.spec.ts:212:3 › Liberty Tax P&L Application › keyboard navigation works correctly 

    Error: expect.toBeFocused: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - Expect "toBeFocused" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      213 |     // Test tab navigation through inputs
      214 |     await page.keyboard.press('Tab')
    > 215 |     await expect(pnlPage.regionSelect).toBeFocused()
          |                                        ^
      216 |     
      217 |     // Continue tabbing to inputs
      218 |     await page.keyboard.press('Tab')
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:215:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-firefox\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Performance &amp; Responsiveness › loads within acceptable time" classname="app.spec.ts" time="5.019">
<failure message="app.spec.ts:225:3 loads within acceptable time" type="FAILURE">
<![CDATA[  [firefox] › app.spec.ts:225:3 › Performance & Responsiveness › loads within acceptable time ──────

    Error: expect(received).toBeLessThan(expected)

    Expected: < 3000
    Received:   3140

      229 |     const loadTime = Date.now() - startTime
      230 |     
    > 231 |     expect(loadTime).toBeLessThan(3000) // 3 seconds max
          |                      ^
      232 |   })
      233 |
      234 |   test('calculations are performant', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:231:22

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Performance-Responsiveness-loads-within-acceptable-time-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Performance-Responsiveness-loads-within-acceptable-time-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Performance-Responsiveness-loads-within-acceptable-time-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Performance-Responsiveness-loads-within-acceptable-time-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Performance-Responsiveness-loads-within-acceptable-time-firefox\video.webm]]

[[ATTACHMENT|test-results\app-Performance-Responsiveness-loads-within-acceptable-time-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Performance &amp; Responsiveness › calculations are performant" classname="app.spec.ts" time="30.238">
<failure message="app.spec.ts:234:3 calculations are performant" type="FAILURE">
<![CDATA[  [firefox] › app.spec.ts:234:3 › Performance & Responsiveness › calculations are performant ───────

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      23 |
      24 |   async setAvgNetFee(value: number) {
    > 25 |     await this.avgNetFeeInput.fill(value.toString())
         |                               ^
      26 |     await this.avgNetFeeInput.blur()
      27 |   }
      28 |
        at PnLPage.setAvgNetFee (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:25:31)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:242:21

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-firefox\video.webm]]

[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-firefox\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="basic-functionality.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="firefox" tests="6" failures="3" skipped="1" time="33.484" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › homepage loads successfully" classname="basic-functionality.spec.js" time="4.324">
<failure message="basic-functionality.spec.js:9:3 homepage loads successfully" type="FAILURE">
<![CDATA[  [firefox] › basic-functionality.spec.js:9:3 › Liberty Tax P&L Webapp - Basic Functionality › homepage loads successfully 

    Error: expect(received).toBeTruthy()

    Received: false

      16 |     // Look for key elements that should be present
      17 |     const hasMainContent = await page.locator('main, #root, .app, [class*="app"]').first().isVisible();
    > 18 |     expect(hasMainContent).toBeTruthy();
         |                            ^
      19 |   });
      20 |
      21 |   test('wizard can be opened', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:18:28

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-firefox\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › wizard can be opened" classname="basic-functionality.spec.js" time="8.984">
<failure message="basic-functionality.spec.js:21:3 wizard can be opened" type="FAILURE">
<![CDATA[  [firefox] › basic-functionality.spec.js:21:3 › Liberty Tax P&L Webapp - Basic Functionality › wizard can be opened 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('h1, h2, h3, [class*="wizard"], [id*="wizard"]').filter({ hasText: /welcome|region|store|step/i }).first()
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('h1, h2, h3, [class*="wizard"], [id*="wizard"]').filter({ hasText: /welcome|region|store|step/i }).first()


      33 |       });
      34 |       
    > 35 |       await expect(wizardContent.first()).toBeVisible({ timeout: 5000 });
         |                                           ^
      36 |     } else {
      37 |       test.skip('Start wizard button not found - may be different implementation');
      38 |     }
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:35:43

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-firefox\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › debug panel can be accessed" classname="basic-functionality.spec.js" time="4.179">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › no JavaScript errors on page load" classname="basic-functionality.spec.js" time="5.557">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › responsive design - no horizontal scroll" classname="basic-functionality.spec.js" time="5.34">
<failure message="basic-functionality.spec.js:71:3 responsive design - no horizontal scroll" type="FAILURE">
<![CDATA[  [firefox] › basic-functionality.spec.js:71:3 › Liberty Tax P&L Webapp - Basic Functionality › responsive design - no horizontal scroll 

    Error: expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 380
    Received:    565

      87 |       
      88 |       // Allow small tolerance (5px) for rounding
    > 89 |       expect(bodyWidth).toBeLessThanOrEqual(viewportWidth + 5);
         |                         ^
      90 |     }
      91 |   });
      92 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:89:25

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-firefox\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › basic form interactions work" classname="basic-functionality.spec.js" time="5.1">
</testcase>
</testsuite>
<testsuite name="generated\wizardinputs.generated.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="firefox" tests="34" failures="0" skipped="0" time="149.959" errors="0">
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="3.496">
<system-out>
<![CDATA[Testing: percentage accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="4.774">
<system-out>
<![CDATA[Testing: percentage accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="3.659">
<system-out>
<![CDATA[Testing: percentage rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="3.445">
<system-out>
<![CDATA[Testing: percentage rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects string input" classname="generated\wizardinputs.generated.spec.js" time="3.933">
<system-out>
<![CDATA[Testing: percentage rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects null input" classname="generated\wizardinputs.generated.spec.js" time="3.736">
<system-out>
<![CDATA[Testing: percentage rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="3.708">
<system-out>
<![CDATA[Testing: currency accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="4.89">
<system-out>
<![CDATA[Testing: currency accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="4.456">
<system-out>
<![CDATA[Testing: currency rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="4.743">
<system-out>
<![CDATA[Testing: currency rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects string input" classname="generated\wizardinputs.generated.spec.js" time="4.217">
<system-out>
<![CDATA[Testing: currency rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects null input" classname="generated\wizardinputs.generated.spec.js" time="5.019">
<system-out>
<![CDATA[Testing: currency rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="4.553">
<system-out>
<![CDATA[Testing: returns accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="4.605">
<system-out>
<![CDATA[Testing: returns accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="4.328">
<system-out>
<![CDATA[Testing: returns rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="4.219">
<system-out>
<![CDATA[Testing: returns rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects string input" classname="generated\wizardinputs.generated.spec.js" time="4.522">
<system-out>
<![CDATA[Testing: returns rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects null input" classname="generated\wizardinputs.generated.spec.js" time="4.321">
<system-out>
<![CDATA[Testing: returns rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="4.467">
<system-out>
<![CDATA[Testing: growth accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="4.34">
<system-out>
<![CDATA[Testing: growth accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="4.304">
<system-out>
<![CDATA[Testing: growth rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="4.476">
<system-out>
<![CDATA[Testing: growth rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects string input" classname="generated\wizardinputs.generated.spec.js" time="4.481">
<system-out>
<![CDATA[Testing: growth rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects null input" classname="generated\wizardinputs.generated.spec.js" time="5.077">
<system-out>
<![CDATA[Testing: growth rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › keyboard navigation works correctly" classname="generated\wizardinputs.generated.spec.js" time="4.834">
<system-out>
<![CDATA[Testing: keyboard navigation works correctly
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › screen reader announcements are correct" classname="generated\wizardinputs.generated.spec.js" time="4.503">
<system-out>
<![CDATA[Testing: screen reader announcements are correct
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › error messages are announced" classname="generated\wizardinputs.generated.spec.js" time="4.045">
<system-out>
<![CDATA[Testing: error messages are announced
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › color contrast meets WCAG standards" classname="generated\wizardinputs.generated.spec.js" time="4.822">
<system-out>
<![CDATA[Testing: color contrast meets WCAG standards
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › renders within performance budget" classname="generated\wizardinputs.generated.spec.js" time="4.813">
<system-out>
<![CDATA[Testing: renders within performance budget
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › handles rapid input changes efficiently" classname="generated\wizardinputs.generated.spec.js" time="4.894">
<system-out>
<![CDATA[Testing: handles rapid input changes efficiently
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › calculation updates are debounced" classname="generated\wizardinputs.generated.spec.js" time="4.516">
<system-out>
<![CDATA[Testing: calculation updates are debounced
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › complete wizard flow successfully" classname="generated\wizardinputs.generated.spec.js" time="4.483">
<system-out>
<![CDATA[Testing: complete wizard flow successfully
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › recover from validation errors gracefully" classname="generated\wizardinputs.generated.spec.js" time="4.767">
<system-out>
<![CDATA[Testing: recover from validation errors gracefully
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › data persistence across page refresh" classname="generated\wizardinputs.generated.spec.js" time="4.513">
<system-out>
<![CDATA[Testing: data persistence across page refresh
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="mobile\mobile-specific.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="firefox" tests="8" failures="2" skipped="0" time="42.025" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › touch targets are large enough" classname="mobile\mobile-specific.spec.js" time="4.812">
<failure message="mobile-specific.spec.js:9:3 touch targets are large enough" type="FAILURE">
<![CDATA[  [firefox] › mobile\mobile-specific.spec.js:9:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › touch targets are large enough 

    Error: expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 44
    Received:    26.000001907348633

      19 |           // Minimum touch target size should be 44x44px (Apple guidelines)
      20 |           expect(box.width).toBeGreaterThanOrEqual(44);
    > 21 |           expect(box.height).toBeGreaterThanOrEqual(44);
         |                              ^
      22 |         }
      23 |       }
      24 |     }
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:21:30

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-firefox\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile keyboard interactions" classname="mobile\mobile-specific.spec.js" time="4.526">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › viewport meta tag prevents zoom" classname="mobile\mobile-specific.spec.js" time="4.84">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › orientation change handling" classname="mobile\mobile-specific.spec.js" time="4.795">
<failure message="mobile-specific.spec.js:54:3 orientation change handling" type="FAILURE">
<![CDATA[  [firefox] › mobile\mobile-specific.spec.js:54:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › orientation change handling 

    Error: expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 380
    Received:    565

      62 |     // Check no horizontal scroll in portrait
      63 |     let bodyWidth = await page.evaluate(() => document.body.scrollWidth);
    > 64 |     expect(bodyWidth).toBeLessThanOrEqual(375 + 5);
         |                       ^
      65 |     
      66 |     // Switch to landscape
      67 |     await page.setViewportSize({ width: 667, height: 375 });
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:64:23

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-firefox\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile-specific layout elements" classname="mobile\mobile-specific.spec.js" time="6.91">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › scroll behavior on mobile" classname="mobile\mobile-specific.spec.js" time="4.079">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile performance - load time" classname="mobile\mobile-specific.spec.js" time="6.31">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile gestures do not interfere" classname="mobile\mobile-specific.spec.js" time="5.753">
</testcase>
</testsuite>
<testsuite name="mobile\responsive.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="firefox" tests="18" failures="16" skipped="0" time="218.046" errors="0">
<testcase name="Mobile Responsiveness › displays correctly on mobile viewports" classname="mobile\responsive.spec.js" time="9.215">
<failure message="responsive.spec.js:8:3 displays correctly on mobile viewports" type="FAILURE">
<![CDATA[  [firefox] › mobile\responsive.spec.js:8:3 › Mobile Responsiveness › displays correctly on mobile viewports 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Quick Inputs')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Quick Inputs')


       9 |     // Test main elements are visible
      10 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
    > 11 |     await expect(page.locator('text=Quick Inputs')).toBeVisible()
         |                                                     ^
      12 |     await expect(page.locator('text=Dashboard')).toBeVisible()
      13 |   })
      14 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:11:53

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-firefox\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › region selector is accessible on mobile" classname="mobile\responsive.spec.js" time="3.828">
<failure message="responsive.spec.js:15:3 region selector is accessible on mobile" type="FAILURE">
<![CDATA[  [firefox] › mobile\responsive.spec.js:15:3 › Mobile Responsiveness › region selector is accessible on mobile 

    Error: expect.toBeVisible: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      15 |   test('region selector is accessible on mobile', async ({ page }) => {
      16 |     const regionSelect = page.locator('select[aria-label="Region"]')
    > 17 |     await expect(regionSelect).toBeVisible()
         |                                ^
      18 |     
      19 |     // Should be large enough to tap
      20 |     const box = await regionSelect.boundingBox()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:17:32

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-firefox\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › input fields are properly sized for mobile" classname="mobile\responsive.spec.js" time="3.308">
</testcase>
<testcase name="Mobile Responsiveness › KPI cards stack vertically on mobile" classname="mobile\responsive.spec.js" time="30.107">
<failure message="responsive.spec.js:39:3 KPI cards stack vertically on mobile" type="FAILURE">
<![CDATA[  [firefox] › mobile\responsive.spec.js:39:3 › Mobile Responsiveness › KPI cards stack vertically on mobile 

    Test timeout of 30000ms exceeded.

    Error: locator.boundingBox: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('.kpi').first()


      42 |     const secondCard = kpiCards.nth(1)
      43 |     
    > 44 |     const firstBox = await firstCard.boundingBox()
         |                                      ^
      45 |     const secondBox = await secondCard.boundingBox()
      46 |     
      47 |     // Second card should be below first card (higher Y position)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:44:38

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-firefox\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › text is readable on mobile screens" classname="mobile\responsive.spec.js" time="5.122">
<failure message="responsive.spec.js:53:3 text is readable on mobile screens" type="FAILURE">
<![CDATA[  [firefox] › mobile\responsive.spec.js:53:3 › Mobile Responsiveness › text is readable on mobile screens 

    Error: expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 14
    Received:    NaN

      60 |     // Font size should be at least 16px on mobile to avoid zoom
      61 |     const fontSize = parseInt(styles.fontSize)
    > 62 |     expect(fontSize).toBeGreaterThanOrEqual(14)
         |                      ^
      63 |   })
      64 |
      65 |   test('footer content is accessible on mobile', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:62:22

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-ce8a4--readable-on-mobile-screens-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-ce8a4--readable-on-mobile-screens-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-ce8a4--readable-on-mobile-screens-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-ce8a4--readable-on-mobile-screens-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-ce8a4--readable-on-mobile-screens-firefox\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-ce8a4--readable-on-mobile-screens-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › footer content is accessible on mobile" classname="mobile\responsive.spec.js" time="8.519">
<failure message="responsive.spec.js:65:3 footer content is accessible on mobile" type="FAILURE">
<![CDATA[  [firefox] › mobile\responsive.spec.js:65:3 › Mobile Responsiveness › footer content is accessible on mobile 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.footer')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.footer')


      65 |   test('footer content is accessible on mobile', async ({ page }) => {
      66 |     const footer = page.locator('.footer')
    > 67 |     await expect(footer).toBeVisible()
         |                          ^
      68 |     
      69 |     // Footer text should be readable
      70 |     const footerText = await footer.textContent()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:67:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-firefox\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › tap to focus inputs works correctly" classname="mobile\responsive.spec.js" time="4.38">
<failure message="responsive.spec.js:80:3 tap to focus inputs works correctly" type="FAILURE">
<![CDATA[  [firefox] › mobile\responsive.spec.js:80:3 › Touch Interactions › tap to focus inputs works correctly 

    Error: locator.tap: The page does not support tap. Use hasTouch context option to enable touch support.

      82 |     
      83 |     // Tap to focus
    > 84 |     await avgNetFeeInput.tap()
         |                          ^
      85 |     await expect(avgNetFeeInput).toBeFocused()
      86 |   })
      87 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:84:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-firefox\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › tap and hold does not interfere with input" classname="mobile\responsive.spec.js" time="4.592">
<failure message="responsive.spec.js:88:3 tap and hold does not interfere with input" type="FAILURE">
<![CDATA[  [firefox] › mobile\responsive.spec.js:88:3 › Touch Interactions › tap and hold does not interfere with input 

    Error: locator.tap: The page does not support tap. Use hasTouch context option to enable touch support.

      90 |     
      91 |     // Long press should not cause issues
    > 92 |     await avgNetFeeInput.tap({ force: true })
         |                          ^
      93 |     await page.waitForTimeout(1000) // Simulate long press
      94 |     
      95 |     // Should still be able to type
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:92:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-firefox\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › select dropdown works with touch" classname="mobile\responsive.spec.js" time="4.558">
<failure message="responsive.spec.js:100:3 select dropdown works with touch" type="FAILURE">
<![CDATA[  [firefox] › mobile\responsive.spec.js:100:3 › Touch Interactions › select dropdown works with touch 

    Error: locator.tap: The page does not support tap. Use hasTouch context option to enable touch support.

      101 |     const regionSelect = page.locator('select[aria-label="Region"]')
      102 |     
    > 103 |     await regionSelect.tap()
          |                        ^
      104 |     await regionSelect.selectOption('CA')
      105 |     
      106 |     await expect(regionSelect).toHaveValue('CA')
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:103:24

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-firefox\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › reset button responds to touch" classname="mobile\responsive.spec.js" time="30.111">
<failure message="responsive.spec.js:109:3 reset button responds to touch" type="FAILURE">
<![CDATA[  [firefox] › mobile\responsive.spec.js:109:3 › Touch Interactions › reset button responds to touch 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      112 |     
      113 |     // Change a value
    > 114 |     await avgNetFeeInput.fill('200')
          |                          ^
      115 |     
      116 |     // Tap reset
      117 |     await resetButton.tap()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:114:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-firefox\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Performance › app loads quickly on mobile connections" classname="mobile\responsive.spec.js" time="5.059">
</testcase>
<testcase name="Mobile Performance › calculations remain responsive during rapid input" classname="mobile\responsive.spec.js" time="30.101">
<failure message="responsive.spec.js:140:3 calculations remain responsive during rapid input" type="FAILURE">
<![CDATA[  [firefox] › mobile\responsive.spec.js:140:3 › Mobile Performance › calculations remain responsive during rapid input 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      144 |     const values = ['100', '150', '200', '250', '300']
      145 |     for (const value of values) {
    > 146 |       await avgNetFeeInput.fill(value)
          |                            ^
      147 |       await page.waitForTimeout(100) // Brief pause between changes
      148 |     }
      149 |     
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:146:28

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-firefox\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › prevents zoom on input focus (if implemented)" classname="mobile\responsive.spec.js" time="30.05">
<failure message="responsive.spec.js:159:3 prevents zoom on input focus (if implemented)" type="FAILURE">
<![CDATA[  [firefox] › mobile\responsive.spec.js:159:3 › Mobile Specific Features › prevents zoom on input focus (if implemented) 

    Test timeout of 30000ms exceeded.

    Error: locator.getAttribute: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('meta[name="viewport"]')


      160 |     // Check if viewport meta tag prevents zoom
      161 |     const viewportMeta = page.locator('meta[name="viewport"]')
    > 162 |     const content = await viewportMeta.getAttribute('content')
          |                                        ^
      163 |     
      164 |     // This test depends on whether zoom prevention is desired
      165 |     // Some accessibility guidelines recommend allowing zoom
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:162:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--firefox\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › handles device orientation changes gracefully" classname="mobile\responsive.spec.js" time="5.891">
<failure message="responsive.spec.js:172:3 handles device orientation changes gracefully" type="FAILURE">
<![CDATA[  [firefox] › mobile\responsive.spec.js:172:3 › Mobile Specific Features › handles device orientation changes gracefully 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Liberty Tax • P&L Budget & Forecast')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Liberty Tax • P&L Budget & Forecast')


      173 |     // Start in portrait
      174 |     await page.setViewportSize({ width: 390, height: 844 })
    > 175 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
          |                                                                            ^
      176 |     
      177 |     // Switch to landscape
      178 |     await page.setViewportSize({ width: 844, height: 390 })
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:175:76

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-firefox\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › supports dark mode if device prefers it" classname="mobile\responsive.spec.js" time="6.044">
<failure message="responsive.spec.js:186:3 supports dark mode if device prefers it" type="FAILURE">
<![CDATA[  [firefox] › mobile\responsive.spec.js:186:3 › Mobile Specific Features › supports dark mode if device prefers it 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Liberty Tax • P&L Budget & Forecast')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Liberty Tax • P&L Budget & Forecast')


      190 |     
      191 |     // App should still function (specific styling tests would go here)
    > 192 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
          |                                                                            ^
      193 |   })
      194 | })
      195 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:192:76

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-firefox\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility on Mobile › maintains proper focus management" classname="mobile\responsive.spec.js" time="6.048">
<failure message="responsive.spec.js:197:3 maintains proper focus management" type="FAILURE">
<![CDATA[  [firefox] › mobile\responsive.spec.js:197:3 › Accessibility on Mobile › maintains proper focus management 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator(':focus')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator(':focus')


      199 |     await page.keyboard.press('Tab')
      200 |     const focusedElement = page.locator(':focus')
    > 201 |     await expect(focusedElement).toBeVisible()
          |                                  ^
      202 |   })
      203 |
      204 |   test('form labels work with screen readers', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:201:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-firefox\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility on Mobile › form labels work with screen readers" classname="mobile\responsive.spec.js" time="30.079">
<failure message="responsive.spec.js:204:3 form labels work with screen readers" type="FAILURE">
<![CDATA[  [firefox] › mobile\responsive.spec.js:204:3 › Accessibility on Mobile › form labels work with screen readers 

    Test timeout of 30000ms exceeded.

    Error: locator.textContent: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('label:has(input[type="number"])').first()


      204 |   test('form labels work with screen readers', async ({ page }) => {
      205 |     const avgNetFeeInput = page.locator('input[type="number"]').first()
    > 206 |     const labelText = await page.locator('label:has(input[type="number"])').first().textContent()
          |                                                                                     ^
      207 |     
      208 |     expect(labelText).toContain('Average Net Fee')
      209 |   })
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:206:85

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-firefox\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility on Mobile › maintains sufficient color contrast" classname="mobile\responsive.spec.js" time="1.034">
<failure message="responsive.spec.js:211:3 maintains sufficient color contrast" type="FAILURE">
<![CDATA[  [firefox] › mobile\responsive.spec.js:211:3 › Accessibility on Mobile › maintains sufficient color contrast 

    Error: expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      215 |     const count = await kpiElements.count()
      216 |     
    > 217 |     expect(count).toBeGreaterThan(0)
          |                   ^
      218 |   })
      219 | })
      220 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:217:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-firefox\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-firefox\video.webm]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="snapshots.spec.ts" timestamp="2025-09-21T14:00:33.654Z" hostname="firefox" tests="1" failures="0" skipped="0" time="9.973" errors="0">
<testcase name="UI Snapshots › capture key screens" classname="snapshots.spec.ts" time="9.973">
</testcase>
</testsuite>
<testsuite name="app.spec.ts" timestamp="2025-09-21T14:00:33.654Z" hostname="webkit" tests="15" failures="14" skipped="0" time="183.16" errors="0">
<testcase name="Liberty Tax P&amp;L Application › displays the main application interface" classname="app.spec.ts" time="6.85">
<failure message="app.spec.ts:65:3 displays the main application interface" type="FAILURE">
<![CDATA[  [webkit] › app.spec.ts:65:3 › Liberty Tax P&L Application › displays the main application interface 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Quick Inputs')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Quick Inputs')


      68 |     
      69 |     // Check main sections are present
    > 70 |     await expect(page.locator('text=Quick Inputs')).toBeVisible()
         |                                                     ^
      71 |     await expect(page.locator('text=Dashboard')).toBeVisible()
      72 |     await expect(page.locator('text=Income Drivers')).toBeVisible()
      73 |     await expect(page.locator('text=Expense Percentages')).toBeVisible()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:70:53

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-webkit\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › has correct initial values" classname="app.spec.ts" time="1.179">
<failure message="app.spec.ts:76:3 has correct initial values" type="FAILURE">
<![CDATA[  [webkit] › app.spec.ts:76:3 › Liberty Tax P&L Application › has correct initial values ───────────

    Error: expect.toHaveValue: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - Expect "toHaveValue" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      75 |
      76 |   test('has correct initial values', async ({ page }) => {
    > 77 |     await expect(pnlPage.regionSelect).toHaveValue('US')
         |                                        ^
      78 |     await expect(pnlPage.avgNetFeeInput).toHaveValue('125')
      79 |     await expect(pnlPage.taxPrepReturnsInput).toHaveValue('1600')
      80 |     await expect(pnlPage.taxRushReturnsInput).toHaveValue('0')
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:77:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-webkit\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › enables TaxRush input when region is set to Canada" classname="app.spec.ts" time="6.46">
<failure message="app.spec.ts:84:3 enables TaxRush input when region is set to Canada" type="FAILURE">
<![CDATA[  [webkit] › app.spec.ts:84:3 › Liberty Tax P&L Application › enables TaxRush input when region is set to Canada 

    Error: expect(locator).toBeEnabled() failed

    Locator:  locator('label:has-text("TaxRush Returns") + input')
    Expected: enabled
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeEnabled" with timeout 5000ms
      - waiting for locator('label:has-text("TaxRush Returns") + input')


      84 |   test('enables TaxRush input when region is set to Canada', async ({ page }) => {
      85 |     await pnlPage.selectRegion('CA')
    > 86 |     await expect(pnlPage.taxRushReturnsInput).toBeEnabled()
         |                                               ^
      87 |   })
      88 |
      89 |   test('disables and resets TaxRush when switching to US', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:86:47

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-webkit\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › disables and resets TaxRush when switching to US" classname="app.spec.ts" time="30.26">
<failure message="app.spec.ts:89:3 disables and resets TaxRush when switching to US" type="FAILURE">
<![CDATA[  [webkit] › app.spec.ts:89:3 › Liberty Tax P&L Application › disables and resets TaxRush when switching to US 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('label:has-text("TaxRush Returns") + input')


      33 |
      34 |   async setTaxRushReturns(value: number) {
    > 35 |     await this.taxRushReturnsInput.fill(value.toString())
         |                                    ^
      36 |     await this.taxRushReturnsInput.blur()
      37 |   }
      38 |
        at PnLPage.setTaxRushReturns (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:35:36)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:92:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-webkit\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › updates calculations when inputs change" classname="app.spec.ts" time="30.302">
<failure message="app.spec.ts:101:3 updates calculations when inputs change" type="FAILURE">
<![CDATA[  [webkit] › app.spec.ts:101:3 › Liberty Tax P&L Application › updates calculations when inputs change 

    Test timeout of 30000ms exceeded.

    Error: locator.textContent: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('.kpi:has-text("Net Income") .value')


      101 |   test('updates calculations when inputs change', async ({ page }) => {
      102 |     // Get initial net income
    > 103 |     const initialNetIncome = await pnlPage.netIncomeValue.textContent()
          |                                                           ^
      104 |     
      105 |     // Change average net fee
      106 |     await pnlPage.setAvgNetFee(200)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:103:59

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-webkit\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › persists data across page reloads" classname="app.spec.ts" time="0.913">
<failure message="app.spec.ts:114:3 persists data across page reloads" type="FAILURE">
<![CDATA[  [webkit] › app.spec.ts:114:3 › Liberty Tax P&L Application › persists data across page reloads ───

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:116:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-webkit\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › resets all values when reset button is clicked" classname="app.spec.ts" time="0.933">
<failure message="app.spec.ts:134:3 resets all values when reset button is clicked" type="FAILURE">
<![CDATA[  [webkit] › app.spec.ts:134:3 › Liberty Tax P&L Application › resets all values when reset button is clicked 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:136:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-webkit\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › displays KPI status colors correctly" classname="app.spec.ts" time="5.874">
<failure message="app.spec.ts:150:3 displays KPI status colors correctly" type="FAILURE">
<![CDATA[  [webkit] › app.spec.ts:150:3 › Liberty Tax P&L Application › displays KPI status colors correctly 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.kpi:has-text("Net Income")')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.kpi:has-text("Net Income")')


      154 |     const costPerReturnKPI = page.locator('.kpi:has-text("Cost / Return")')
      155 |     
    > 156 |     await expect(netIncomeKPI).toBeVisible()
          |                                ^
      157 |     await expect(netMarginKPI).toBeVisible()
      158 |     await expect(costPerReturnKPI).toBeVisible()
      159 |     
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:156:32

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-webkit\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › shows pro-tips based on KPI status" classname="app.spec.ts" time="5.981">
<failure message="app.spec.ts:170:3 shows pro-tips based on KPI status" type="FAILURE">
<![CDATA[  [webkit] › app.spec.ts:170:3 › Liberty Tax P&L Application › shows pro-tips based on KPI status ──

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.card:has-text("Pro-Tips")')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.card:has-text("Pro-Tips")')


      174 |     // There should be some tips shown (content depends on current KPI status)
      175 |     const proTipsSection = page.locator('.card:has-text("Pro-Tips")')
    > 176 |     await expect(proTipsSection).toBeVisible()
          |                                  ^
      177 |   })
      178 |
      179 |   test('handles edge case of zero returns', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:176:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-webkit\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles edge case of zero returns" classname="app.spec.ts" time="30.298">
<failure message="app.spec.ts:179:3 handles edge case of zero returns" type="FAILURE">
<![CDATA[  [webkit] › app.spec.ts:179:3 › Liberty Tax P&L Application › handles edge case of zero returns ───

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('label:has-text("Tax Prep Returns") + input')
        - locator resolved to <input id="ret-lbl" value="1600" aria-label="Tax Prep Returns"/>
        - fill("0")
      - attempting fill action
        2 × waiting for element to be visible, enabled and editable
          - element is not visible
        - retrying fill action
        - waiting 20ms
        2 × waiting for element to be visible, enabled and editable
          - element is not visible
        - retrying fill action
          - waiting 100ms
        58 × waiting for element to be visible, enabled and editable
           - element is not visible
         - retrying fill action
           - waiting 500ms


      28 |
      29 |   async setTaxPrepReturns(value: number) {
    > 30 |     await this.taxPrepReturnsInput.fill(value.toString())
         |                                    ^
      31 |     await this.taxPrepReturnsInput.blur()
      32 |   }
      33 |
        at PnLPage.setTaxPrepReturns (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:30:36)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:180:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-webkit\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles very large input values" classname="app.spec.ts" time="30.371">
<failure message="app.spec.ts:189:3 handles very large input values" type="FAILURE">
<![CDATA[  [webkit] › app.spec.ts:189:3 › Liberty Tax P&L Application › handles very large input values ─────

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      23 |
      24 |   async setAvgNetFee(value: number) {
    > 25 |     await this.avgNetFeeInput.fill(value.toString())
         |                               ^
      26 |     await this.avgNetFeeInput.blur()
      27 |   }
      28 |
        at PnLPage.setAvgNetFee (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:25:31)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:190:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-webkit\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › maintains TaxRush stickiness in Canada" classname="app.spec.ts" time="1.362">
<failure message="app.spec.ts:202:3 maintains TaxRush stickiness in Canada" type="FAILURE">
<![CDATA[  [webkit] › app.spec.ts:202:3 › Liberty Tax P&L Application › maintains TaxRush stickiness in Canada 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:204:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-webkit\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › keyboard navigation works correctly" classname="app.spec.ts" time="0.983">
<failure message="app.spec.ts:212:3 keyboard navigation works correctly" type="FAILURE">
<![CDATA[  [webkit] › app.spec.ts:212:3 › Liberty Tax P&L Application › keyboard navigation works correctly ─

    Error: expect.toBeFocused: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - Expect "toBeFocused" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      213 |     // Test tab navigation through inputs
      214 |     await page.keyboard.press('Tab')
    > 215 |     await expect(pnlPage.regionSelect).toBeFocused()
          |                                        ^
      216 |     
      217 |     // Continue tabbing to inputs
      218 |     await page.keyboard.press('Tab')
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:215:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-webkit\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Performance &amp; Responsiveness › loads within acceptable time" classname="app.spec.ts" time="1.037">
</testcase>
<testcase name="Performance &amp; Responsiveness › calculations are performant" classname="app.spec.ts" time="30.357">
<failure message="app.spec.ts:234:3 calculations are performant" type="FAILURE">
<![CDATA[  [webkit] › app.spec.ts:234:3 › Performance & Responsiveness › calculations are performant ────────

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      23 |
      24 |   async setAvgNetFee(value: number) {
    > 25 |     await this.avgNetFeeInput.fill(value.toString())
         |                               ^
      26 |     await this.avgNetFeeInput.blur()
      27 |   }
      28 |
        at PnLPage.setAvgNetFee (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:25:31)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:242:21

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-webkit\video.webm]]

[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-webkit\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="basic-functionality.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="webkit" tests="6" failures="3" skipped="1" time="13.589" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › homepage loads successfully" classname="basic-functionality.spec.js" time="1.07">
<failure message="basic-functionality.spec.js:9:3 homepage loads successfully" type="FAILURE">
<![CDATA[  [webkit] › basic-functionality.spec.js:9:3 › Liberty Tax P&L Webapp - Basic Functionality › homepage loads successfully 

    Error: expect(received).toBeTruthy()

    Received: false

      16 |     // Look for key elements that should be present
      17 |     const hasMainContent = await page.locator('main, #root, .app, [class*="app"]').first().isVisible();
    > 18 |     expect(hasMainContent).toBeTruthy();
         |                            ^
      19 |   });
      20 |
      21 |   test('wizard can be opened', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:18:28

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-webkit\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › wizard can be opened" classname="basic-functionality.spec.js" time="6.16">
<failure message="basic-functionality.spec.js:21:3 wizard can be opened" type="FAILURE">
<![CDATA[  [webkit] › basic-functionality.spec.js:21:3 › Liberty Tax P&L Webapp - Basic Functionality › wizard can be opened 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('h1, h2, h3, [class*="wizard"], [id*="wizard"]').filter({ hasText: /welcome|region|store|step/i }).first()
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('h1, h2, h3, [class*="wizard"], [id*="wizard"]').filter({ hasText: /welcome|region|store|step/i }).first()


      33 |       });
      34 |       
    > 35 |       await expect(wizardContent.first()).toBeVisible({ timeout: 5000 });
         |                                           ^
      36 |     } else {
      37 |       test.skip('Start wizard button not found - may be different implementation');
      38 |     }
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:35:43

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-webkit\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › debug panel can be accessed" classname="basic-functionality.spec.js" time="0.906">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › no JavaScript errors on page load" classname="basic-functionality.spec.js" time="1.345">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › responsive design - no horizontal scroll" classname="basic-functionality.spec.js" time="1.478">
<failure message="basic-functionality.spec.js:71:3 responsive design - no horizontal scroll" type="FAILURE">
<![CDATA[  [webkit] › basic-functionality.spec.js:71:3 › Liberty Tax P&L Webapp - Basic Functionality › responsive design - no horizontal scroll 

    Error: expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 380
    Received:    565

      87 |       
      88 |       // Allow small tolerance (5px) for rounding
    > 89 |       expect(bodyWidth).toBeLessThanOrEqual(viewportWidth + 5);
         |                         ^
      90 |     }
      91 |   });
      92 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:89:25

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-webkit\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › basic form interactions work" classname="basic-functionality.spec.js" time="2.63">
</testcase>
</testsuite>
<testsuite name="generated\wizardinputs.generated.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="webkit" tests="34" failures="0" skipped="0" time="40.953" errors="0">
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="1.134">
<system-out>
<![CDATA[Testing: percentage accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="1.52">
<system-out>
<![CDATA[Testing: percentage accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="1.288">
<system-out>
<![CDATA[Testing: percentage rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="1.378">
<system-out>
<![CDATA[Testing: percentage rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects string input" classname="generated\wizardinputs.generated.spec.js" time="1.255">
<system-out>
<![CDATA[Testing: percentage rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects null input" classname="generated\wizardinputs.generated.spec.js" time="1.222">
<system-out>
<![CDATA[Testing: percentage rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="1.236">
<system-out>
<![CDATA[Testing: currency accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="1.217">
<system-out>
<![CDATA[Testing: currency accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="1.113">
<system-out>
<![CDATA[Testing: currency rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="1.133">
<system-out>
<![CDATA[Testing: currency rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects string input" classname="generated\wizardinputs.generated.spec.js" time="1.225">
<system-out>
<![CDATA[Testing: currency rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects null input" classname="generated\wizardinputs.generated.spec.js" time="1.091">
<system-out>
<![CDATA[Testing: currency rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="1.129">
<system-out>
<![CDATA[Testing: returns accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="1.153">
<system-out>
<![CDATA[Testing: returns accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="1.128">
<system-out>
<![CDATA[Testing: returns rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="1.317">
<system-out>
<![CDATA[Testing: returns rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects string input" classname="generated\wizardinputs.generated.spec.js" time="1.277">
<system-out>
<![CDATA[Testing: returns rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects null input" classname="generated\wizardinputs.generated.spec.js" time="1.336">
<system-out>
<![CDATA[Testing: returns rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="1.235">
<system-out>
<![CDATA[Testing: growth accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="1.223">
<system-out>
<![CDATA[Testing: growth accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="1.228">
<system-out>
<![CDATA[Testing: growth rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="1.09">
<system-out>
<![CDATA[Testing: growth rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects string input" classname="generated\wizardinputs.generated.spec.js" time="1.035">
<system-out>
<![CDATA[Testing: growth rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects null input" classname="generated\wizardinputs.generated.spec.js" time="1.233">
<system-out>
<![CDATA[Testing: growth rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › keyboard navigation works correctly" classname="generated\wizardinputs.generated.spec.js" time="1.14">
<system-out>
<![CDATA[Testing: keyboard navigation works correctly
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › screen reader announcements are correct" classname="generated\wizardinputs.generated.spec.js" time="1.169">
<system-out>
<![CDATA[Testing: screen reader announcements are correct
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › error messages are announced" classname="generated\wizardinputs.generated.spec.js" time="1.156">
<system-out>
<![CDATA[Testing: error messages are announced
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › color contrast meets WCAG standards" classname="generated\wizardinputs.generated.spec.js" time="1.152">
<system-out>
<![CDATA[Testing: color contrast meets WCAG standards
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › renders within performance budget" classname="generated\wizardinputs.generated.spec.js" time="1.153">
<system-out>
<![CDATA[Testing: renders within performance budget
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › handles rapid input changes efficiently" classname="generated\wizardinputs.generated.spec.js" time="1.202">
<system-out>
<![CDATA[Testing: handles rapid input changes efficiently
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › calculation updates are debounced" classname="generated\wizardinputs.generated.spec.js" time="1.043">
<system-out>
<![CDATA[Testing: calculation updates are debounced
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › complete wizard flow successfully" classname="generated\wizardinputs.generated.spec.js" time="1.166">
<system-out>
<![CDATA[Testing: complete wizard flow successfully
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › recover from validation errors gracefully" classname="generated\wizardinputs.generated.spec.js" time="1.28">
<system-out>
<![CDATA[Testing: recover from validation errors gracefully
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › data persistence across page refresh" classname="generated\wizardinputs.generated.spec.js" time="1.296">
<system-out>
<![CDATA[Testing: data persistence across page refresh
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="mobile\mobile-specific.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="webkit" tests="8" failures="3" skipped="1" time="39.46" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › touch targets are large enough" classname="mobile\mobile-specific.spec.js" time="1.203">
<failure message="mobile-specific.spec.js:9:3 touch targets are large enough" type="FAILURE">
<![CDATA[  [webkit] › mobile\mobile-specific.spec.js:9:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › touch targets are large enough 

    Error: expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 44
    Received:    36

      19 |           // Minimum touch target size should be 44x44px (Apple guidelines)
      20 |           expect(box.width).toBeGreaterThanOrEqual(44);
    > 21 |           expect(box.height).toBeGreaterThanOrEqual(44);
         |                              ^
      22 |         }
      23 |       }
      24 |     }
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:21:30

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-webkit\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile keyboard interactions" classname="mobile\mobile-specific.spec.js" time="30.272">
<failure message="mobile-specific.spec.js:27:3 mobile keyboard interactions" type="FAILURE">
<![CDATA[  [webkit] › mobile\mobile-specific.spec.js:27:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › mobile keyboard interactions 

    Test timeout of 30000ms exceeded.

    Error: locator.click: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"], input[inputmode="numeric"]').first()
        - locator resolved to <input min="50" step="1" max="500" value="125" type="number" placeholder="125" title="Average Net Fee" aria-label="Average Net Fee"/>
      - attempting click action
        - waiting for element to be visible, enabled and stable
      - element was detached from the DOM, retrying


      32 |     if (inputCount > 0) {
      33 |       const firstInput = numericInputs.first();
    > 34 |       await firstInput.click();
         |                        ^
      35 |       
      36 |       // On mobile, numeric keyboard should appear
      37 |       // We can't directly test keyboard appearance, but we can test input behavior
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:34:24

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-574cd-obile-keyboard-interactions-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-574cd-obile-keyboard-interactions-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-574cd-obile-keyboard-interactions-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-574cd-obile-keyboard-interactions-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-574cd-obile-keyboard-interactions-webkit\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-574cd-obile-keyboard-interactions-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › viewport meta tag prevents zoom" classname="mobile\mobile-specific.spec.js" time="1.282">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › orientation change handling" classname="mobile\mobile-specific.spec.js" time="1.188">
<properties>
<property name="skip" value="Orientation change not reliable on WebKit">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile-specific layout elements" classname="mobile\mobile-specific.spec.js" time="1.308">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › scroll behavior on mobile" classname="mobile\mobile-specific.spec.js" time="1.239">
<failure message="mobile-specific.spec.js:93:3 scroll behavior on mobile" type="FAILURE">
<![CDATA[  [webkit] › mobile\mobile-specific.spec.js:93:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › scroll behavior on mobile 

    Error: expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 1285
    Received:    1412

      105 |       
      106 |       // Should not have horizontal scroll
    > 107 |       expect(dimensions.scrollWidth).toBeLessThanOrEqual(dimensions.clientWidth + 5);
          |                                      ^
      108 |       
      109 |       // Should be able to scroll vertically if content is tall
      110 |       if (dimensions.scrollHeight > dimensions.clientHeight) {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:107:38

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-webkit\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile performance - load time" classname="mobile\mobile-specific.spec.js" time="1.763">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile gestures do not interfere" classname="mobile\mobile-specific.spec.js" time="1.205">
</testcase>
</testsuite>
<testsuite name="mobile\responsive.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="webkit" tests="18" failures="17" skipped="0" time="212.206" errors="0">
<testcase name="Mobile Responsiveness › displays correctly on mobile viewports" classname="mobile\responsive.spec.js" time="1.293">
<failure message="responsive.spec.js:8:3 displays correctly on mobile viewports" type="FAILURE">
<![CDATA[  [webkit] › mobile\responsive.spec.js:8:3 › Mobile Responsiveness › displays correctly on mobile viewports 

    Error: expect.toBeVisible: Error: strict mode violation: locator('text=Dashboard') resolved to 4 elements:
        1) <button type="button" title="Go to dashboard" aria-label="Go to dashboard">↩ Go to Dashboard</button> aka locator('div').filter({ hasText: /^↩ Go to Dashboard$/ }).getByLabel('Go to dashboard')
        2) <div>Create your customized P&L dashboard in just a fe…</div> aka getByText('Create your customized P&L')
        3) <button title="Go to dashboard" aria-label="Go to dashboard">↩ Go to Dashboard</button> aka locator('div').filter({ hasText: /^🔄 Reset Data↩ Go to Dashboard$/ }).getByLabel('Go to dashboard')
        4) <button disabled>📊 Dashboard</button> aka getByRole('button', { name: '📊 Dashboard' })

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Dashboard')


      10 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
      11 |     await expect(page.locator('text=Quick Inputs')).toBeVisible()
    > 12 |     await expect(page.locator('text=Dashboard')).toBeVisible()
         |                                                  ^
      13 |   })
      14 |
      15 |   test('region selector is accessible on mobile', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:12:50

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-webkit\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › region selector is accessible on mobile" classname="mobile\responsive.spec.js" time="1.149">
<failure message="responsive.spec.js:15:3 region selector is accessible on mobile" type="FAILURE">
<![CDATA[  [webkit] › mobile\responsive.spec.js:15:3 › Mobile Responsiveness › region selector is accessible on mobile 

    Error: expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 44
    Received:    36

      19 |     // Should be large enough to tap
      20 |     const box = await regionSelect.boundingBox()
    > 21 |     expect(box?.height).toBeGreaterThanOrEqual(44) // iOS minimum tap target
         |                         ^
      22 |   })
      23 |
      24 |   test('input fields are properly sized for mobile', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:21:25

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-webkit\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › input fields are properly sized for mobile" classname="mobile\responsive.spec.js" time="30.262">
<failure message="responsive.spec.js:24:3 input fields are properly sized for mobile" type="FAILURE">
<![CDATA[  [webkit] › mobile\responsive.spec.js:24:3 › Mobile Responsiveness › input fields are properly sized for mobile 

    Test timeout of 30000ms exceeded.

    Error: locator.boundingBox: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      28 |     for (let i = 0; i < inputCount; i++) {
      29 |       const input = inputs.nth(i)
    > 30 |       const box = await input.boundingBox()
         |                               ^
      31 |       
      32 |       // Inputs should be at least 44px high (iOS guideline)
      33 |       expect(box?.height).toBeGreaterThanOrEqual(44)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:30:31

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-4ace1-e-properly-sized-for-mobile-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-4ace1-e-properly-sized-for-mobile-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-4ace1-e-properly-sized-for-mobile-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-4ace1-e-properly-sized-for-mobile-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-4ace1-e-properly-sized-for-mobile-webkit\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-4ace1-e-properly-sized-for-mobile-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › KPI cards stack vertically on mobile" classname="mobile\responsive.spec.js" time="30.265">
<failure message="responsive.spec.js:39:3 KPI cards stack vertically on mobile" type="FAILURE">
<![CDATA[  [webkit] › mobile\responsive.spec.js:39:3 › Mobile Responsiveness › KPI cards stack vertically on mobile 

    Test timeout of 30000ms exceeded.

    Error: locator.boundingBox: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('.kpi').nth(1)


      43 |     
      44 |     const firstBox = await firstCard.boundingBox()
    > 45 |     const secondBox = await secondCard.boundingBox()
         |                                        ^
      46 |     
      47 |     // Second card should be below first card (higher Y position)
      48 |     if (firstBox && secondBox) {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:45:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-webkit\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › text is readable on mobile screens" classname="mobile\responsive.spec.js" time="1.157">
<failure message="responsive.spec.js:53:3 text is readable on mobile screens" type="FAILURE">
<![CDATA[  [webkit] › mobile\responsive.spec.js:53:3 › Mobile Responsiveness › text is readable on mobile screens 

    Error: expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 14
    Received:    NaN

      60 |     // Font size should be at least 16px on mobile to avoid zoom
      61 |     const fontSize = parseInt(styles.fontSize)
    > 62 |     expect(fontSize).toBeGreaterThanOrEqual(14)
         |                      ^
      63 |   })
      64 |
      65 |   test('footer content is accessible on mobile', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:62:22

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-ce8a4--readable-on-mobile-screens-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-ce8a4--readable-on-mobile-screens-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-ce8a4--readable-on-mobile-screens-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-ce8a4--readable-on-mobile-screens-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-ce8a4--readable-on-mobile-screens-webkit\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-ce8a4--readable-on-mobile-screens-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › footer content is accessible on mobile" classname="mobile\responsive.spec.js" time="5.933">
<failure message="responsive.spec.js:65:3 footer content is accessible on mobile" type="FAILURE">
<![CDATA[  [webkit] › mobile\responsive.spec.js:65:3 › Mobile Responsiveness › footer content is accessible on mobile 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.footer')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.footer')


      65 |   test('footer content is accessible on mobile', async ({ page }) => {
      66 |     const footer = page.locator('.footer')
    > 67 |     await expect(footer).toBeVisible()
         |                          ^
      68 |     
      69 |     // Footer text should be readable
      70 |     const footerText = await footer.textContent()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:67:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-webkit\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › tap to focus inputs works correctly" classname="mobile\responsive.spec.js" time="1.1">
<failure message="responsive.spec.js:80:3 tap to focus inputs works correctly" type="FAILURE">
<![CDATA[  [webkit] › mobile\responsive.spec.js:80:3 › Touch Interactions › tap to focus inputs works correctly 

    Error: locator.tap: The page does not support tap. Use hasTouch context option to enable touch support.

      82 |     
      83 |     // Tap to focus
    > 84 |     await avgNetFeeInput.tap()
         |                          ^
      85 |     await expect(avgNetFeeInput).toBeFocused()
      86 |   })
      87 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:84:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-webkit\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › tap and hold does not interfere with input" classname="mobile\responsive.spec.js" time="1.027">
<failure message="responsive.spec.js:88:3 tap and hold does not interfere with input" type="FAILURE">
<![CDATA[  [webkit] › mobile\responsive.spec.js:88:3 › Touch Interactions › tap and hold does not interfere with input 

    Error: locator.tap: The page does not support tap. Use hasTouch context option to enable touch support.

      90 |     
      91 |     // Long press should not cause issues
    > 92 |     await avgNetFeeInput.tap({ force: true })
         |                          ^
      93 |     await page.waitForTimeout(1000) // Simulate long press
      94 |     
      95 |     // Should still be able to type
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:92:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-webkit\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › select dropdown works with touch" classname="mobile\responsive.spec.js" time="1.022">
<failure message="responsive.spec.js:100:3 select dropdown works with touch" type="FAILURE">
<![CDATA[  [webkit] › mobile\responsive.spec.js:100:3 › Touch Interactions › select dropdown works with touch 

    Error: locator.tap: The page does not support tap. Use hasTouch context option to enable touch support.

      101 |     const regionSelect = page.locator('select[aria-label="Region"]')
      102 |     
    > 103 |     await regionSelect.tap()
          |                        ^
      104 |     await regionSelect.selectOption('CA')
      105 |     
      106 |     await expect(regionSelect).toHaveValue('CA')
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:103:24

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-webkit\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › reset button responds to touch" classname="mobile\responsive.spec.js" time="30.284">
<failure message="responsive.spec.js:109:3 reset button responds to touch" type="FAILURE">
<![CDATA[  [webkit] › mobile\responsive.spec.js:109:3 › Touch Interactions › reset button responds to touch ─

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()
        - locator resolved to <input min="50" step="1" max="500" value="125" type="number" placeholder="125" title="Average Net Fee" aria-label="Average Net Fee"/>
        - fill("200")
      - attempting fill action
        - waiting for element to be visible, enabled and editable
      - element was detached from the DOM, retrying


      112 |     
      113 |     // Change a value
    > 114 |     await avgNetFeeInput.fill('200')
          |                          ^
      115 |     
      116 |     // Tap reset
      117 |     await resetButton.tap()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:114:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-webkit\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Performance › app loads quickly on mobile connections" classname="mobile\responsive.spec.js" time="1.801">
</testcase>
<testcase name="Mobile Performance › calculations remain responsive during rapid input" classname="mobile\responsive.spec.js" time="30.172">
<failure message="responsive.spec.js:140:3 calculations remain responsive during rapid input" type="FAILURE">
<![CDATA[  [webkit] › mobile\responsive.spec.js:140:3 › Mobile Performance › calculations remain responsive during rapid input 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      144 |     const values = ['100', '150', '200', '250', '300']
      145 |     for (const value of values) {
    > 146 |       await avgNetFeeInput.fill(value)
          |                            ^
      147 |       await page.waitForTimeout(100) // Brief pause between changes
      148 |     }
      149 |     
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:146:28

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-webkit\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › prevents zoom on input focus (if implemented)" classname="mobile\responsive.spec.js" time="30.19">
<failure message="responsive.spec.js:159:3 prevents zoom on input focus (if implemented)" type="FAILURE">
<![CDATA[  [webkit] › mobile\responsive.spec.js:159:3 › Mobile Specific Features › prevents zoom on input focus (if implemented) 

    Test timeout of 30000ms exceeded.

    Error: locator.getAttribute: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('meta[name="viewport"]')


      160 |     // Check if viewport meta tag prevents zoom
      161 |     const viewportMeta = page.locator('meta[name="viewport"]')
    > 162 |     const content = await viewportMeta.getAttribute('content')
          |                                        ^
      163 |     
      164 |     // This test depends on whether zoom prevention is desired
      165 |     // Some accessibility guidelines recommend allowing zoom
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:162:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--webkit\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › handles device orientation changes gracefully" classname="mobile\responsive.spec.js" time="5.271">
<failure message="responsive.spec.js:172:3 handles device orientation changes gracefully" type="FAILURE">
<![CDATA[  [webkit] › mobile\responsive.spec.js:172:3 › Mobile Specific Features › handles device orientation changes gracefully 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Liberty Tax • P&L Budget & Forecast')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Liberty Tax • P&L Budget & Forecast')


      173 |     // Start in portrait
      174 |     await page.setViewportSize({ width: 390, height: 844 })
    > 175 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
          |                                                                            ^
      176 |     
      177 |     // Switch to landscape
      178 |     await page.setViewportSize({ width: 844, height: 390 })
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:175:76

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-webkit\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › supports dark mode if device prefers it" classname="mobile\responsive.spec.js" time="5.374">
<failure message="responsive.spec.js:186:3 supports dark mode if device prefers it" type="FAILURE">
<![CDATA[  [webkit] › mobile\responsive.spec.js:186:3 › Mobile Specific Features › supports dark mode if device prefers it 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Liberty Tax • P&L Budget & Forecast')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Liberty Tax • P&L Budget & Forecast')


      190 |     
      191 |     // App should still function (specific styling tests would go here)
    > 192 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
          |                                                                            ^
      193 |   })
      194 | })
      195 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:192:76

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-webkit\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility on Mobile › maintains proper focus management" classname="mobile\responsive.spec.js" time="5.361">
<failure message="responsive.spec.js:197:3 maintains proper focus management" type="FAILURE">
<![CDATA[  [webkit] › mobile\responsive.spec.js:197:3 › Accessibility on Mobile › maintains proper focus management 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator(':focus')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator(':focus')


      199 |     await page.keyboard.press('Tab')
      200 |     const focusedElement = page.locator(':focus')
    > 201 |     await expect(focusedElement).toBeVisible()
          |                                  ^
      202 |   })
      203 |
      204 |   test('form labels work with screen readers', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:201:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-webkit\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility on Mobile › form labels work with screen readers" classname="mobile\responsive.spec.js" time="30.171">
<failure message="responsive.spec.js:204:3 form labels work with screen readers" type="FAILURE">
<![CDATA[  [webkit] › mobile\responsive.spec.js:204:3 › Accessibility on Mobile › form labels work with screen readers 

    Test timeout of 30000ms exceeded.

    Error: locator.textContent: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('label:has(input[type="number"])').first()


      204 |   test('form labels work with screen readers', async ({ page }) => {
      205 |     const avgNetFeeInput = page.locator('input[type="number"]').first()
    > 206 |     const labelText = await page.locator('label:has(input[type="number"])').first().textContent()
          |                                                                                     ^
      207 |     
      208 |     expect(labelText).toContain('Average Net Fee')
      209 |   })
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:206:85

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-webkit\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility on Mobile › maintains sufficient color contrast" classname="mobile\responsive.spec.js" time="0.374">
<failure message="responsive.spec.js:211:3 maintains sufficient color contrast" type="FAILURE">
<![CDATA[  [webkit] › mobile\responsive.spec.js:211:3 › Accessibility on Mobile › maintains sufficient color contrast 

    Error: expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      215 |     const count = await kpiElements.count()
      216 |     
    > 217 |     expect(count).toBeGreaterThan(0)
          |                   ^
      218 |   })
      219 | })
      220 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:217:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-webkit\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-webkit\video.webm]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="snapshots.spec.ts" timestamp="2025-09-21T14:00:33.654Z" hostname="webkit" tests="1" failures="0" skipped="0" time="7.279" errors="0">
<testcase name="UI Snapshots › capture key screens" classname="snapshots.spec.ts" time="7.279">
</testcase>
</testsuite>
<testsuite name="app.spec.ts" timestamp="2025-09-21T14:00:33.654Z" hostname="Mobile Chrome" tests="15" failures="14" skipped="0" time="149.892" errors="0">
<testcase name="Liberty Tax P&amp;L Application › displays the main application interface" classname="app.spec.ts" time="6.328">
<failure message="app.spec.ts:65:3 displays the main application interface" type="FAILURE">
<![CDATA[  [Mobile Chrome] › app.spec.ts:65:3 › Liberty Tax P&L Application › displays the main application interface 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Quick Inputs')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Quick Inputs')


      68 |     
      69 |     // Check main sections are present
    > 70 |     await expect(page.locator('text=Quick Inputs')).toBeVisible()
         |                                                     ^
      71 |     await expect(page.locator('text=Dashboard')).toBeVisible()
      72 |     await expect(page.locator('text=Income Drivers')).toBeVisible()
      73 |     await expect(page.locator('text=Expense Percentages')).toBeVisible()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:70:53

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › has correct initial values" classname="app.spec.ts" time="0.78">
<failure message="app.spec.ts:76:3 has correct initial values" type="FAILURE">
<![CDATA[  [Mobile Chrome] › app.spec.ts:76:3 › Liberty Tax P&L Application › has correct initial values ────

    Error: expect.toHaveValue: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - Expect "toHaveValue" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      75 |
      76 |   test('has correct initial values', async ({ page }) => {
    > 77 |     await expect(pnlPage.regionSelect).toHaveValue('US')
         |                                        ^
      78 |     await expect(pnlPage.avgNetFeeInput).toHaveValue('125')
      79 |     await expect(pnlPage.taxPrepReturnsInput).toHaveValue('1600')
      80 |     await expect(pnlPage.taxRushReturnsInput).toHaveValue('0')
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:77:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › enables TaxRush input when region is set to Canada" classname="app.spec.ts" time="0.843">
<failure message="app.spec.ts:84:3 enables TaxRush input when region is set to Canada" type="FAILURE">
<![CDATA[  [Mobile Chrome] › app.spec.ts:84:3 › Liberty Tax P&L Application › enables TaxRush input when region is set to Canada 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:85:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › disables and resets TaxRush when switching to US" classname="app.spec.ts" time="0.818">
<failure message="app.spec.ts:89:3 disables and resets TaxRush when switching to US" type="FAILURE">
<![CDATA[  [Mobile Chrome] › app.spec.ts:89:3 › Liberty Tax P&L Application › disables and resets TaxRush when switching to US 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:91:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › updates calculations when inputs change" classname="app.spec.ts" time="31.198">
<failure message="app.spec.ts:101:3 updates calculations when inputs change" type="FAILURE">
<![CDATA[  [Mobile Chrome] › app.spec.ts:101:3 › Liberty Tax P&L Application › updates calculations when inputs change 

    Test timeout of 30000ms exceeded.

    Error: locator.textContent: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('.kpi:has-text("Net Income") .value')


      101 |   test('updates calculations when inputs change', async ({ page }) => {
      102 |     // Get initial net income
    > 103 |     const initialNetIncome = await pnlPage.netIncomeValue.textContent()
          |                                                           ^
      104 |     
      105 |     // Change average net fee
      106 |     await pnlPage.setAvgNetFee(200)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:103:59

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › persists data across page reloads" classname="app.spec.ts" time="0.968">
<failure message="app.spec.ts:114:3 persists data across page reloads" type="FAILURE">
<![CDATA[  [Mobile Chrome] › app.spec.ts:114:3 › Liberty Tax P&L Application › persists data across page reloads 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:116:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › resets all values when reset button is clicked" classname="app.spec.ts" time="0.787">
<failure message="app.spec.ts:134:3 resets all values when reset button is clicked" type="FAILURE">
<![CDATA[  [Mobile Chrome] › app.spec.ts:134:3 › Liberty Tax P&L Application › resets all values when reset button is clicked 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:136:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › displays KPI status colors correctly" classname="app.spec.ts" time="5.85">
<failure message="app.spec.ts:150:3 displays KPI status colors correctly" type="FAILURE">
<![CDATA[  [Mobile Chrome] › app.spec.ts:150:3 › Liberty Tax P&L Application › displays KPI status colors correctly 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.kpi:has-text("Net Income")')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.kpi:has-text("Net Income")')


      154 |     const costPerReturnKPI = page.locator('.kpi:has-text("Cost / Return")')
      155 |     
    > 156 |     await expect(netIncomeKPI).toBeVisible()
          |                                ^
      157 |     await expect(netMarginKPI).toBeVisible()
      158 |     await expect(costPerReturnKPI).toBeVisible()
      159 |     
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:156:32

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › shows pro-tips based on KPI status" classname="app.spec.ts" time="6.006">
<failure message="app.spec.ts:170:3 shows pro-tips based on KPI status" type="FAILURE">
<![CDATA[  [Mobile Chrome] › app.spec.ts:170:3 › Liberty Tax P&L Application › shows pro-tips based on KPI status 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.card:has-text("Pro-Tips")')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.card:has-text("Pro-Tips")')


      174 |     // There should be some tips shown (content depends on current KPI status)
      175 |     const proTipsSection = page.locator('.card:has-text("Pro-Tips")')
    > 176 |     await expect(proTipsSection).toBeVisible()
          |                                  ^
      177 |   })
      178 |
      179 |   test('handles edge case of zero returns', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:176:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles edge case of zero returns" classname="app.spec.ts" time="31.226">
<failure message="app.spec.ts:179:3 handles edge case of zero returns" type="FAILURE">
<![CDATA[  [Mobile Chrome] › app.spec.ts:179:3 › Liberty Tax P&L Application › handles edge case of zero returns 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('label:has-text("Tax Prep Returns") + input')
        - locator resolved to <input id="ret-lbl" value="1600" aria-label="Tax Prep Returns"/>
        - fill("0")
      - attempting fill action
        2 × waiting for element to be visible, enabled and editable
          - element is not visible
        - retrying fill action
        - waiting 20ms
        2 × waiting for element to be visible, enabled and editable
          - element is not visible
        - retrying fill action
          - waiting 100ms
        58 × waiting for element to be visible, enabled and editable
           - element is not visible
         - retrying fill action
           - waiting 500ms


      28 |
      29 |   async setTaxPrepReturns(value: number) {
    > 30 |     await this.taxPrepReturnsInput.fill(value.toString())
         |                                    ^
      31 |     await this.taxPrepReturnsInput.blur()
      32 |   }
      33 |
        at PnLPage.setTaxPrepReturns (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:30:36)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:180:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles very large input values" classname="app.spec.ts" time="31.503">
<failure message="app.spec.ts:189:3 handles very large input values" type="FAILURE">
<![CDATA[  [Mobile Chrome] › app.spec.ts:189:3 › Liberty Tax P&L Application › handles very large input values 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      23 |
      24 |   async setAvgNetFee(value: number) {
    > 25 |     await this.avgNetFeeInput.fill(value.toString())
         |                               ^
      26 |     await this.avgNetFeeInput.blur()
      27 |   }
      28 |
        at PnLPage.setAvgNetFee (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:25:31)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:190:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › maintains TaxRush stickiness in Canada" classname="app.spec.ts" time="0.75">
<failure message="app.spec.ts:202:3 maintains TaxRush stickiness in Canada" type="FAILURE">
<![CDATA[  [Mobile Chrome] › app.spec.ts:202:3 › Liberty Tax P&L Application › maintains TaxRush stickiness in Canada 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:204:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › keyboard navigation works correctly" classname="app.spec.ts" time="0.705">
<failure message="app.spec.ts:212:3 keyboard navigation works correctly" type="FAILURE">
<![CDATA[  [Mobile Chrome] › app.spec.ts:212:3 › Liberty Tax P&L Application › keyboard navigation works correctly 

    Error: expect.toBeFocused: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - Expect "toBeFocused" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      213 |     // Test tab navigation through inputs
      214 |     await page.keyboard.press('Tab')
    > 215 |     await expect(pnlPage.regionSelect).toBeFocused()
          |                                        ^
      216 |     
      217 |     // Continue tabbing to inputs
      218 |     await page.keyboard.press('Tab')
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:215:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Performance &amp; Responsiveness › loads within acceptable time" classname="app.spec.ts" time="0.71">
</testcase>
<testcase name="Performance &amp; Responsiveness › calculations are performant" classname="app.spec.ts" time="31.42">
<failure message="app.spec.ts:234:3 calculations are performant" type="FAILURE">
<![CDATA[  [Mobile Chrome] › app.spec.ts:234:3 › Performance & Responsiveness › calculations are performant ─

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      23 |
      24 |   async setAvgNetFee(value: number) {
    > 25 |     await this.avgNetFeeInput.fill(value.toString())
         |                               ^
      26 |     await this.avgNetFeeInput.blur()
      27 |   }
      28 |
        at PnLPage.setAvgNetFee (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:25:31)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:242:21

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="basic-functionality.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="Mobile Chrome" tests="6" failures="4" skipped="1" time="64.796" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › homepage loads successfully" classname="basic-functionality.spec.js" time="0.693">
<failure message="basic-functionality.spec.js:9:3 homepage loads successfully" type="FAILURE">
<![CDATA[  [Mobile Chrome] › basic-functionality.spec.js:9:3 › Liberty Tax P&L Webapp - Basic Functionality › homepage loads successfully 

    Error: expect(received).toBeTruthy()

    Received: false

      16 |     // Look for key elements that should be present
      17 |     const hasMainContent = await page.locator('main, #root, .app, [class*="app"]').first().isVisible();
    > 18 |     expect(hasMainContent).toBeTruthy();
         |                            ^
      19 |   });
      20 |
      21 |   test('wizard can be opened', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:18:28

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › wizard can be opened" classname="basic-functionality.spec.js" time="30.234">
<failure message="basic-functionality.spec.js:21:3 wizard can be opened" type="FAILURE">
<![CDATA[  [Mobile Chrome] › basic-functionality.spec.js:21:3 › Liberty Tax P&L Webapp - Basic Functionality › wizard can be opened 

    Test timeout of 30000ms exceeded.

    Error: locator.click: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('button').filter({ hasText: /start|wizard|begin|create/i }).first()
        - locator resolved to <button>🚀 Setup Wizard</button>
      - attempting click action
        - waiting for element to be visible, enabled and stable
        - element is not stable
      - retrying click action
        - waiting for element to be visible, enabled and stable
        - element is visible, enabled and stable
        - scrolling into view if needed
        - done scrolling
        - <div>…</div> from <div>…</div> subtree intercepts pointer events
      - retrying click action
        - waiting 20ms
        2 × waiting for element to be visible, enabled and stable
          - element is visible, enabled and stable
          - scrolling into view if needed
          - done scrolling
          - <label>…</label> from <div>…</div> subtree intercepts pointer events
        - retrying click action
          - waiting 100ms
        14 × waiting for element to be visible, enabled and stable
           - element is visible, enabled and stable
           - scrolling into view if needed
           - done scrolling
           - <label>…</label> from <div>…</div> subtree intercepts pointer events
         - retrying click action
           - waiting 500ms
           - waiting for element to be visible, enabled and stable
           - element is visible, enabled and stable
           - scrolling into view if needed
           - done scrolling
           - <footer>…</footer> intercepts pointer events
         - retrying click action
           - waiting 500ms
           - waiting for element to be visible, enabled and stable
           - element is visible, enabled and stable
           - scrolling into view if needed
           - done scrolling
           - <label>…</label> from <div>…</div> subtree intercepts pointer events
         - retrying click action
           - waiting 500ms
           - waiting for element to be visible, enabled and stable
           - element is visible, enabled and stable
           - scrolling into view if needed
           - done scrolling
           - <label>…</label> from <div>…</div> subtree intercepts pointer events
         - retrying click action
           - waiting 500ms


      26 |     
      27 |     if (await startButton.isVisible()) {
    > 28 |       await startButton.click();
         |                         ^
      29 |       
      30 |       // Check if wizard opened - look for wizard-specific content
      31 |       const wizardContent = page.locator('h1, h2, h3, [class*="wizard"], [id*="wizard"]').filter({ 
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:28:25

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › debug panel can be accessed" classname="basic-functionality.spec.js" time="0.738">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › no JavaScript errors on page load" classname="basic-functionality.spec.js" time="1.367">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › responsive design - no horizontal scroll" classname="basic-functionality.spec.js" time="1.416">
<failure message="basic-functionality.spec.js:71:3 responsive design - no horizontal scroll" type="FAILURE">
<![CDATA[  [Mobile Chrome] › basic-functionality.spec.js:71:3 › Liberty Tax P&L Webapp - Basic Functionality › responsive design - no horizontal scroll 

    Error: expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 380
    Received:    565

      87 |       
      88 |       // Allow small tolerance (5px) for rounding
    > 89 |       expect(bodyWidth).toBeLessThanOrEqual(viewportWidth + 5);
         |                         ^
      90 |     }
      91 |   });
      92 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:89:25

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › basic form interactions work" classname="basic-functionality.spec.js" time="30.348">
<failure message="basic-functionality.spec.js:93:3 basic form interactions work" type="FAILURE">
<![CDATA[  [Mobile Chrome] › basic-functionality.spec.js:93:3 › Liberty Tax P&L Webapp - Basic Functionality › basic form interactions work 

    Test timeout of 30000ms exceeded.

    Error: locator.click: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input, select, textarea').first()
        - locator resolved to <select title="Region" aria-label="Region">…</select>
      - attempting click action
        2 × waiting for element to be visible, enabled and stable
          - element is visible, enabled and stable
          - scrolling into view if needed
          - done scrolling
          - <div class="header">…</div> intercepts pointer events
        - retrying click action
        - waiting 20ms
        2 × waiting for element to be visible, enabled and stable
          - element is visible, enabled and stable
          - scrolling into view if needed
          - done scrolling
          - <div class="header">…</div> intercepts pointer events
        - retrying click action
          - waiting 100ms
        56 × waiting for element to be visible, enabled and stable
           - element is visible, enabled and stable
           - scrolling into view if needed
           - done scrolling
           - <div class="header">…</div> intercepts pointer events
         - retrying click action
           - waiting 500ms


      112 |           }
      113 |         } else if (tagName === 'select') {
    > 114 |           await input.click();
          |                       ^
      115 |           // Just verify it's interactive
      116 |           expect(await input.isEnabled()).toBeTruthy();
      117 |         }
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:114:23

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-cae2f-asic-form-interactions-work-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-cae2f-asic-form-interactions-work-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-cae2f-asic-form-interactions-work-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-cae2f-asic-form-interactions-work-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-cae2f-asic-form-interactions-work-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-cae2f-asic-form-interactions-work-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="generated\wizardinputs.generated.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="Mobile Chrome" tests="34" failures="0" skipped="0" time="22.922" errors="0">
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0.686">
<system-out>
<![CDATA[Testing: percentage accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0.686">
<system-out>
<![CDATA[Testing: percentage accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0.602">
<system-out>
<![CDATA[Testing: percentage rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0.656">
<system-out>
<![CDATA[Testing: percentage rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0.639">
<system-out>
<![CDATA[Testing: percentage rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0.65">
<system-out>
<![CDATA[Testing: percentage rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0.833">
<system-out>
<![CDATA[Testing: currency accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0.645">
<system-out>
<![CDATA[Testing: currency accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0.691">
<system-out>
<![CDATA[Testing: currency rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0.688">
<system-out>
<![CDATA[Testing: currency rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0.675">
<system-out>
<![CDATA[Testing: currency rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0.669">
<system-out>
<![CDATA[Testing: currency rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0.692">
<system-out>
<![CDATA[Testing: returns accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0.685">
<system-out>
<![CDATA[Testing: returns accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0.668">
<system-out>
<![CDATA[Testing: returns rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0.636">
<system-out>
<![CDATA[Testing: returns rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0.674">
<system-out>
<![CDATA[Testing: returns rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0.68">
<system-out>
<![CDATA[Testing: returns rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0.687">
<system-out>
<![CDATA[Testing: growth accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0.67">
<system-out>
<![CDATA[Testing: growth accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0.671">
<system-out>
<![CDATA[Testing: growth rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0.708">
<system-out>
<![CDATA[Testing: growth rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0.677">
<system-out>
<![CDATA[Testing: growth rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0.684">
<system-out>
<![CDATA[Testing: growth rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › keyboard navigation works correctly" classname="generated\wizardinputs.generated.spec.js" time="0.653">
<system-out>
<![CDATA[Testing: keyboard navigation works correctly
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › screen reader announcements are correct" classname="generated\wizardinputs.generated.spec.js" time="0.665">
<system-out>
<![CDATA[Testing: screen reader announcements are correct
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › error messages are announced" classname="generated\wizardinputs.generated.spec.js" time="0.713">
<system-out>
<![CDATA[Testing: error messages are announced
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › color contrast meets WCAG standards" classname="generated\wizardinputs.generated.spec.js" time="0.666">
<system-out>
<![CDATA[Testing: color contrast meets WCAG standards
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › renders within performance budget" classname="generated\wizardinputs.generated.spec.js" time="0.676">
<system-out>
<![CDATA[Testing: renders within performance budget
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › handles rapid input changes efficiently" classname="generated\wizardinputs.generated.spec.js" time="0.659">
<system-out>
<![CDATA[Testing: handles rapid input changes efficiently
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › calculation updates are debounced" classname="generated\wizardinputs.generated.spec.js" time="0.664">
<system-out>
<![CDATA[Testing: calculation updates are debounced
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › complete wizard flow successfully" classname="generated\wizardinputs.generated.spec.js" time="0.666">
<system-out>
<![CDATA[Testing: complete wizard flow successfully
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › recover from validation errors gracefully" classname="generated\wizardinputs.generated.spec.js" time="0.653">
<system-out>
<![CDATA[Testing: recover from validation errors gracefully
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › data persistence across page refresh" classname="generated\wizardinputs.generated.spec.js" time="0.655">
<system-out>
<![CDATA[Testing: data persistence across page refresh
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="mobile\mobile-specific.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="Mobile Chrome" tests="8" failures="4" skipped="0" time="37.482" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › touch targets are large enough" classname="mobile\mobile-specific.spec.js" time="0.709">
<failure message="mobile-specific.spec.js:9:3 touch targets are large enough" type="FAILURE">
<![CDATA[  [Mobile Chrome] › mobile\mobile-specific.spec.js:9:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › touch targets are large enough 

    Error: expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 44
    Received:    27

      19 |           // Minimum touch target size should be 44x44px (Apple guidelines)
      20 |           expect(box.width).toBeGreaterThanOrEqual(44);
    > 21 |           expect(box.height).toBeGreaterThanOrEqual(44);
         |                              ^
      22 |         }
      23 |       }
      24 |     }
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:21:30

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile keyboard interactions" classname="mobile\mobile-specific.spec.js" time="0.747">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › viewport meta tag prevents zoom" classname="mobile\mobile-specific.spec.js" time="0.729">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › orientation change handling" classname="mobile\mobile-specific.spec.js" time="1.185">
<failure message="mobile-specific.spec.js:54:3 orientation change handling" type="FAILURE">
<![CDATA[  [Mobile Chrome] › mobile\mobile-specific.spec.js:54:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › orientation change handling 

    Error: expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 380
    Received:    565

      62 |     // Check no horizontal scroll in portrait
      63 |     let bodyWidth = await page.evaluate(() => document.body.scrollWidth);
    > 64 |     expect(bodyWidth).toBeLessThanOrEqual(375 + 5);
         |                       ^
      65 |     
      66 |     // Switch to landscape
      67 |     await page.setViewportSize({ width: 667, height: 375 });
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:64:23

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile-specific layout elements" classname="mobile\mobile-specific.spec.js" time="31.227">
<failure message="mobile-specific.spec.js:75:3 mobile-specific layout elements" type="FAILURE">
<![CDATA[  [Mobile Chrome] › mobile\mobile-specific.spec.js:75:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › mobile-specific layout elements 

    Test timeout of 30000ms exceeded.

    Error: locator.boundingBox: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('main, #root, .app').first()


      83 |       // Check that content is not cut off
      84 |       const mainContent = page.locator('main, #root, .app').first();
    > 85 |       const box = await mainContent.boundingBox();
         |                                     ^
      86 |       
      87 |       if (box) {
      88 |         expect(box.width).toBeLessThanOrEqual(viewport.width);
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:85:37

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-e887c-le-specific-layout-elements-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-e887c-le-specific-layout-elements-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-e887c-le-specific-layout-elements-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-e887c-le-specific-layout-elements-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-e887c-le-specific-layout-elements-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-e887c-le-specific-layout-elements-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › scroll behavior on mobile" classname="mobile\mobile-specific.spec.js" time="0.686">
<failure message="mobile-specific.spec.js:93:3 scroll behavior on mobile" type="FAILURE">
<![CDATA[  [Mobile Chrome] › mobile\mobile-specific.spec.js:93:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › scroll behavior on mobile 

    Error: expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 398
    Received:    1372

      105 |       
      106 |       // Should not have horizontal scroll
    > 107 |       expect(dimensions.scrollWidth).toBeLessThanOrEqual(dimensions.clientWidth + 5);
          |                                      ^
      108 |       
      109 |       // Should be able to scroll vertically if content is tall
      110 |       if (dimensions.scrollHeight > dimensions.clientHeight) {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:107:38

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile performance - load time" classname="mobile\mobile-specific.spec.js" time="1.368">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile gestures do not interfere" classname="mobile\mobile-specific.spec.js" time="0.831">
</testcase>
</testsuite>
<testsuite name="mobile\responsive.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="Mobile Chrome" tests="18" failures="15" skipped="0" time="254.289" errors="0">
<testcase name="Mobile Responsiveness › displays correctly on mobile viewports" classname="mobile\responsive.spec.js" time="5.888">
<failure message="responsive.spec.js:8:3 displays correctly on mobile viewports" type="FAILURE">
<![CDATA[  [Mobile Chrome] › mobile\responsive.spec.js:8:3 › Mobile Responsiveness › displays correctly on mobile viewports 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Quick Inputs')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Quick Inputs')


       9 |     // Test main elements are visible
      10 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
    > 11 |     await expect(page.locator('text=Quick Inputs')).toBeVisible()
         |                                                     ^
      12 |     await expect(page.locator('text=Dashboard')).toBeVisible()
      13 |   })
      14 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:11:53

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › region selector is accessible on mobile" classname="mobile\responsive.spec.js" time="0.628">
<failure message="responsive.spec.js:15:3 region selector is accessible on mobile" type="FAILURE">
<![CDATA[  [Mobile Chrome] › mobile\responsive.spec.js:15:3 › Mobile Responsiveness › region selector is accessible on mobile 

    Error: expect.toBeVisible: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      15 |   test('region selector is accessible on mobile', async ({ page }) => {
      16 |     const regionSelect = page.locator('select[aria-label="Region"]')
    > 17 |     await expect(regionSelect).toBeVisible()
         |                                ^
      18 |     
      19 |     // Should be large enough to tap
      20 |     const box = await regionSelect.boundingBox()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:17:32

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › input fields are properly sized for mobile" classname="mobile\responsive.spec.js" time="0.694">
</testcase>
<testcase name="Mobile Responsiveness › KPI cards stack vertically on mobile" classname="mobile\responsive.spec.js" time="31.139">
<failure message="responsive.spec.js:39:3 KPI cards stack vertically on mobile" type="FAILURE">
<![CDATA[  [Mobile Chrome] › mobile\responsive.spec.js:39:3 › Mobile Responsiveness › KPI cards stack vertically on mobile 

    Test timeout of 30000ms exceeded.

    Error: locator.boundingBox: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('.kpi').first()


      42 |     const secondCard = kpiCards.nth(1)
      43 |     
    > 44 |     const firstBox = await firstCard.boundingBox()
         |                                      ^
      45 |     const secondBox = await secondCard.boundingBox()
      46 |     
      47 |     // Second card should be below first card (higher Y position)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:44:38

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › text is readable on mobile screens" classname="mobile\responsive.spec.js" time="0.687">
</testcase>
<testcase name="Mobile Responsiveness › footer content is accessible on mobile" classname="mobile\responsive.spec.js" time="5.646">
<failure message="responsive.spec.js:65:3 footer content is accessible on mobile" type="FAILURE">
<![CDATA[  [Mobile Chrome] › mobile\responsive.spec.js:65:3 › Mobile Responsiveness › footer content is accessible on mobile 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.footer')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.footer')


      65 |   test('footer content is accessible on mobile', async ({ page }) => {
      66 |     const footer = page.locator('.footer')
    > 67 |     await expect(footer).toBeVisible()
         |                          ^
      68 |     
      69 |     // Footer text should be readable
      70 |     const footerText = await footer.textContent()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:67:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › tap to focus inputs works correctly" classname="mobile\responsive.spec.js" time="31.501">
<failure message="responsive.spec.js:80:3 tap to focus inputs works correctly" type="FAILURE">
<![CDATA[  [Mobile Chrome] › mobile\responsive.spec.js:80:3 › Touch Interactions › tap to focus inputs works correctly 

    Test timeout of 30000ms exceeded.

    Error: locator.tap: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      82 |     
      83 |     // Tap to focus
    > 84 |     await avgNetFeeInput.tap()
         |                          ^
      85 |     await expect(avgNetFeeInput).toBeFocused()
      86 |   })
      87 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:84:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › tap and hold does not interfere with input" classname="mobile\responsive.spec.js" time="31.15">
<failure message="responsive.spec.js:88:3 tap and hold does not interfere with input" type="FAILURE">
<![CDATA[  [Mobile Chrome] › mobile\responsive.spec.js:88:3 › Touch Interactions › tap and hold does not interfere with input 

    Test timeout of 30000ms exceeded.

    Error: locator.tap: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      90 |     
      91 |     // Long press should not cause issues
    > 92 |     await avgNetFeeInput.tap({ force: true })
         |                          ^
      93 |     await page.waitForTimeout(1000) // Simulate long press
      94 |     
      95 |     // Should still be able to type
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:92:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › select dropdown works with touch" classname="mobile\responsive.spec.js" time="0.765">
<failure message="responsive.spec.js:100:3 select dropdown works with touch" type="FAILURE">
<![CDATA[  [Mobile Chrome] › mobile\responsive.spec.js:100:3 › Touch Interactions › select dropdown works with touch 

    Error: locator.tap: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      101 |     const regionSelect = page.locator('select[aria-label="Region"]')
      102 |     
    > 103 |     await regionSelect.tap()
          |                        ^
      104 |     await regionSelect.selectOption('CA')
      105 |     
      106 |     await expect(regionSelect).toHaveValue('CA')
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:103:24

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › reset button responds to touch" classname="mobile\responsive.spec.js" time="31.395">
<failure message="responsive.spec.js:109:3 reset button responds to touch" type="FAILURE">
<![CDATA[  [Mobile Chrome] › mobile\responsive.spec.js:109:3 › Touch Interactions › reset button responds to touch 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      112 |     
      113 |     // Change a value
    > 114 |     await avgNetFeeInput.fill('200')
          |                          ^
      115 |     
      116 |     // Tap reset
      117 |     await resetButton.tap()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:114:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Mobile-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Performance › app loads quickly on mobile connections" classname="mobile\responsive.spec.js" time="1.637">
</testcase>
<testcase name="Mobile Performance › calculations remain responsive during rapid input" classname="mobile\responsive.spec.js" time="32.306">
<failure message="responsive.spec.js:140:3 calculations remain responsive during rapid input" type="FAILURE">
<![CDATA[  [Mobile Chrome] › mobile\responsive.spec.js:140:3 › Mobile Performance › calculations remain responsive during rapid input 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      144 |     const values = ['100', '150', '200', '250', '300']
      145 |     for (const value of values) {
    > 146 |       await avgNetFeeInput.fill(value)
          |                            ^
      147 |       await page.waitForTimeout(100) // Brief pause between changes
      148 |     }
      149 |     
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:146:28

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-Mobile-Chrome\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › prevents zoom on input focus (if implemented)" classname="mobile\responsive.spec.js" time="32.076">
<failure message="responsive.spec.js:159:3 prevents zoom on input focus (if implemented)" type="FAILURE">
<![CDATA[  [Mobile Chrome] › mobile\responsive.spec.js:159:3 › Mobile Specific Features › prevents zoom on input focus (if implemented) 

    Test timeout of 30000ms exceeded.

    Error: locator.getAttribute: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('meta[name="viewport"]')


      160 |     // Check if viewport meta tag prevents zoom
      161 |     const viewportMeta = page.locator('meta[name="viewport"]')
    > 162 |     const content = await viewportMeta.getAttribute('content')
          |                                        ^
      163 |     
      164 |     // This test depends on whether zoom prevention is desired
      165 |     // Some accessibility guidelines recommend allowing zoom
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:162:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--Mobile-Chrome\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › handles device orientation changes gracefully" classname="mobile\responsive.spec.js" time="5.261">
<failure message="responsive.spec.js:172:3 handles device orientation changes gracefully" type="FAILURE">
<![CDATA[  [Mobile Chrome] › mobile\responsive.spec.js:172:3 › Mobile Specific Features › handles device orientation changes gracefully 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Liberty Tax • P&L Budget & Forecast')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Liberty Tax • P&L Budget & Forecast')


      173 |     // Start in portrait
      174 |     await page.setViewportSize({ width: 390, height: 844 })
    > 175 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
          |                                                                            ^
      176 |     
      177 |     // Switch to landscape
      178 |     await page.setViewportSize({ width: 844, height: 390 })
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:175:76

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-Mobile-Chrome\test-failed-1.png]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › supports dark mode if device prefers it" classname="mobile\responsive.spec.js" time="5.519">
<failure message="responsive.spec.js:186:3 supports dark mode if device prefers it" type="FAILURE">
<![CDATA[  [Mobile Chrome] › mobile\responsive.spec.js:186:3 › Mobile Specific Features › supports dark mode if device prefers it 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Liberty Tax • P&L Budget & Forecast')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Liberty Tax • P&L Budget & Forecast')


      190 |     
      191 |     // App should still function (specific styling tests would go here)
    > 192 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
          |                                                                            ^
      193 |   })
      194 | })
      195 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:192:76

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-Mobile-Chrome\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility on Mobile › maintains proper focus management" classname="mobile\responsive.spec.js" time="5.606">
<failure message="responsive.spec.js:197:3 maintains proper focus management" type="FAILURE">
<![CDATA[  [Mobile Chrome] › mobile\responsive.spec.js:197:3 › Accessibility on Mobile › maintains proper focus management 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator(':focus')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator(':focus')


      199 |     await page.keyboard.press('Tab')
      200 |     const focusedElement = page.locator(':focus')
    > 201 |     await expect(focusedElement).toBeVisible()
          |                                  ^
      202 |   })
      203 |
      204 |   test('form labels work with screen readers', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:201:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-Mobile-Chrome\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility on Mobile › form labels work with screen readers" classname="mobile\responsive.spec.js" time="32.108">
<failure message="responsive.spec.js:204:3 form labels work with screen readers" type="FAILURE">
<![CDATA[  [Mobile Chrome] › mobile\responsive.spec.js:204:3 › Accessibility on Mobile › form labels work with screen readers 

    Test timeout of 30000ms exceeded.

    Error: locator.textContent: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('label:has(input[type="number"])').first()


      204 |   test('form labels work with screen readers', async ({ page }) => {
      205 |     const avgNetFeeInput = page.locator('input[type="number"]').first()
    > 206 |     const labelText = await page.locator('label:has(input[type="number"])').first().textContent()
          |                                                                                     ^
      207 |     
      208 |     expect(labelText).toContain('Average Net Fee')
      209 |   })
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:206:85

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-Mobile-Chrome\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility on Mobile › maintains sufficient color contrast" classname="mobile\responsive.spec.js" time="0.283">
<failure message="responsive.spec.js:211:3 maintains sufficient color contrast" type="FAILURE">
<![CDATA[  [Mobile Chrome] › mobile\responsive.spec.js:211:3 › Accessibility on Mobile › maintains sufficient color contrast 

    Error: expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      215 |     const count = await kpiElements.count()
      216 |     
    > 217 |     expect(count).toBeGreaterThan(0)
          |                   ^
      218 |   })
      219 | })
      220 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:217:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-Mobile-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-Mobile-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-Mobile-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-Mobile-Chrome\video.webm]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="snapshots.spec.ts" timestamp="2025-09-21T14:00:33.654Z" hostname="Mobile Chrome" tests="1" failures="0" skipped="0" time="6.815" errors="0">
<testcase name="UI Snapshots › capture key screens" classname="snapshots.spec.ts" time="6.815">
</testcase>
</testsuite>
<testsuite name="app.spec.ts" timestamp="2025-09-21T14:00:33.654Z" hostname="Mobile Safari" tests="15" failures="14" skipped="0" time="147.746" errors="0">
<testcase name="Liberty Tax P&amp;L Application › displays the main application interface" classname="app.spec.ts" time="5.94">
<failure message="app.spec.ts:65:3 displays the main application interface" type="FAILURE">
<![CDATA[  [Mobile Safari] › app.spec.ts:65:3 › Liberty Tax P&L Application › displays the main application interface 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Quick Inputs')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Quick Inputs')


      68 |     
      69 |     // Check main sections are present
    > 70 |     await expect(page.locator('text=Quick Inputs')).toBeVisible()
         |                                                     ^
      71 |     await expect(page.locator('text=Dashboard')).toBeVisible()
      72 |     await expect(page.locator('text=Income Drivers')).toBeVisible()
      73 |     await expect(page.locator('text=Expense Percentages')).toBeVisible()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:70:53

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › has correct initial values" classname="app.spec.ts" time="0.954">
<failure message="app.spec.ts:76:3 has correct initial values" type="FAILURE">
<![CDATA[  [Mobile Safari] › app.spec.ts:76:3 › Liberty Tax P&L Application › has correct initial values ────

    Error: expect.toHaveValue: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - Expect "toHaveValue" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      75 |
      76 |   test('has correct initial values', async ({ page }) => {
    > 77 |     await expect(pnlPage.regionSelect).toHaveValue('US')
         |                                        ^
      78 |     await expect(pnlPage.avgNetFeeInput).toHaveValue('125')
      79 |     await expect(pnlPage.taxPrepReturnsInput).toHaveValue('1600')
      80 |     await expect(pnlPage.taxRushReturnsInput).toHaveValue('0')
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:77:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › enables TaxRush input when region is set to Canada" classname="app.spec.ts" time="1.403">
<failure message="app.spec.ts:84:3 enables TaxRush input when region is set to Canada" type="FAILURE">
<![CDATA[  [Mobile Safari] › app.spec.ts:84:3 › Liberty Tax P&L Application › enables TaxRush input when region is set to Canada 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:85:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › disables and resets TaxRush when switching to US" classname="app.spec.ts" time="1.455">
<failure message="app.spec.ts:89:3 disables and resets TaxRush when switching to US" type="FAILURE">
<![CDATA[  [Mobile Safari] › app.spec.ts:89:3 › Liberty Tax P&L Application › disables and resets TaxRush when switching to US 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:91:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › updates calculations when inputs change" classname="app.spec.ts" time="30.214">
<failure message="app.spec.ts:101:3 updates calculations when inputs change" type="FAILURE">
<![CDATA[  [Mobile Safari] › app.spec.ts:101:3 › Liberty Tax P&L Application › updates calculations when inputs change 

    Test timeout of 30000ms exceeded.

    Error: locator.textContent: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('.kpi:has-text("Net Income") .value')


      101 |   test('updates calculations when inputs change', async ({ page }) => {
      102 |     // Get initial net income
    > 103 |     const initialNetIncome = await pnlPage.netIncomeValue.textContent()
          |                                                           ^
      104 |     
      105 |     // Change average net fee
      106 |     await pnlPage.setAvgNetFee(200)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:103:59

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › persists data across page reloads" classname="app.spec.ts" time="1.133">
<failure message="app.spec.ts:114:3 persists data across page reloads" type="FAILURE">
<![CDATA[  [Mobile Safari] › app.spec.ts:114:3 › Liberty Tax P&L Application › persists data across page reloads 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:116:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › resets all values when reset button is clicked" classname="app.spec.ts" time="1.087">
<failure message="app.spec.ts:134:3 resets all values when reset button is clicked" type="FAILURE">
<![CDATA[  [Mobile Safari] › app.spec.ts:134:3 › Liberty Tax P&L Application › resets all values when reset button is clicked 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:136:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › displays KPI status colors correctly" classname="app.spec.ts" time="5.952">
<failure message="app.spec.ts:150:3 displays KPI status colors correctly" type="FAILURE">
<![CDATA[  [Mobile Safari] › app.spec.ts:150:3 › Liberty Tax P&L Application › displays KPI status colors correctly 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.kpi:has-text("Net Income")')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.kpi:has-text("Net Income")')


      154 |     const costPerReturnKPI = page.locator('.kpi:has-text("Cost / Return")')
      155 |     
    > 156 |     await expect(netIncomeKPI).toBeVisible()
          |                                ^
      157 |     await expect(netMarginKPI).toBeVisible()
      158 |     await expect(costPerReturnKPI).toBeVisible()
      159 |     
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:156:32

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › shows pro-tips based on KPI status" classname="app.spec.ts" time="6.008">
<failure message="app.spec.ts:170:3 shows pro-tips based on KPI status" type="FAILURE">
<![CDATA[  [Mobile Safari] › app.spec.ts:170:3 › Liberty Tax P&L Application › shows pro-tips based on KPI status 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.card:has-text("Pro-Tips")')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.card:has-text("Pro-Tips")')


      174 |     // There should be some tips shown (content depends on current KPI status)
      175 |     const proTipsSection = page.locator('.card:has-text("Pro-Tips")')
    > 176 |     await expect(proTipsSection).toBeVisible()
          |                                  ^
      177 |   })
      178 |
      179 |   test('handles edge case of zero returns', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:176:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles edge case of zero returns" classname="app.spec.ts" time="30.219">
<failure message="app.spec.ts:179:3 handles edge case of zero returns" type="FAILURE">
<![CDATA[  [Mobile Safari] › app.spec.ts:179:3 › Liberty Tax P&L Application › handles edge case of zero returns 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('label:has-text("Tax Prep Returns") + input')
        - locator resolved to <input id="ret-lbl" value="1600" aria-label="Tax Prep Returns"/>
        - fill("0")
      - attempting fill action
        2 × waiting for element to be visible, enabled and editable
          - element is not visible
        - retrying fill action
        - waiting 20ms
        2 × waiting for element to be visible, enabled and editable
          - element is not visible
        - retrying fill action
          - waiting 100ms
        57 × waiting for element to be visible, enabled and editable
           - element is not visible
         - retrying fill action
           - waiting 500ms


      28 |
      29 |   async setTaxPrepReturns(value: number) {
    > 30 |     await this.taxPrepReturnsInput.fill(value.toString())
         |                                    ^
      31 |     await this.taxPrepReturnsInput.blur()
      32 |   }
      33 |
        at PnLPage.setTaxPrepReturns (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:30:36)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:180:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles very large input values" classname="app.spec.ts" time="30.272">
<failure message="app.spec.ts:189:3 handles very large input values" type="FAILURE">
<![CDATA[  [Mobile Safari] › app.spec.ts:189:3 › Liberty Tax P&L Application › handles very large input values 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      23 |
      24 |   async setAvgNetFee(value: number) {
    > 25 |     await this.avgNetFeeInput.fill(value.toString())
         |                               ^
      26 |     await this.avgNetFeeInput.blur()
      27 |   }
      28 |
        at PnLPage.setAvgNetFee (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:25:31)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:190:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › maintains TaxRush stickiness in Canada" classname="app.spec.ts" time="1.005">
<failure message="app.spec.ts:202:3 maintains TaxRush stickiness in Canada" type="FAILURE">
<![CDATA[  [Mobile Safari] › app.spec.ts:202:3 › Liberty Tax P&L Application › maintains TaxRush stickiness in Canada 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:204:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › keyboard navigation works correctly" classname="app.spec.ts" time="1.012">
<failure message="app.spec.ts:212:3 keyboard navigation works correctly" type="FAILURE">
<![CDATA[  [Mobile Safari] › app.spec.ts:212:3 › Liberty Tax P&L Application › keyboard navigation works correctly 

    Error: expect.toBeFocused: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - Expect "toBeFocused" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      213 |     // Test tab navigation through inputs
      214 |     await page.keyboard.press('Tab')
    > 215 |     await expect(pnlPage.regionSelect).toBeFocused()
          |                                        ^
      216 |     
      217 |     // Continue tabbing to inputs
      218 |     await page.keyboard.press('Tab')
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:215:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Performance &amp; Responsiveness › loads within acceptable time" classname="app.spec.ts" time="0.805">
</testcase>
<testcase name="Performance &amp; Responsiveness › calculations are performant" classname="app.spec.ts" time="30.287">
<failure message="app.spec.ts:234:3 calculations are performant" type="FAILURE">
<![CDATA[  [Mobile Safari] › app.spec.ts:234:3 › Performance & Responsiveness › calculations are performant ─

    Test timeout of 30000ms exceeded.

    Error: locator.blur: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      24 |   async setAvgNetFee(value: number) {
      25 |     await this.avgNetFeeInput.fill(value.toString())
    > 26 |     await this.avgNetFeeInput.blur()
         |                               ^
      27 |   }
      28 |
      29 |   async setTaxPrepReturns(value: number) {
        at PnLPage.setAvgNetFee (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:26:31)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:242:7

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="basic-functionality.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="Mobile Safari" tests="6" failures="3" skipped="1" time="14.254" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › homepage loads successfully" classname="basic-functionality.spec.js" time="0.824">
<failure message="basic-functionality.spec.js:9:3 homepage loads successfully" type="FAILURE">
<![CDATA[  [Mobile Safari] › basic-functionality.spec.js:9:3 › Liberty Tax P&L Webapp - Basic Functionality › homepage loads successfully 

    Error: expect(received).toBeTruthy()

    Received: false

      16 |     // Look for key elements that should be present
      17 |     const hasMainContent = await page.locator('main, #root, .app, [class*="app"]').first().isVisible();
    > 18 |     expect(hasMainContent).toBeTruthy();
         |                            ^
      19 |   });
      20 |
      21 |   test('wizard can be opened', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:18:28

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › wizard can be opened" classname="basic-functionality.spec.js" time="6.353">
<failure message="basic-functionality.spec.js:21:3 wizard can be opened" type="FAILURE">
<![CDATA[  [Mobile Safari] › basic-functionality.spec.js:21:3 › Liberty Tax P&L Webapp - Basic Functionality › wizard can be opened 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('h1, h2, h3, [class*="wizard"], [id*="wizard"]').filter({ hasText: /welcome|region|store|step/i }).first()
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('h1, h2, h3, [class*="wizard"], [id*="wizard"]').filter({ hasText: /welcome|region|store|step/i }).first()


      33 |       });
      34 |       
    > 35 |       await expect(wizardContent.first()).toBeVisible({ timeout: 5000 });
         |                                           ^
      36 |     } else {
      37 |       test.skip('Start wizard button not found - may be different implementation');
      38 |     }
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:35:43

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › debug panel can be accessed" classname="basic-functionality.spec.js" time="0.864">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › no JavaScript errors on page load" classname="basic-functionality.spec.js" time="1.247">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › responsive design - no horizontal scroll" classname="basic-functionality.spec.js" time="2.332">
<failure message="basic-functionality.spec.js:71:3 responsive design - no horizontal scroll" type="FAILURE">
<![CDATA[  [Mobile Safari] › basic-functionality.spec.js:71:3 › Liberty Tax P&L Webapp - Basic Functionality › responsive design - no horizontal scroll 

    Error: expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 380
    Received:    565

      87 |       
      88 |       // Allow small tolerance (5px) for rounding
    > 89 |       expect(bodyWidth).toBeLessThanOrEqual(viewportWidth + 5);
         |                         ^
      90 |     }
      91 |   });
      92 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:89:25

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › basic form interactions work" classname="basic-functionality.spec.js" time="2.634">
</testcase>
</testsuite>
<testsuite name="generated\wizardinputs.generated.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="Mobile Safari" tests="34" failures="0" skipped="0" time="40.486" errors="0">
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="1.263">
<system-out>
<![CDATA[Testing: percentage accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0.979">
<system-out>
<![CDATA[Testing: percentage accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0.899">
<system-out>
<![CDATA[Testing: percentage rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="1.024">
<system-out>
<![CDATA[Testing: percentage rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects string input" classname="generated\wizardinputs.generated.spec.js" time="1.226">
<system-out>
<![CDATA[Testing: percentage rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0.994">
<system-out>
<![CDATA[Testing: percentage rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="1.006">
<system-out>
<![CDATA[Testing: currency accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="1.108">
<system-out>
<![CDATA[Testing: currency accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="1.139">
<system-out>
<![CDATA[Testing: currency rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="1.061">
<system-out>
<![CDATA[Testing: currency rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects string input" classname="generated\wizardinputs.generated.spec.js" time="1.078">
<system-out>
<![CDATA[Testing: currency rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects null input" classname="generated\wizardinputs.generated.spec.js" time="1.022">
<system-out>
<![CDATA[Testing: currency rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="1.035">
<system-out>
<![CDATA[Testing: returns accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="1.282">
<system-out>
<![CDATA[Testing: returns accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="1.127">
<system-out>
<![CDATA[Testing: returns rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="1.192">
<system-out>
<![CDATA[Testing: returns rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects string input" classname="generated\wizardinputs.generated.spec.js" time="1.266">
<system-out>
<![CDATA[Testing: returns rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects null input" classname="generated\wizardinputs.generated.spec.js" time="1.398">
<system-out>
<![CDATA[Testing: returns rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="1.375">
<system-out>
<![CDATA[Testing: growth accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="1.178">
<system-out>
<![CDATA[Testing: growth accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="1.093">
<system-out>
<![CDATA[Testing: growth rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0.999">
<system-out>
<![CDATA[Testing: growth rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects string input" classname="generated\wizardinputs.generated.spec.js" time="1.028">
<system-out>
<![CDATA[Testing: growth rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects null input" classname="generated\wizardinputs.generated.spec.js" time="1.263">
<system-out>
<![CDATA[Testing: growth rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › keyboard navigation works correctly" classname="generated\wizardinputs.generated.spec.js" time="1.201">
<system-out>
<![CDATA[Testing: keyboard navigation works correctly
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › screen reader announcements are correct" classname="generated\wizardinputs.generated.spec.js" time="1.435">
<system-out>
<![CDATA[Testing: screen reader announcements are correct
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › error messages are announced" classname="generated\wizardinputs.generated.spec.js" time="1.318">
<system-out>
<![CDATA[Testing: error messages are announced
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › color contrast meets WCAG standards" classname="generated\wizardinputs.generated.spec.js" time="1.395">
<system-out>
<![CDATA[Testing: color contrast meets WCAG standards
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › renders within performance budget" classname="generated\wizardinputs.generated.spec.js" time="1.386">
<system-out>
<![CDATA[Testing: renders within performance budget
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › handles rapid input changes efficiently" classname="generated\wizardinputs.generated.spec.js" time="1.241">
<system-out>
<![CDATA[Testing: handles rapid input changes efficiently
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › calculation updates are debounced" classname="generated\wizardinputs.generated.spec.js" time="1.496">
<system-out>
<![CDATA[Testing: calculation updates are debounced
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › complete wizard flow successfully" classname="generated\wizardinputs.generated.spec.js" time="1.311">
<system-out>
<![CDATA[Testing: complete wizard flow successfully
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › recover from validation errors gracefully" classname="generated\wizardinputs.generated.spec.js" time="1.342">
<system-out>
<![CDATA[Testing: recover from validation errors gracefully
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › data persistence across page refresh" classname="generated\wizardinputs.generated.spec.js" time="1.326">
<system-out>
<![CDATA[Testing: data persistence across page refresh
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="mobile\mobile-specific.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="Mobile Safari" tests="8" failures="4" skipped="1" time="67.584" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › touch targets are large enough" classname="mobile\mobile-specific.spec.js" time="1.345">
<failure message="mobile-specific.spec.js:9:3 touch targets are large enough" type="FAILURE">
<![CDATA[  [Mobile Safari] › mobile\mobile-specific.spec.js:9:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › touch targets are large enough 

    Error: expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 44
    Received:    36

      19 |           // Minimum touch target size should be 44x44px (Apple guidelines)
      20 |           expect(box.width).toBeGreaterThanOrEqual(44);
    > 21 |           expect(box.height).toBeGreaterThanOrEqual(44);
         |                              ^
      22 |         }
      23 |       }
      24 |     }
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:21:30

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile keyboard interactions" classname="mobile\mobile-specific.spec.js" time="30.207">
<failure message="mobile-specific.spec.js:27:3 mobile keyboard interactions" type="FAILURE">
<![CDATA[  [Mobile Safari] › mobile\mobile-specific.spec.js:27:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › mobile keyboard interactions 

    Test timeout of 30000ms exceeded.

    Error: locator.click: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"], input[inputmode="numeric"]').first()


      32 |     if (inputCount > 0) {
      33 |       const firstInput = numericInputs.first();
    > 34 |       await firstInput.click();
         |                        ^
      35 |       
      36 |       // On mobile, numeric keyboard should appear
      37 |       // We can't directly test keyboard appearance, but we can test input behavior
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:34:24

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-574cd-obile-keyboard-interactions-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-574cd-obile-keyboard-interactions-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-574cd-obile-keyboard-interactions-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-574cd-obile-keyboard-interactions-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-574cd-obile-keyboard-interactions-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-574cd-obile-keyboard-interactions-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › viewport meta tag prevents zoom" classname="mobile\mobile-specific.spec.js" time="1.119">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › orientation change handling" classname="mobile\mobile-specific.spec.js" time="1.002">
<properties>
<property name="skip" value="Orientation change not reliable on WebKit">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile-specific layout elements" classname="mobile\mobile-specific.spec.js" time="30.217">
<failure message="mobile-specific.spec.js:75:3 mobile-specific layout elements" type="FAILURE">
<![CDATA[  [Mobile Safari] › mobile\mobile-specific.spec.js:75:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › mobile-specific layout elements 

    Test timeout of 30000ms exceeded.

    Error: locator.boundingBox: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('main, #root, .app').first()


      83 |       // Check that content is not cut off
      84 |       const mainContent = page.locator('main, #root, .app').first();
    > 85 |       const box = await mainContent.boundingBox();
         |                                     ^
      86 |       
      87 |       if (box) {
      88 |         expect(box.width).toBeLessThanOrEqual(viewport.width);
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:85:37

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-e887c-le-specific-layout-elements-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-e887c-le-specific-layout-elements-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-e887c-le-specific-layout-elements-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-e887c-le-specific-layout-elements-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-e887c-le-specific-layout-elements-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-e887c-le-specific-layout-elements-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › scroll behavior on mobile" classname="mobile\mobile-specific.spec.js" time="1.013">
<failure message="mobile-specific.spec.js:93:3 scroll behavior on mobile" type="FAILURE">
<![CDATA[  [Mobile Safari] › mobile\mobile-specific.spec.js:93:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › scroll behavior on mobile 

    Error: expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 395
    Received:    1372

      105 |       
      106 |       // Should not have horizontal scroll
    > 107 |       expect(dimensions.scrollWidth).toBeLessThanOrEqual(dimensions.clientWidth + 5);
          |                                      ^
      108 |       
      109 |       // Should be able to scroll vertically if content is tall
      110 |       if (dimensions.scrollHeight > dimensions.clientHeight) {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:107:38

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile performance - load time" classname="mobile\mobile-specific.spec.js" time="1.678">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile gestures do not interfere" classname="mobile\mobile-specific.spec.js" time="1.003">
</testcase>
</testsuite>
<testsuite name="mobile\responsive.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="Mobile Safari" tests="18" failures="17" skipped="0" time="269.703" errors="0">
<testcase name="Mobile Responsiveness › displays correctly on mobile viewports" classname="mobile\responsive.spec.js" time="1.024">
<failure message="responsive.spec.js:8:3 displays correctly on mobile viewports" type="FAILURE">
<![CDATA[  [Mobile Safari] › mobile\responsive.spec.js:8:3 › Mobile Responsiveness › displays correctly on mobile viewports 

    Error: expect.toBeVisible: Error: strict mode violation: locator('text=Dashboard') resolved to 2 elements:
        1) <div class="card-title">Dashboard</div> aka getByText('Dashboard', { exact: true })
        2) <button disabled>📊 Dashboard</button> aka getByRole('button', { name: '📊 Dashboard' })

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Dashboard')


      10 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
      11 |     await expect(page.locator('text=Quick Inputs')).toBeVisible()
    > 12 |     await expect(page.locator('text=Dashboard')).toBeVisible()
         |                                                  ^
      13 |   })
      14 |
      15 |   test('region selector is accessible on mobile', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:12:50

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › region selector is accessible on mobile" classname="mobile\responsive.spec.js" time="0.905">
<failure message="responsive.spec.js:15:3 region selector is accessible on mobile" type="FAILURE">
<![CDATA[  [Mobile Safari] › mobile\responsive.spec.js:15:3 › Mobile Responsiveness › region selector is accessible on mobile 

    Error: expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 44
    Received:    36

      19 |     // Should be large enough to tap
      20 |     const box = await regionSelect.boundingBox()
    > 21 |     expect(box?.height).toBeGreaterThanOrEqual(44) // iOS minimum tap target
         |                         ^
      22 |   })
      23 |
      24 |   test('input fields are properly sized for mobile', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:21:25

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › input fields are properly sized for mobile" classname="mobile\responsive.spec.js" time="30.214">
<failure message="responsive.spec.js:24:3 input fields are properly sized for mobile" type="FAILURE">
<![CDATA[  [Mobile Safari] › mobile\responsive.spec.js:24:3 › Mobile Responsiveness › input fields are properly sized for mobile 

    Test timeout of 30000ms exceeded.

    Error: locator.boundingBox: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      28 |     for (let i = 0; i < inputCount; i++) {
      29 |       const input = inputs.nth(i)
    > 30 |       const box = await input.boundingBox()
         |                               ^
      31 |       
      32 |       // Inputs should be at least 44px high (iOS guideline)
      33 |       expect(box?.height).toBeGreaterThanOrEqual(44)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:30:31

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-4ace1-e-properly-sized-for-mobile-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-4ace1-e-properly-sized-for-mobile-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-4ace1-e-properly-sized-for-mobile-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-4ace1-e-properly-sized-for-mobile-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-4ace1-e-properly-sized-for-mobile-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-4ace1-e-properly-sized-for-mobile-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › KPI cards stack vertically on mobile" classname="mobile\responsive.spec.js" time="30.2">
<failure message="responsive.spec.js:39:3 KPI cards stack vertically on mobile" type="FAILURE">
<![CDATA[  [Mobile Safari] › mobile\responsive.spec.js:39:3 › Mobile Responsiveness › KPI cards stack vertically on mobile 

    Test timeout of 30000ms exceeded.

    Error: locator.boundingBox: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('.kpi').nth(1)


      43 |     
      44 |     const firstBox = await firstCard.boundingBox()
    > 45 |     const secondBox = await secondCard.boundingBox()
         |                                        ^
      46 |     
      47 |     // Second card should be below first card (higher Y position)
      48 |     if (firstBox && secondBox) {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:45:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › text is readable on mobile screens" classname="mobile\responsive.spec.js" time="0.872">
<failure message="responsive.spec.js:53:3 text is readable on mobile screens" type="FAILURE">
<![CDATA[  [Mobile Safari] › mobile\responsive.spec.js:53:3 › Mobile Responsiveness › text is readable on mobile screens 

    Error: expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 14
    Received:    NaN

      60 |     // Font size should be at least 16px on mobile to avoid zoom
      61 |     const fontSize = parseInt(styles.fontSize)
    > 62 |     expect(fontSize).toBeGreaterThanOrEqual(14)
         |                      ^
      63 |   })
      64 |
      65 |   test('footer content is accessible on mobile', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:62:22

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-ce8a4--readable-on-mobile-screens-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-ce8a4--readable-on-mobile-screens-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-ce8a4--readable-on-mobile-screens-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-ce8a4--readable-on-mobile-screens-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-ce8a4--readable-on-mobile-screens-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-ce8a4--readable-on-mobile-screens-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › footer content is accessible on mobile" classname="mobile\responsive.spec.js" time="5.87">
<failure message="responsive.spec.js:65:3 footer content is accessible on mobile" type="FAILURE">
<![CDATA[  [Mobile Safari] › mobile\responsive.spec.js:65:3 › Mobile Responsiveness › footer content is accessible on mobile 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.footer')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.footer')


      65 |   test('footer content is accessible on mobile', async ({ page }) => {
      66 |     const footer = page.locator('.footer')
    > 67 |     await expect(footer).toBeVisible()
         |                          ^
      68 |     
      69 |     // Footer text should be readable
      70 |     const footerText = await footer.textContent()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:67:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › tap to focus inputs works correctly" classname="mobile\responsive.spec.js" time="30.199">
<failure message="responsive.spec.js:80:3 tap to focus inputs works correctly" type="FAILURE">
<![CDATA[  [Mobile Safari] › mobile\responsive.spec.js:80:3 › Touch Interactions › tap to focus inputs works correctly 

    Test timeout of 30000ms exceeded.

    Error: locator.tap: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      82 |     
      83 |     // Tap to focus
    > 84 |     await avgNetFeeInput.tap()
         |                          ^
      85 |     await expect(avgNetFeeInput).toBeFocused()
      86 |   })
      87 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:84:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › tap and hold does not interfere with input" classname="mobile\responsive.spec.js" time="30.201">
<failure message="responsive.spec.js:88:3 tap and hold does not interfere with input" type="FAILURE">
<![CDATA[  [Mobile Safari] › mobile\responsive.spec.js:88:3 › Touch Interactions › tap and hold does not interfere with input 

    Test timeout of 30000ms exceeded.

    Error: locator.tap: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      90 |     
      91 |     // Long press should not cause issues
    > 92 |     await avgNetFeeInput.tap({ force: true })
         |                          ^
      93 |     await page.waitForTimeout(1000) // Simulate long press
      94 |     
      95 |     // Should still be able to type
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:92:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › select dropdown works with touch" classname="mobile\responsive.spec.js" time="1.357">
<failure message="responsive.spec.js:100:3 select dropdown works with touch" type="FAILURE">
<![CDATA[  [Mobile Safari] › mobile\responsive.spec.js:100:3 › Touch Interactions › select dropdown works with touch 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      102 |     
      103 |     await regionSelect.tap()
    > 104 |     await regionSelect.selectOption('CA')
          |                        ^
      105 |     
      106 |     await expect(regionSelect).toHaveValue('CA')
      107 |   })
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:104:24

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › reset button responds to touch" classname="mobile\responsive.spec.js" time="30.208">
<failure message="responsive.spec.js:109:3 reset button responds to touch" type="FAILURE">
<![CDATA[  [Mobile Safari] › mobile\responsive.spec.js:109:3 › Touch Interactions › reset button responds to touch 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()
        - locator resolved to <input min="50" step="1" max="500" value="125" type="number" placeholder="125" title="Average Net Fee" aria-label="Average Net Fee"/>
        - fill("200")
      - attempting fill action
        - waiting for element to be visible, enabled and editable
      - element was detached from the DOM, retrying


      112 |     
      113 |     // Change a value
    > 114 |     await avgNetFeeInput.fill('200')
          |                          ^
      115 |     
      116 |     // Tap reset
      117 |     await resetButton.tap()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:114:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Mobile-Safari\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Performance › app loads quickly on mobile connections" classname="mobile\responsive.spec.js" time="1.706">
</testcase>
<testcase name="Mobile Performance › calculations remain responsive during rapid input" classname="mobile\responsive.spec.js" time="30.123">
<failure message="responsive.spec.js:140:3 calculations remain responsive during rapid input" type="FAILURE">
<![CDATA[  [Mobile Safari] › mobile\responsive.spec.js:140:3 › Mobile Performance › calculations remain responsive during rapid input 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      144 |     const values = ['100', '150', '200', '250', '300']
      145 |     for (const value of values) {
    > 146 |       await avgNetFeeInput.fill(value)
          |                            ^
      147 |       await page.waitForTimeout(100) // Brief pause between changes
      148 |     }
      149 |     
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:146:28

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-Mobile-Safari\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › prevents zoom on input focus (if implemented)" classname="mobile\responsive.spec.js" time="30.219">
<failure message="responsive.spec.js:159:3 prevents zoom on input focus (if implemented)" type="FAILURE">
<![CDATA[  [Mobile Safari] › mobile\responsive.spec.js:159:3 › Mobile Specific Features › prevents zoom on input focus (if implemented) 

    Test timeout of 30000ms exceeded.

    Error: locator.getAttribute: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('meta[name="viewport"]')


      160 |     // Check if viewport meta tag prevents zoom
      161 |     const viewportMeta = page.locator('meta[name="viewport"]')
    > 162 |     const content = await viewportMeta.getAttribute('content')
          |                                        ^
      163 |     
      164 |     // This test depends on whether zoom prevention is desired
      165 |     // Some accessibility guidelines recommend allowing zoom
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:162:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--Mobile-Safari\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › handles device orientation changes gracefully" classname="mobile\responsive.spec.js" time="5.355">
<failure message="responsive.spec.js:172:3 handles device orientation changes gracefully" type="FAILURE">
<![CDATA[  [Mobile Safari] › mobile\responsive.spec.js:172:3 › Mobile Specific Features › handles device orientation changes gracefully 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Liberty Tax • P&L Budget & Forecast')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Liberty Tax • P&L Budget & Forecast')


      173 |     // Start in portrait
      174 |     await page.setViewportSize({ width: 390, height: 844 })
    > 175 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
          |                                                                            ^
      176 |     
      177 |     // Switch to landscape
      178 |     await page.setViewportSize({ width: 844, height: 390 })
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:175:76

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-Mobile-Safari\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › supports dark mode if device prefers it" classname="mobile\responsive.spec.js" time="5.31">
<failure message="responsive.spec.js:186:3 supports dark mode if device prefers it" type="FAILURE">
<![CDATA[  [Mobile Safari] › mobile\responsive.spec.js:186:3 › Mobile Specific Features › supports dark mode if device prefers it 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Liberty Tax • P&L Budget & Forecast')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Liberty Tax • P&L Budget & Forecast')


      190 |     
      191 |     // App should still function (specific styling tests would go here)
    > 192 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
          |                                                                            ^
      193 |   })
      194 | })
      195 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:192:76

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-Mobile-Safari\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility on Mobile › maintains proper focus management" classname="mobile\responsive.spec.js" time="5.433">
<failure message="responsive.spec.js:197:3 maintains proper focus management" type="FAILURE">
<![CDATA[  [Mobile Safari] › mobile\responsive.spec.js:197:3 › Accessibility on Mobile › maintains proper focus management 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator(':focus')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator(':focus')


      199 |     await page.keyboard.press('Tab')
      200 |     const focusedElement = page.locator(':focus')
    > 201 |     await expect(focusedElement).toBeVisible()
          |                                  ^
      202 |   })
      203 |
      204 |   test('form labels work with screen readers', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:201:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-Mobile-Safari\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility on Mobile › form labels work with screen readers" classname="mobile\responsive.spec.js" time="30.123">
<failure message="responsive.spec.js:204:3 form labels work with screen readers" type="FAILURE">
<![CDATA[  [Mobile Safari] › mobile\responsive.spec.js:204:3 › Accessibility on Mobile › form labels work with screen readers 

    Test timeout of 30000ms exceeded.

    Error: locator.textContent: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('label:has(input[type="number"])').first()


      204 |   test('form labels work with screen readers', async ({ page }) => {
      205 |     const avgNetFeeInput = page.locator('input[type="number"]').first()
    > 206 |     const labelText = await page.locator('label:has(input[type="number"])').first().textContent()
          |                                                                                     ^
      207 |     
      208 |     expect(labelText).toContain('Average Net Fee')
      209 |   })
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:206:85

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-Mobile-Safari\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility on Mobile › maintains sufficient color contrast" classname="mobile\responsive.spec.js" time="0.384">
<failure message="responsive.spec.js:211:3 maintains sufficient color contrast" type="FAILURE">
<![CDATA[  [Mobile Safari] › mobile\responsive.spec.js:211:3 › Accessibility on Mobile › maintains sufficient color contrast 

    Error: expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      215 |     const count = await kpiElements.count()
      216 |     
    > 217 |     expect(count).toBeGreaterThan(0)
          |                   ^
      218 |   })
      219 | })
      220 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:217:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-Mobile-Safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-Mobile-Safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-Mobile-Safari\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-Mobile-Safari\video.webm]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="snapshots.spec.ts" timestamp="2025-09-21T14:00:33.654Z" hostname="Mobile Safari" tests="1" failures="0" skipped="0" time="7.688" errors="0">
<testcase name="UI Snapshots › capture key screens" classname="snapshots.spec.ts" time="7.688">
</testcase>
</testsuite>
<testsuite name="app.spec.ts" timestamp="2025-09-21T14:00:33.654Z" hostname="Microsoft Edge" tests="15" failures="14" skipped="0" time="156.011" errors="0">
<testcase name="Liberty Tax P&amp;L Application › displays the main application interface" classname="app.spec.ts" time="6.438">
<failure message="app.spec.ts:65:3 displays the main application interface" type="FAILURE">
<![CDATA[  [Microsoft Edge] › app.spec.ts:65:3 › Liberty Tax P&L Application › displays the main application interface 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Quick Inputs')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Quick Inputs')


      68 |     
      69 |     // Check main sections are present
    > 70 |     await expect(page.locator('text=Quick Inputs')).toBeVisible()
         |                                                     ^
      71 |     await expect(page.locator('text=Dashboard')).toBeVisible()
      72 |     await expect(page.locator('text=Income Drivers')).toBeVisible()
      73 |     await expect(page.locator('text=Expense Percentages')).toBeVisible()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:70:53

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › has correct initial values" classname="app.spec.ts" time="1.312">
<failure message="app.spec.ts:76:3 has correct initial values" type="FAILURE">
<![CDATA[  [Microsoft Edge] › app.spec.ts:76:3 › Liberty Tax P&L Application › has correct initial values ───

    Error: expect.toHaveValue: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - Expect "toHaveValue" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      75 |
      76 |   test('has correct initial values', async ({ page }) => {
    > 77 |     await expect(pnlPage.regionSelect).toHaveValue('US')
         |                                        ^
      78 |     await expect(pnlPage.avgNetFeeInput).toHaveValue('125')
      79 |     await expect(pnlPage.taxPrepReturnsInput).toHaveValue('1600')
      80 |     await expect(pnlPage.taxRushReturnsInput).toHaveValue('0')
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:77:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › enables TaxRush input when region is set to Canada" classname="app.spec.ts" time="1.362">
<failure message="app.spec.ts:84:3 enables TaxRush input when region is set to Canada" type="FAILURE">
<![CDATA[  [Microsoft Edge] › app.spec.ts:84:3 › Liberty Tax P&L Application › enables TaxRush input when region is set to Canada 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:85:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › disables and resets TaxRush when switching to US" classname="app.spec.ts" time="1.16">
<failure message="app.spec.ts:89:3 disables and resets TaxRush when switching to US" type="FAILURE">
<![CDATA[  [Microsoft Edge] › app.spec.ts:89:3 › Liberty Tax P&L Application › disables and resets TaxRush when switching to US 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:91:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › updates calculations when inputs change" classname="app.spec.ts" time="31.282">
<failure message="app.spec.ts:101:3 updates calculations when inputs change" type="FAILURE">
<![CDATA[  [Microsoft Edge] › app.spec.ts:101:3 › Liberty Tax P&L Application › updates calculations when inputs change 

    Test timeout of 30000ms exceeded.

    Error: locator.textContent: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('.kpi:has-text("Net Income") .value')


      101 |   test('updates calculations when inputs change', async ({ page }) => {
      102 |     // Get initial net income
    > 103 |     const initialNetIncome = await pnlPage.netIncomeValue.textContent()
          |                                                           ^
      104 |     
      105 |     // Change average net fee
      106 |     await pnlPage.setAvgNetFee(200)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:103:59

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › persists data across page reloads" classname="app.spec.ts" time="1.116">
<failure message="app.spec.ts:114:3 persists data across page reloads" type="FAILURE">
<![CDATA[  [Microsoft Edge] › app.spec.ts:114:3 › Liberty Tax P&L Application › persists data across page reloads 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:116:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › resets all values when reset button is clicked" classname="app.spec.ts" time="1.163">
<failure message="app.spec.ts:134:3 resets all values when reset button is clicked" type="FAILURE">
<![CDATA[  [Microsoft Edge] › app.spec.ts:134:3 › Liberty Tax P&L Application › resets all values when reset button is clicked 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:136:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › displays KPI status colors correctly" classname="app.spec.ts" time="6.175">
<failure message="app.spec.ts:150:3 displays KPI status colors correctly" type="FAILURE">
<![CDATA[  [Microsoft Edge] › app.spec.ts:150:3 › Liberty Tax P&L Application › displays KPI status colors correctly 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.kpi:has-text("Net Income")')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.kpi:has-text("Net Income")')


      154 |     const costPerReturnKPI = page.locator('.kpi:has-text("Cost / Return")')
      155 |     
    > 156 |     await expect(netIncomeKPI).toBeVisible()
          |                                ^
      157 |     await expect(netMarginKPI).toBeVisible()
      158 |     await expect(costPerReturnKPI).toBeVisible()
      159 |     
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:156:32

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › shows pro-tips based on KPI status" classname="app.spec.ts" time="6.337">
<failure message="app.spec.ts:170:3 shows pro-tips based on KPI status" type="FAILURE">
<![CDATA[  [Microsoft Edge] › app.spec.ts:170:3 › Liberty Tax P&L Application › shows pro-tips based on KPI status 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.card:has-text("Pro-Tips")')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.card:has-text("Pro-Tips")')


      174 |     // There should be some tips shown (content depends on current KPI status)
      175 |     const proTipsSection = page.locator('.card:has-text("Pro-Tips")')
    > 176 |     await expect(proTipsSection).toBeVisible()
          |                                  ^
      177 |   })
      178 |
      179 |   test('handles edge case of zero returns', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:176:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles edge case of zero returns" classname="app.spec.ts" time="32.163">
<failure message="app.spec.ts:179:3 handles edge case of zero returns" type="FAILURE">
<![CDATA[  [Microsoft Edge] › app.spec.ts:179:3 › Liberty Tax P&L Application › handles edge case of zero returns 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('label:has-text("Tax Prep Returns") + input')
        - locator resolved to <input id="ret-lbl" value="1600" aria-label="Tax Prep Returns"/>
        - fill("0")
      - attempting fill action
        2 × waiting for element to be visible, enabled and editable
          - element is not visible
        - retrying fill action
        - waiting 20ms
        2 × waiting for element to be visible, enabled and editable
          - element is not visible
        - retrying fill action
          - waiting 100ms
        57 × waiting for element to be visible, enabled and editable
           - element is not visible
         - retrying fill action
           - waiting 500ms


      28 |
      29 |   async setTaxPrepReturns(value: number) {
    > 30 |     await this.taxPrepReturnsInput.fill(value.toString())
         |                                    ^
      31 |     await this.taxPrepReturnsInput.blur()
      32 |   }
      33 |
        at PnLPage.setTaxPrepReturns (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:30:36)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:180:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles very large input values" classname="app.spec.ts" time="31.729">
<failure message="app.spec.ts:189:3 handles very large input values" type="FAILURE">
<![CDATA[  [Microsoft Edge] › app.spec.ts:189:3 › Liberty Tax P&L Application › handles very large input values 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      23 |
      24 |   async setAvgNetFee(value: number) {
    > 25 |     await this.avgNetFeeInput.fill(value.toString())
         |                               ^
      26 |     await this.avgNetFeeInput.blur()
      27 |   }
      28 |
        at PnLPage.setAvgNetFee (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:25:31)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:190:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › maintains TaxRush stickiness in Canada" classname="app.spec.ts" time="1.12">
<failure message="app.spec.ts:202:3 maintains TaxRush stickiness in Canada" type="FAILURE">
<![CDATA[  [Microsoft Edge] › app.spec.ts:202:3 › Liberty Tax P&L Application › maintains TaxRush stickiness in Canada 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:204:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › keyboard navigation works correctly" classname="app.spec.ts" time="0.966">
<failure message="app.spec.ts:212:3 keyboard navigation works correctly" type="FAILURE">
<![CDATA[  [Microsoft Edge] › app.spec.ts:212:3 › Liberty Tax P&L Application › keyboard navigation works correctly 

    Error: expect.toBeFocused: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - Expect "toBeFocused" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      213 |     // Test tab navigation through inputs
      214 |     await page.keyboard.press('Tab')
    > 215 |     await expect(pnlPage.regionSelect).toBeFocused()
          |                                        ^
      216 |     
      217 |     // Continue tabbing to inputs
      218 |     await page.keyboard.press('Tab')
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:215:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Performance &amp; Responsiveness › loads within acceptable time" classname="app.spec.ts" time="0.906">
</testcase>
<testcase name="Performance &amp; Responsiveness › calculations are performant" classname="app.spec.ts" time="32.782">
<failure message="app.spec.ts:234:3 calculations are performant" type="FAILURE">
<![CDATA[  [Microsoft Edge] › app.spec.ts:234:3 › Performance & Responsiveness › calculations are performant 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      23 |
      24 |   async setAvgNetFee(value: number) {
    > 25 |     await this.avgNetFeeInput.fill(value.toString())
         |                               ^
      26 |     await this.avgNetFeeInput.blur()
      27 |   }
      28 |
        at PnLPage.setAvgNetFee (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:25:31)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:242:21

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="basic-functionality.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="Microsoft Edge" tests="6" failures="3" skipped="1" time="12.519" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › homepage loads successfully" classname="basic-functionality.spec.js" time="1.133">
<failure message="basic-functionality.spec.js:9:3 homepage loads successfully" type="FAILURE">
<![CDATA[  [Microsoft Edge] › basic-functionality.spec.js:9:3 › Liberty Tax P&L Webapp - Basic Functionality › homepage loads successfully 

    Error: expect(received).toBeTruthy()

    Received: false

      16 |     // Look for key elements that should be present
      17 |     const hasMainContent = await page.locator('main, #root, .app, [class*="app"]').first().isVisible();
    > 18 |     expect(hasMainContent).toBeTruthy();
         |                            ^
      19 |   });
      20 |
      21 |   test('wizard can be opened', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:18:28

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › wizard can be opened" classname="basic-functionality.spec.js" time="6.307">
<failure message="basic-functionality.spec.js:21:3 wizard can be opened" type="FAILURE">
<![CDATA[  [Microsoft Edge] › basic-functionality.spec.js:21:3 › Liberty Tax P&L Webapp - Basic Functionality › wizard can be opened 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('h1, h2, h3, [class*="wizard"], [id*="wizard"]').filter({ hasText: /welcome|region|store|step/i }).first()
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('h1, h2, h3, [class*="wizard"], [id*="wizard"]').filter({ hasText: /welcome|region|store|step/i }).first()


      33 |       });
      34 |       
    > 35 |       await expect(wizardContent.first()).toBeVisible({ timeout: 5000 });
         |                                           ^
      36 |     } else {
      37 |       test.skip('Start wizard button not found - may be different implementation');
      38 |     }
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:35:43

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › debug panel can be accessed" classname="basic-functionality.spec.js" time="1.06">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › no JavaScript errors on page load" classname="basic-functionality.spec.js" time="1.424">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › responsive design - no horizontal scroll" classname="basic-functionality.spec.js" time="1.699">
<failure message="basic-functionality.spec.js:71:3 responsive design - no horizontal scroll" type="FAILURE">
<![CDATA[  [Microsoft Edge] › basic-functionality.spec.js:71:3 › Liberty Tax P&L Webapp - Basic Functionality › responsive design - no horizontal scroll 

    Error: expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 380
    Received:    565

      87 |       
      88 |       // Allow small tolerance (5px) for rounding
    > 89 |       expect(bodyWidth).toBeLessThanOrEqual(viewportWidth + 5);
         |                         ^
      90 |     }
      91 |   });
      92 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:89:25

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › basic form interactions work" classname="basic-functionality.spec.js" time="0.896">
</testcase>
</testsuite>
<testsuite name="generated\wizardinputs.generated.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="Microsoft Edge" tests="34" failures="0" skipped="0" time="41.717" errors="0">
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="1.153">
<system-out>
<![CDATA[Testing: percentage accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0.802">
<system-out>
<![CDATA[Testing: percentage accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="1.128">
<system-out>
<![CDATA[Testing: percentage rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="1.183">
<system-out>
<![CDATA[Testing: percentage rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects string input" classname="generated\wizardinputs.generated.spec.js" time="1.353">
<system-out>
<![CDATA[Testing: percentage rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0.85">
<system-out>
<![CDATA[Testing: percentage rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0.801">
<system-out>
<![CDATA[Testing: currency accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="1.023">
<system-out>
<![CDATA[Testing: currency accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0.846">
<system-out>
<![CDATA[Testing: currency rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="1.257">
<system-out>
<![CDATA[Testing: currency rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects string input" classname="generated\wizardinputs.generated.spec.js" time="1.196">
<system-out>
<![CDATA[Testing: currency rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects null input" classname="generated\wizardinputs.generated.spec.js" time="1.212">
<system-out>
<![CDATA[Testing: currency rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="1.223">
<system-out>
<![CDATA[Testing: returns accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="1.195">
<system-out>
<![CDATA[Testing: returns accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0.892">
<system-out>
<![CDATA[Testing: returns rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="1.231">
<system-out>
<![CDATA[Testing: returns rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects string input" classname="generated\wizardinputs.generated.spec.js" time="1.152">
<system-out>
<![CDATA[Testing: returns rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0.986">
<system-out>
<![CDATA[Testing: returns rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0.92">
<system-out>
<![CDATA[Testing: growth accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="1.056">
<system-out>
<![CDATA[Testing: growth accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="1.464">
<system-out>
<![CDATA[Testing: growth rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="1.085">
<system-out>
<![CDATA[Testing: growth rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0.881">
<system-out>
<![CDATA[Testing: growth rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects null input" classname="generated\wizardinputs.generated.spec.js" time="1.383">
<system-out>
<![CDATA[Testing: growth rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › keyboard navigation works correctly" classname="generated\wizardinputs.generated.spec.js" time="0.989">
<system-out>
<![CDATA[Testing: keyboard navigation works correctly
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › screen reader announcements are correct" classname="generated\wizardinputs.generated.spec.js" time="1.052">
<system-out>
<![CDATA[Testing: screen reader announcements are correct
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › error messages are announced" classname="generated\wizardinputs.generated.spec.js" time="1.255">
<system-out>
<![CDATA[Testing: error messages are announced
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › color contrast meets WCAG standards" classname="generated\wizardinputs.generated.spec.js" time="1.76">
<system-out>
<![CDATA[Testing: color contrast meets WCAG standards
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › renders within performance budget" classname="generated\wizardinputs.generated.spec.js" time="2.909">
<system-out>
<![CDATA[Testing: renders within performance budget
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › handles rapid input changes efficiently" classname="generated\wizardinputs.generated.spec.js" time="2.139">
<system-out>
<![CDATA[Testing: handles rapid input changes efficiently
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › calculation updates are debounced" classname="generated\wizardinputs.generated.spec.js" time="1.343">
<system-out>
<![CDATA[Testing: calculation updates are debounced
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › complete wizard flow successfully" classname="generated\wizardinputs.generated.spec.js" time="1.528">
<system-out>
<![CDATA[Testing: complete wizard flow successfully
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › recover from validation errors gracefully" classname="generated\wizardinputs.generated.spec.js" time="1.313">
<system-out>
<![CDATA[Testing: recover from validation errors gracefully
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › data persistence across page refresh" classname="generated\wizardinputs.generated.spec.js" time="1.157">
<system-out>
<![CDATA[Testing: data persistence across page refresh
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="mobile\mobile-specific.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="Microsoft Edge" tests="8" failures="3" skipped="0" time="8.516" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › touch targets are large enough" classname="mobile\mobile-specific.spec.js" time="1.128">
<failure message="mobile-specific.spec.js:9:3 touch targets are large enough" type="FAILURE">
<![CDATA[  [Microsoft Edge] › mobile\mobile-specific.spec.js:9:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › touch targets are large enough 

    Error: expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 44
    Received:    27

      19 |           // Minimum touch target size should be 44x44px (Apple guidelines)
      20 |           expect(box.width).toBeGreaterThanOrEqual(44);
    > 21 |           expect(box.height).toBeGreaterThanOrEqual(44);
         |                              ^
      22 |         }
      23 |       }
      24 |     }
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:21:30

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile keyboard interactions" classname="mobile\mobile-specific.spec.js" time="1.1">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › viewport meta tag prevents zoom" classname="mobile\mobile-specific.spec.js" time="0.864">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › orientation change handling" classname="mobile\mobile-specific.spec.js" time="1.529">
<failure message="mobile-specific.spec.js:54:3 orientation change handling" type="FAILURE">
<![CDATA[  [Microsoft Edge] › mobile\mobile-specific.spec.js:54:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › orientation change handling 

    Error: expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 380
    Received:    565

      62 |     // Check no horizontal scroll in portrait
      63 |     let bodyWidth = await page.evaluate(() => document.body.scrollWidth);
    > 64 |     expect(bodyWidth).toBeLessThanOrEqual(375 + 5);
         |                       ^
      65 |     
      66 |     // Switch to landscape
      67 |     await page.setViewportSize({ width: 667, height: 375 });
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:64:23

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile-specific layout elements" classname="mobile\mobile-specific.spec.js" time="0.969">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › scroll behavior on mobile" classname="mobile\mobile-specific.spec.js" time="0.92">
<failure message="mobile-specific.spec.js:93:3 scroll behavior on mobile" type="FAILURE">
<![CDATA[  [Microsoft Edge] › mobile\mobile-specific.spec.js:93:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › scroll behavior on mobile 

    Error: expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 1285
    Received:    1412

      105 |       
      106 |       // Should not have horizontal scroll
    > 107 |       expect(dimensions.scrollWidth).toBeLessThanOrEqual(dimensions.clientWidth + 5);
          |                                      ^
      108 |       
      109 |       // Should be able to scroll vertically if content is tall
      110 |       if (dimensions.scrollHeight > dimensions.clientHeight) {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:107:38

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile performance - load time" classname="mobile\mobile-specific.spec.js" time="1.37">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile gestures do not interfere" classname="mobile\mobile-specific.spec.js" time="0.636">
</testcase>
</testsuite>
<testsuite name="mobile\responsive.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="Microsoft Edge" tests="18" failures="15" skipped="0" time="196.857" errors="0">
<testcase name="Mobile Responsiveness › displays correctly on mobile viewports" classname="mobile\responsive.spec.js" time="5.831">
<failure message="responsive.spec.js:8:3 displays correctly on mobile viewports" type="FAILURE">
<![CDATA[  [Microsoft Edge] › mobile\responsive.spec.js:8:3 › Mobile Responsiveness › displays correctly on mobile viewports 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Quick Inputs')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Quick Inputs')


       9 |     // Test main elements are visible
      10 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
    > 11 |     await expect(page.locator('text=Quick Inputs')).toBeVisible()
         |                                                     ^
      12 |     await expect(page.locator('text=Dashboard')).toBeVisible()
      13 |   })
      14 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:11:53

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › region selector is accessible on mobile" classname="mobile\responsive.spec.js" time="0.981">
<failure message="responsive.spec.js:15:3 region selector is accessible on mobile" type="FAILURE">
<![CDATA[  [Microsoft Edge] › mobile\responsive.spec.js:15:3 › Mobile Responsiveness › region selector is accessible on mobile 

    Error: expect.toBeVisible: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      15 |   test('region selector is accessible on mobile', async ({ page }) => {
      16 |     const regionSelect = page.locator('select[aria-label="Region"]')
    > 17 |     await expect(regionSelect).toBeVisible()
         |                                ^
      18 |     
      19 |     // Should be large enough to tap
      20 |     const box = await regionSelect.boundingBox()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:17:32

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › input fields are properly sized for mobile" classname="mobile\responsive.spec.js" time="1.148">
</testcase>
<testcase name="Mobile Responsiveness › KPI cards stack vertically on mobile" classname="mobile\responsive.spec.js" time="31.238">
<failure message="responsive.spec.js:39:3 KPI cards stack vertically on mobile" type="FAILURE">
<![CDATA[  [Microsoft Edge] › mobile\responsive.spec.js:39:3 › Mobile Responsiveness › KPI cards stack vertically on mobile 

    Test timeout of 30000ms exceeded.

    Error: locator.boundingBox: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('.kpi').first()


      42 |     const secondCard = kpiCards.nth(1)
      43 |     
    > 44 |     const firstBox = await firstCard.boundingBox()
         |                                      ^
      45 |     const secondBox = await secondCard.boundingBox()
      46 |     
      47 |     // Second card should be below first card (higher Y position)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:44:38

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › text is readable on mobile screens" classname="mobile\responsive.spec.js" time="1.134">
</testcase>
<testcase name="Mobile Responsiveness › footer content is accessible on mobile" classname="mobile\responsive.spec.js" time="6.162">
<failure message="responsive.spec.js:65:3 footer content is accessible on mobile" type="FAILURE">
<![CDATA[  [Microsoft Edge] › mobile\responsive.spec.js:65:3 › Mobile Responsiveness › footer content is accessible on mobile 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.footer')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.footer')


      65 |   test('footer content is accessible on mobile', async ({ page }) => {
      66 |     const footer = page.locator('.footer')
    > 67 |     await expect(footer).toBeVisible()
         |                          ^
      68 |     
      69 |     // Footer text should be readable
      70 |     const footerText = await footer.textContent()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:67:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › tap to focus inputs works correctly" classname="mobile\responsive.spec.js" time="0.68">
<failure message="responsive.spec.js:80:3 tap to focus inputs works correctly" type="FAILURE">
<![CDATA[  [Microsoft Edge] › mobile\responsive.spec.js:80:3 › Touch Interactions › tap to focus inputs works correctly 

    Error: locator.tap: The page does not support tap. Use hasTouch context option to enable touch support.

      82 |     
      83 |     // Tap to focus
    > 84 |     await avgNetFeeInput.tap()
         |                          ^
      85 |     await expect(avgNetFeeInput).toBeFocused()
      86 |   })
      87 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:84:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › tap and hold does not interfere with input" classname="mobile\responsive.spec.js" time="1.188">
<failure message="responsive.spec.js:88:3 tap and hold does not interfere with input" type="FAILURE">
<![CDATA[  [Microsoft Edge] › mobile\responsive.spec.js:88:3 › Touch Interactions › tap and hold does not interfere with input 

    Error: locator.tap: The page does not support tap. Use hasTouch context option to enable touch support.

      90 |     
      91 |     // Long press should not cause issues
    > 92 |     await avgNetFeeInput.tap({ force: true })
         |                          ^
      93 |     await page.waitForTimeout(1000) // Simulate long press
      94 |     
      95 |     // Should still be able to type
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:92:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › select dropdown works with touch" classname="mobile\responsive.spec.js" time="0.907">
<failure message="responsive.spec.js:100:3 select dropdown works with touch" type="FAILURE">
<![CDATA[  [Microsoft Edge] › mobile\responsive.spec.js:100:3 › Touch Interactions › select dropdown works with touch 

    Error: locator.tap: The page does not support tap. Use hasTouch context option to enable touch support.

      101 |     const regionSelect = page.locator('select[aria-label="Region"]')
      102 |     
    > 103 |     await regionSelect.tap()
          |                        ^
      104 |     await regionSelect.selectOption('CA')
      105 |     
      106 |     await expect(regionSelect).toHaveValue('CA')
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:103:24

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › reset button responds to touch" classname="mobile\responsive.spec.js" time="31.219">
<failure message="responsive.spec.js:109:3 reset button responds to touch" type="FAILURE">
<![CDATA[  [Microsoft Edge] › mobile\responsive.spec.js:109:3 › Touch Interactions › reset button responds to touch 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      112 |     
      113 |     // Change a value
    > 114 |     await avgNetFeeInput.fill('200')
          |                          ^
      115 |     
      116 |     // Tap reset
      117 |     await resetButton.tap()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:114:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Microsoft-Edge\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Microsoft-Edge\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Microsoft-Edge\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Performance › app loads quickly on mobile connections" classname="mobile\responsive.spec.js" time="1.811">
</testcase>
<testcase name="Mobile Performance › calculations remain responsive during rapid input" classname="mobile\responsive.spec.js" time="32.329">
<failure message="responsive.spec.js:140:3 calculations remain responsive during rapid input" type="FAILURE">
<![CDATA[  [Microsoft Edge] › mobile\responsive.spec.js:140:3 › Mobile Performance › calculations remain responsive during rapid input 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      144 |     const values = ['100', '150', '200', '250', '300']
      145 |     for (const value of values) {
    > 146 |       await avgNetFeeInput.fill(value)
          |                            ^
      147 |       await page.waitForTimeout(100) // Brief pause between changes
      148 |     }
      149 |     
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:146:28

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-Microsoft-Edge\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › prevents zoom on input focus (if implemented)" classname="mobile\responsive.spec.js" time="32.496">
<failure message="responsive.spec.js:159:3 prevents zoom on input focus (if implemented)" type="FAILURE">
<![CDATA[  [Microsoft Edge] › mobile\responsive.spec.js:159:3 › Mobile Specific Features › prevents zoom on input focus (if implemented) 

    Test timeout of 30000ms exceeded.

    Error: locator.getAttribute: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('meta[name="viewport"]')


      160 |     // Check if viewport meta tag prevents zoom
      161 |     const viewportMeta = page.locator('meta[name="viewport"]')
    > 162 |     const content = await viewportMeta.getAttribute('content')
          |                                        ^
      163 |     
      164 |     // This test depends on whether zoom prevention is desired
      165 |     // Some accessibility guidelines recommend allowing zoom
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:162:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--Microsoft-Edge\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › handles device orientation changes gracefully" classname="mobile\responsive.spec.js" time="5.614">
<failure message="responsive.spec.js:172:3 handles device orientation changes gracefully" type="FAILURE">
<![CDATA[  [Microsoft Edge] › mobile\responsive.spec.js:172:3 › Mobile Specific Features › handles device orientation changes gracefully 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Liberty Tax • P&L Budget & Forecast')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Liberty Tax • P&L Budget & Forecast')


      173 |     // Start in portrait
      174 |     await page.setViewportSize({ width: 390, height: 844 })
    > 175 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
          |                                                                            ^
      176 |     
      177 |     // Switch to landscape
      178 |     await page.setViewportSize({ width: 844, height: 390 })
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:175:76

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-Microsoft-Edge\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › supports dark mode if device prefers it" classname="mobile\responsive.spec.js" time="5.7">
<failure message="responsive.spec.js:186:3 supports dark mode if device prefers it" type="FAILURE">
<![CDATA[  [Microsoft Edge] › mobile\responsive.spec.js:186:3 › Mobile Specific Features › supports dark mode if device prefers it 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Liberty Tax • P&L Budget & Forecast')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Liberty Tax • P&L Budget & Forecast')


      190 |     
      191 |     // App should still function (specific styling tests would go here)
    > 192 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
          |                                                                            ^
      193 |   })
      194 | })
      195 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:192:76

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-Microsoft-Edge\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility on Mobile › maintains proper focus management" classname="mobile\responsive.spec.js" time="5.628">
<failure message="responsive.spec.js:197:3 maintains proper focus management" type="FAILURE">
<![CDATA[  [Microsoft Edge] › mobile\responsive.spec.js:197:3 › Accessibility on Mobile › maintains proper focus management 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator(':focus')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator(':focus')


      199 |     await page.keyboard.press('Tab')
      200 |     const focusedElement = page.locator(':focus')
    > 201 |     await expect(focusedElement).toBeVisible()
          |                                  ^
      202 |   })
      203 |
      204 |   test('form labels work with screen readers', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:201:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-Microsoft-Edge\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility on Mobile › form labels work with screen readers" classname="mobile\responsive.spec.js" time="32.208">
<failure message="responsive.spec.js:204:3 form labels work with screen readers" type="FAILURE">
<![CDATA[  [Microsoft Edge] › mobile\responsive.spec.js:204:3 › Accessibility on Mobile › form labels work with screen readers 

    Test timeout of 30000ms exceeded.

    Error: locator.textContent: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('label:has(input[type="number"])').first()


      204 |   test('form labels work with screen readers', async ({ page }) => {
      205 |     const avgNetFeeInput = page.locator('input[type="number"]').first()
    > 206 |     const labelText = await page.locator('label:has(input[type="number"])').first().textContent()
          |                                                                                     ^
      207 |     
      208 |     expect(labelText).toContain('Average Net Fee')
      209 |   })
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:206:85

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-Microsoft-Edge\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility on Mobile › maintains sufficient color contrast" classname="mobile\responsive.spec.js" time="0.583">
<failure message="responsive.spec.js:211:3 maintains sufficient color contrast" type="FAILURE">
<![CDATA[  [Microsoft Edge] › mobile\responsive.spec.js:211:3 › Accessibility on Mobile › maintains sufficient color contrast 

    Error: expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      215 |     const count = await kpiElements.count()
      216 |     
    > 217 |     expect(count).toBeGreaterThan(0)
          |                   ^
      218 |   })
      219 | })
      220 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:217:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-Microsoft-Edge\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-Microsoft-Edge\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-Microsoft-Edge\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-Microsoft-Edge\video.webm]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="snapshots.spec.ts" timestamp="2025-09-21T14:00:33.654Z" hostname="Microsoft Edge" tests="1" failures="0" skipped="0" time="6.439" errors="0">
<testcase name="UI Snapshots › capture key screens" classname="snapshots.spec.ts" time="6.439">
</testcase>
</testsuite>
<testsuite name="app.spec.ts" timestamp="2025-09-21T14:00:33.654Z" hostname="Google Chrome" tests="15" failures="14" skipped="0" time="153.067" errors="0">
<testcase name="Liberty Tax P&amp;L Application › displays the main application interface" classname="app.spec.ts" time="6.294">
<failure message="app.spec.ts:65:3 displays the main application interface" type="FAILURE">
<![CDATA[  [Google Chrome] › app.spec.ts:65:3 › Liberty Tax P&L Application › displays the main application interface 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Quick Inputs')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Quick Inputs')


      68 |     
      69 |     // Check main sections are present
    > 70 |     await expect(page.locator('text=Quick Inputs')).toBeVisible()
         |                                                     ^
      71 |     await expect(page.locator('text=Dashboard')).toBeVisible()
      72 |     await expect(page.locator('text=Income Drivers')).toBeVisible()
      73 |     await expect(page.locator('text=Expense Percentages')).toBeVisible()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:70:53

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-28f45--main-application-interface-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › has correct initial values" classname="app.spec.ts" time="1.058">
<failure message="app.spec.ts:76:3 has correct initial values" type="FAILURE">
<![CDATA[  [Google Chrome] › app.spec.ts:76:3 › Liberty Tax P&L Application › has correct initial values ────

    Error: expect.toHaveValue: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - Expect "toHaveValue" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      75 |
      76 |   test('has correct initial values', async ({ page }) => {
    > 77 |     await expect(pnlPage.regionSelect).toHaveValue('US')
         |                                        ^
      78 |     await expect(pnlPage.avgNetFeeInput).toHaveValue('125')
      79 |     await expect(pnlPage.taxPrepReturnsInput).toHaveValue('1600')
      80 |     await expect(pnlPage.taxRushReturnsInput).toHaveValue('0')
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:77:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Application-has-correct-initial-values-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › enables TaxRush input when region is set to Canada" classname="app.spec.ts" time="1.001">
<failure message="app.spec.ts:84:3 enables TaxRush input when region is set to Canada" type="FAILURE">
<![CDATA[  [Google Chrome] › app.spec.ts:84:3 › Liberty Tax P&L Application › enables TaxRush input when region is set to Canada 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:85:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a7d90-hen-region-is-set-to-Canada-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › disables and resets TaxRush when switching to US" classname="app.spec.ts" time="0.994">
<failure message="app.spec.ts:89:3 disables and resets TaxRush when switching to US" type="FAILURE">
<![CDATA[  [Google Chrome] › app.spec.ts:89:3 › Liberty Tax P&L Application › disables and resets TaxRush when switching to US 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:91:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-41f44-axRush-when-switching-to-US-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › updates calculations when inputs change" classname="app.spec.ts" time="31.468">
<failure message="app.spec.ts:101:3 updates calculations when inputs change" type="FAILURE">
<![CDATA[  [Google Chrome] › app.spec.ts:101:3 › Liberty Tax P&L Application › updates calculations when inputs change 

    Test timeout of 30000ms exceeded.

    Error: locator.textContent: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('.kpi:has-text("Net Income") .value')


      101 |   test('updates calculations when inputs change', async ({ page }) => {
      102 |     // Get initial net income
    > 103 |     const initialNetIncome = await pnlPage.netIncomeValue.textContent()
          |                                                           ^
      104 |     
      105 |     // Change average net fee
      106 |     await pnlPage.setAvgNetFee(200)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:103:59

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-bf17e-ulations-when-inputs-change-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › persists data across page reloads" classname="app.spec.ts" time="1.057">
<failure message="app.spec.ts:114:3 persists data across page reloads" type="FAILURE">
<![CDATA[  [Google Chrome] › app.spec.ts:114:3 › Liberty Tax P&L Application › persists data across page reloads 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:116:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-5df4b-ts-data-across-page-reloads-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › resets all values when reset button is clicked" classname="app.spec.ts" time="1.055">
<failure message="app.spec.ts:134:3 resets all values when reset button is clicked" type="FAILURE">
<![CDATA[  [Google Chrome] › app.spec.ts:134:3 › Liberty Tax P&L Application › resets all values when reset button is clicked 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:136:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3e526-hen-reset-button-is-clicked-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › displays KPI status colors correctly" classname="app.spec.ts" time="5.889">
<failure message="app.spec.ts:150:3 displays KPI status colors correctly" type="FAILURE">
<![CDATA[  [Google Chrome] › app.spec.ts:150:3 › Liberty Tax P&L Application › displays KPI status colors correctly 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.kpi:has-text("Net Income")')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.kpi:has-text("Net Income")')


      154 |     const costPerReturnKPI = page.locator('.kpi:has-text("Cost / Return")')
      155 |     
    > 156 |     await expect(netIncomeKPI).toBeVisible()
          |                                ^
      157 |     await expect(netMarginKPI).toBeVisible()
      158 |     await expect(costPerReturnKPI).toBeVisible()
      159 |     
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:156:32

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-a0fcb-KPI-status-colors-correctly-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › shows pro-tips based on KPI status" classname="app.spec.ts" time="6.083">
<failure message="app.spec.ts:170:3 shows pro-tips based on KPI status" type="FAILURE">
<![CDATA[  [Google Chrome] › app.spec.ts:170:3 › Liberty Tax P&L Application › shows pro-tips based on KPI status 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.card:has-text("Pro-Tips")')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.card:has-text("Pro-Tips")')


      174 |     // There should be some tips shown (content depends on current KPI status)
      175 |     const proTipsSection = page.locator('.card:has-text("Pro-Tips")')
    > 176 |     await expect(proTipsSection).toBeVisible()
          |                                  ^
      177 |   })
      178 |
      179 |   test('handles edge case of zero returns', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:176:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-79a77-ro-tips-based-on-KPI-status-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles edge case of zero returns" classname="app.spec.ts" time="31.578">
<failure message="app.spec.ts:179:3 handles edge case of zero returns" type="FAILURE">
<![CDATA[  [Google Chrome] › app.spec.ts:179:3 › Liberty Tax P&L Application › handles edge case of zero returns 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('label:has-text("Tax Prep Returns") + input')
        - locator resolved to <input id="ret-lbl" value="1600" aria-label="Tax Prep Returns"/>
        - fill("0")
      - attempting fill action
        2 × waiting for element to be visible, enabled and editable
          - element is not visible
        - retrying fill action
        - waiting 20ms
        2 × waiting for element to be visible, enabled and editable
          - element is not visible
        - retrying fill action
          - waiting 100ms
        57 × waiting for element to be visible, enabled and editable
           - element is not visible
         - retrying fill action
           - waiting 500ms


      28 |
      29 |   async setTaxPrepReturns(value: number) {
    > 30 |     await this.taxPrepReturnsInput.fill(value.toString())
         |                                    ^
      31 |     await this.taxPrepReturnsInput.blur()
      32 |   }
      33 |
        at PnLPage.setTaxPrepReturns (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:30:36)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:180:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-c5652-s-edge-case-of-zero-returns-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › handles very large input values" classname="app.spec.ts" time="31.734">
<failure message="app.spec.ts:189:3 handles very large input values" type="FAILURE">
<![CDATA[  [Google Chrome] › app.spec.ts:189:3 › Liberty Tax P&L Application › handles very large input values 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      23 |
      24 |   async setAvgNetFee(value: number) {
    > 25 |     await this.avgNetFeeInput.fill(value.toString())
         |                               ^
      26 |     await this.avgNetFeeInput.blur()
      27 |   }
      28 |
        at PnLPage.setAvgNetFee (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:25:31)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:190:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-4d9a5-les-very-large-input-values-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › maintains TaxRush stickiness in Canada" classname="app.spec.ts" time="1.004">
<failure message="app.spec.ts:202:3 maintains TaxRush stickiness in Canada" type="FAILURE">
<![CDATA[  [Google Chrome] › app.spec.ts:202:3 › Liberty Tax P&L Application › maintains TaxRush stickiness in Canada 

    Error: locator.selectOption: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - waiting for locator('select[aria-label="Region"]')


      19 |   // Actions
      20 |   async selectRegion(region: 'US' | 'CA') {
    > 21 |     await this.regionSelect.selectOption(region)
         |                             ^
      22 |   }
      23 |
      24 |   async setAvgNetFee(value: number) {
        at PnLPage.selectRegion (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:21:29)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:204:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-3048b-axRush-stickiness-in-Canada-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Application › keyboard navigation works correctly" classname="app.spec.ts" time="0.879">
<failure message="app.spec.ts:212:3 keyboard navigation works correctly" type="FAILURE">
<![CDATA[  [Google Chrome] › app.spec.ts:212:3 › Liberty Tax P&L Application › keyboard navigation works correctly 

    Error: expect.toBeFocused: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - Expect "toBeFocused" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      213 |     // Test tab navigation through inputs
      214 |     await page.keyboard.press('Tab')
    > 215 |     await expect(pnlPage.regionSelect).toBeFocused()
          |                                        ^
      216 |     
      217 |     // Continue tabbing to inputs
      218 |     await page.keyboard.press('Tab')
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:215:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Liberty-Tax-P-L-Applic-e3e28--navigation-works-correctly-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Performance &amp; Responsiveness › loads within acceptable time" classname="app.spec.ts" time="0.848">
</testcase>
<testcase name="Performance &amp; Responsiveness › calculations are performant" classname="app.spec.ts" time="32.125">
<failure message="app.spec.ts:234:3 calculations are performant" type="FAILURE">
<![CDATA[  [Google Chrome] › app.spec.ts:234:3 › Performance & Responsiveness › calculations are performant ─

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      23 |
      24 |   async setAvgNetFee(value: number) {
    > 25 |     await this.avgNetFeeInput.fill(value.toString())
         |                               ^
      26 |     await this.avgNetFeeInput.blur()
      27 |   }
      28 |
        at PnLPage.setAvgNetFee (D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:25:31)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\app.spec.ts:242:21

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\app-Performance-Responsiveness-calculations-are-performant-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\app-Performance-Responsiveness-calculations-are-performant-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="basic-functionality.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="Google Chrome" tests="6" failures="3" skipped="1" time="12.272" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › homepage loads successfully" classname="basic-functionality.spec.js" time="0.845">
<failure message="basic-functionality.spec.js:9:3 homepage loads successfully" type="FAILURE">
<![CDATA[  [Google Chrome] › basic-functionality.spec.js:9:3 › Liberty Tax P&L Webapp - Basic Functionality › homepage loads successfully 

    Error: expect(received).toBeTruthy()

    Received: false

      16 |     // Look for key elements that should be present
      17 |     const hasMainContent = await page.locator('main, #root, .app, [class*="app"]').first().isVisible();
    > 18 |     expect(hasMainContent).toBeTruthy();
         |                            ^
      19 |   });
      20 |
      21 |   test('wizard can be opened', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:18:28

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-1309d-homepage-loads-successfully-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › wizard can be opened" classname="basic-functionality.spec.js" time="6.238">
<failure message="basic-functionality.spec.js:21:3 wizard can be opened" type="FAILURE">
<![CDATA[  [Google Chrome] › basic-functionality.spec.js:21:3 › Liberty Tax P&L Webapp - Basic Functionality › wizard can be opened 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('h1, h2, h3, [class*="wizard"], [id*="wizard"]').filter({ hasText: /welcome|region|store|step/i }).first()
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('h1, h2, h3, [class*="wizard"], [id*="wizard"]').filter({ hasText: /welcome|region|store|step/i }).first()


      33 |       });
      34 |       
    > 35 |       await expect(wizardContent.first()).toBeVisible({ timeout: 5000 });
         |                                           ^
      36 |     } else {
      37 |       test.skip('Start wizard button not found - may be different implementation');
      38 |     }
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:35:43

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-6a31a-nality-wizard-can-be-opened-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › debug panel can be accessed" classname="basic-functionality.spec.js" time="0.94">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › no JavaScript errors on page load" classname="basic-functionality.spec.js" time="1.505">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › responsive design - no horizontal scroll" classname="basic-functionality.spec.js" time="1.605">
<failure message="basic-functionality.spec.js:71:3 responsive design - no horizontal scroll" type="FAILURE">
<![CDATA[  [Google Chrome] › basic-functionality.spec.js:71:3 › Liberty Tax P&L Webapp - Basic Functionality › responsive design - no horizontal scroll 

    Error: expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 380
    Received:    565

      87 |       
      88 |       // Allow small tolerance (5px) for rounding
    > 89 |       expect(bodyWidth).toBeLessThanOrEqual(viewportWidth + 5);
         |                         ^
      90 |     }
      91 |   });
      92 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\basic-functionality.spec.js:89:25

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\basic-functionality-Libert-65b29-sign---no-horizontal-scroll-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Basic Functionality › basic form interactions work" classname="basic-functionality.spec.js" time="1.139">
</testcase>
</testsuite>
<testsuite name="generated\wizardinputs.generated.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="Google Chrome" tests="34" failures="0" skipped="0" time="26.974" errors="0">
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0.814">
<system-out>
<![CDATA[Testing: percentage accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0.959">
<system-out>
<![CDATA[Testing: percentage accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0.737">
<system-out>
<![CDATA[Testing: percentage rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0.783">
<system-out>
<![CDATA[Testing: percentage rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0.816">
<system-out>
<![CDATA[Testing: percentage rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › percentage rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0.84">
<system-out>
<![CDATA[Testing: percentage rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0.794">
<system-out>
<![CDATA[Testing: currency accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0.788">
<system-out>
<![CDATA[Testing: currency accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0.799">
<system-out>
<![CDATA[Testing: currency rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0.923">
<system-out>
<![CDATA[Testing: currency rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0.71">
<system-out>
<![CDATA[Testing: currency rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › currency rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0.733">
<system-out>
<![CDATA[Testing: currency rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0.721">
<system-out>
<![CDATA[Testing: returns accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0.706">
<system-out>
<![CDATA[Testing: returns accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0.765">
<system-out>
<![CDATA[Testing: returns rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0.718">
<system-out>
<![CDATA[Testing: returns rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0.725">
<system-out>
<![CDATA[Testing: returns rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › returns rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0.747">
<system-out>
<![CDATA[Testing: returns rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts minimum value" classname="generated\wizardinputs.generated.spec.js" time="0.763">
<system-out>
<![CDATA[Testing: growth accepts minimum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth accepts maximum value" classname="generated\wizardinputs.generated.spec.js" time="0.74">
<system-out>
<![CDATA[Testing: growth accepts maximum value
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects below minimum" classname="generated\wizardinputs.generated.spec.js" time="0.753">
<system-out>
<![CDATA[Testing: growth rejects below minimum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects above maximum" classname="generated\wizardinputs.generated.spec.js" time="0.769">
<system-out>
<![CDATA[Testing: growth rejects above maximum
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects string input" classname="generated\wizardinputs.generated.spec.js" time="0.769">
<system-out>
<![CDATA[Testing: growth rejects string input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Input Validation › growth rejects null input" classname="generated\wizardinputs.generated.spec.js" time="0.749">
<system-out>
<![CDATA[Testing: growth rejects null input
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › keyboard navigation works correctly" classname="generated\wizardinputs.generated.spec.js" time="0.826">
<system-out>
<![CDATA[Testing: keyboard navigation works correctly
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › screen reader announcements are correct" classname="generated\wizardinputs.generated.spec.js" time="0.836">
<system-out>
<![CDATA[Testing: screen reader announcements are correct
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › error messages are announced" classname="generated\wizardinputs.generated.spec.js" time="0.876">
<system-out>
<![CDATA[Testing: error messages are announced
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Accessibility › color contrast meets WCAG standards" classname="generated\wizardinputs.generated.spec.js" time="0.865">
<system-out>
<![CDATA[Testing: color contrast meets WCAG standards
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › renders within performance budget" classname="generated\wizardinputs.generated.spec.js" time="0.822">
<system-out>
<![CDATA[Testing: renders within performance budget
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › handles rapid input changes efficiently" classname="generated\wizardinputs.generated.spec.js" time="0.906">
<system-out>
<![CDATA[Testing: handles rapid input changes efficiently
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › Performance › calculation updates are debounced" classname="generated\wizardinputs.generated.spec.js" time="0.85">
<system-out>
<![CDATA[Testing: calculation updates are debounced
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › complete wizard flow successfully" classname="generated\wizardinputs.generated.spec.js" time="0.796">
<system-out>
<![CDATA[Testing: complete wizard flow successfully
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › recover from validation errors gracefully" classname="generated\wizardinputs.generated.spec.js" time="0.769">
<system-out>
<![CDATA[Testing: recover from validation errors gracefully
]]>
</system-out>
</testcase>
<testcase name="WizardInputs - Auto-generated Tests › User Journeys › data persistence across page refresh" classname="generated\wizardinputs.generated.spec.js" time="0.807">
<system-out>
<![CDATA[Testing: data persistence across page refresh
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="mobile\mobile-specific.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="Google Chrome" tests="8" failures="3" skipped="0" time="8.145" errors="0">
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › touch targets are large enough" classname="mobile\mobile-specific.spec.js" time="0.878">
<failure message="mobile-specific.spec.js:9:3 touch targets are large enough" type="FAILURE">
<![CDATA[  [Google Chrome] › mobile\mobile-specific.spec.js:9:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › touch targets are large enough 

    Error: expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 44
    Received:    27

      19 |           // Minimum touch target size should be 44x44px (Apple guidelines)
      20 |           expect(box.width).toBeGreaterThanOrEqual(44);
    > 21 |           expect(box.height).toBeGreaterThanOrEqual(44);
         |                              ^
      22 |         }
      23 |       }
      24 |     }
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:21:30

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-3979d-ch-targets-are-large-enough-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile keyboard interactions" classname="mobile\mobile-specific.spec.js" time="0.857">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › viewport meta tag prevents zoom" classname="mobile\mobile-specific.spec.js" time="0.759">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › orientation change handling" classname="mobile\mobile-specific.spec.js" time="1.178">
<failure message="mobile-specific.spec.js:54:3 orientation change handling" type="FAILURE">
<![CDATA[  [Google Chrome] › mobile\mobile-specific.spec.js:54:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › orientation change handling 

    Error: expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 380
    Received:    565

      62 |     // Check no horizontal scroll in portrait
      63 |     let bodyWidth = await page.evaluate(() => document.body.scrollWidth);
    > 64 |     expect(bodyWidth).toBeLessThanOrEqual(375 + 5);
         |                       ^
      65 |     
      66 |     // Switch to landscape
      67 |     await page.setViewportSize({ width: 667, height: 375 });
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:64:23

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-0ccce-orientation-change-handling-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile-specific layout elements" classname="mobile\mobile-specific.spec.js" time="0.935">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › scroll behavior on mobile" classname="mobile\mobile-specific.spec.js" time="0.68">
<failure message="mobile-specific.spec.js:93:3 scroll behavior on mobile" type="FAILURE">
<![CDATA[  [Google Chrome] › mobile\mobile-specific.spec.js:93:3 › Liberty Tax P&L Webapp - Mobile Specific Tests › scroll behavior on mobile 

    Error: expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 1285
    Received:    1412

      105 |       
      106 |       // Should not have horizontal scroll
    > 107 |       expect(dimensions.scrollWidth).toBeLessThanOrEqual(dimensions.clientWidth + 5);
          |                                      ^
      108 |       
      109 |       // Should be able to scroll vertically if content is tall
      110 |       if (dimensions.scrollHeight > dimensions.clientHeight) {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\mobile-specific.spec.js:107:38

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-mobile-specific-Lib-b1e88-s-scroll-behavior-on-mobile-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile performance - load time" classname="mobile\mobile-specific.spec.js" time="1.7">
</testcase>
<testcase name="Liberty Tax P&amp;L Webapp - Mobile Specific Tests › mobile gestures do not interfere" classname="mobile\mobile-specific.spec.js" time="1.158">
</testcase>
</testsuite>
<testsuite name="mobile\responsive.spec.js" timestamp="2025-09-21T14:00:33.654Z" hostname="Google Chrome" tests="18" failures="15" skipped="0" time="195.773" errors="0">
<testcase name="Mobile Responsiveness › displays correctly on mobile viewports" classname="mobile\responsive.spec.js" time="5.982">
<failure message="responsive.spec.js:8:3 displays correctly on mobile viewports" type="FAILURE">
<![CDATA[  [Google Chrome] › mobile\responsive.spec.js:8:3 › Mobile Responsiveness › displays correctly on mobile viewports 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Quick Inputs')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Quick Inputs')


       9 |     // Test main elements are visible
      10 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
    > 11 |     await expect(page.locator('text=Quick Inputs')).toBeVisible()
         |                                                     ^
      12 |     await expect(page.locator('text=Dashboard')).toBeVisible()
      13 |   })
      14 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:11:53

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-deefb-rrectly-on-mobile-viewports-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › region selector is accessible on mobile" classname="mobile\responsive.spec.js" time="1.19">
<failure message="responsive.spec.js:15:3 region selector is accessible on mobile" type="FAILURE">
<![CDATA[  [Google Chrome] › mobile\responsive.spec.js:15:3 › Mobile Responsiveness › region selector is accessible on mobile 

    Error: expect.toBeVisible: Error: strict mode violation: locator('select[aria-label="Region"]') resolved to 2 elements:
        1) <select title="Region" aria-label="Region">…</select> aka locator('div').filter({ hasText: /^USCA$/ }).getByLabel('Region')
        2) <select id="region-select" aria-label="Region" title="Select region">…</select> aka locator('#region-select')

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('select[aria-label="Region"]')


      15 |   test('region selector is accessible on mobile', async ({ page }) => {
      16 |     const regionSelect = page.locator('select[aria-label="Region"]')
    > 17 |     await expect(regionSelect).toBeVisible()
         |                                ^
      18 |     
      19 |     // Should be large enough to tap
      20 |     const box = await regionSelect.boundingBox()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:17:32

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-2141b-tor-is-accessible-on-mobile-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › input fields are properly sized for mobile" classname="mobile\responsive.spec.js" time="0.694">
</testcase>
<testcase name="Mobile Responsiveness › KPI cards stack vertically on mobile" classname="mobile\responsive.spec.js" time="31.113">
<failure message="responsive.spec.js:39:3 KPI cards stack vertically on mobile" type="FAILURE">
<![CDATA[  [Google Chrome] › mobile\responsive.spec.js:39:3 › Mobile Responsiveness › KPI cards stack vertically on mobile 

    Test timeout of 30000ms exceeded.

    Error: locator.boundingBox: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('.kpi').first()


      42 |     const secondCard = kpiCards.nth(1)
      43 |     
    > 44 |     const firstBox = await firstCard.boundingBox()
         |                                      ^
      45 |     const secondBox = await secondCard.boundingBox()
      46 |     
      47 |     // Second card should be below first card (higher Y position)
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:44:38

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-1fa5d--stack-vertically-on-mobile-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › text is readable on mobile screens" classname="mobile\responsive.spec.js" time="0.757">
</testcase>
<testcase name="Mobile Responsiveness › footer content is accessible on mobile" classname="mobile\responsive.spec.js" time="6.042">
<failure message="responsive.spec.js:65:3 footer content is accessible on mobile" type="FAILURE">
<![CDATA[  [Google Chrome] › mobile\responsive.spec.js:65:3 › Mobile Responsiveness › footer content is accessible on mobile 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('.footer')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.footer')


      65 |   test('footer content is accessible on mobile', async ({ page }) => {
      66 |     const footer = page.locator('.footer')
    > 67 |     await expect(footer).toBeVisible()
         |                          ^
      68 |     
      69 |     // Footer text should be readable
      70 |     const footerText = await footer.textContent()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:67:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-R-20a59-ent-is-accessible-on-mobile-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › tap to focus inputs works correctly" classname="mobile\responsive.spec.js" time="1.025">
<failure message="responsive.spec.js:80:3 tap to focus inputs works correctly" type="FAILURE">
<![CDATA[  [Google Chrome] › mobile\responsive.spec.js:80:3 › Touch Interactions › tap to focus inputs works correctly 

    Error: locator.tap: The page does not support tap. Use hasTouch context option to enable touch support.

      82 |     
      83 |     // Tap to focus
    > 84 |     await avgNetFeeInput.tap()
         |                          ^
      85 |     await expect(avgNetFeeInput).toBeFocused()
      86 |   })
      87 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:84:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-f2afd-ocus-inputs-works-correctly-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › tap and hold does not interfere with input" classname="mobile\responsive.spec.js" time="0.885">
<failure message="responsive.spec.js:88:3 tap and hold does not interfere with input" type="FAILURE">
<![CDATA[  [Google Chrome] › mobile\responsive.spec.js:88:3 › Touch Interactions › tap and hold does not interfere with input 

    Error: locator.tap: The page does not support tap. Use hasTouch context option to enable touch support.

      90 |     
      91 |     // Long press should not cause issues
    > 92 |     await avgNetFeeInput.tap({ force: true })
         |                          ^
      93 |     await page.waitForTimeout(1000) // Simulate long press
      94 |     
      95 |     // Should still be able to type
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:92:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-fbf8d-es-not-interfere-with-input-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › select dropdown works with touch" classname="mobile\responsive.spec.js" time="1.071">
<failure message="responsive.spec.js:100:3 select dropdown works with touch" type="FAILURE">
<![CDATA[  [Google Chrome] › mobile\responsive.spec.js:100:3 › Touch Interactions › select dropdown works with touch 

    Error: locator.tap: The page does not support tap. Use hasTouch context option to enable touch support.

      101 |     const regionSelect = page.locator('select[aria-label="Region"]')
      102 |     
    > 103 |     await regionSelect.tap()
          |                        ^
      104 |     await regionSelect.selectOption('CA')
      105 |     
      106 |     await expect(regionSelect).toHaveValue('CA')
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:103:24

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-5ec8c-t-dropdown-works-with-touch-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Touch Interactions › reset button responds to touch" classname="mobile\responsive.spec.js" time="31.475">
<failure message="responsive.spec.js:109:3 reset button responds to touch" type="FAILURE">
<![CDATA[  [Google Chrome] › mobile\responsive.spec.js:109:3 › Touch Interactions › reset button responds to touch 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      112 |     
      113 |     // Change a value
    > 114 |     await avgNetFeeInput.fill('200')
          |                          ^
      115 |     
      116 |     // Tap reset
      117 |     await resetButton.tap()
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:114:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Google-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Google-Chrome\video.webm]]

[[ATTACHMENT|test-results\mobile-responsive-Touch-In-6d407-et-button-responds-to-touch-Google-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Performance › app loads quickly on mobile connections" classname="mobile\responsive.spec.js" time="1.886">
</testcase>
<testcase name="Mobile Performance › calculations remain responsive during rapid input" classname="mobile\responsive.spec.js" time="32.193">
<failure message="responsive.spec.js:140:3 calculations remain responsive during rapid input" type="FAILURE">
<![CDATA[  [Google Chrome] › mobile\responsive.spec.js:140:3 › Mobile Performance › calculations remain responsive during rapid input 

    Test timeout of 30000ms exceeded.

    Error: locator.fill: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('input[type="number"]').first()


      144 |     const values = ['100', '150', '200', '250', '300']
      145 |     for (const value of values) {
    > 146 |       await avgNetFeeInput.fill(value)
          |                            ^
      147 |       await page.waitForTimeout(100) // Brief pause between changes
      148 |     }
      149 |     
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:146:28

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-P-22aae-sponsive-during-rapid-input-Google-Chrome\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › prevents zoom on input focus (if implemented)" classname="mobile\responsive.spec.js" time="32.116">
<failure message="responsive.spec.js:159:3 prevents zoom on input focus (if implemented)" type="FAILURE">
<![CDATA[  [Google Chrome] › mobile\responsive.spec.js:159:3 › Mobile Specific Features › prevents zoom on input focus (if implemented) 

    Test timeout of 30000ms exceeded.

    Error: locator.getAttribute: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('meta[name="viewport"]')


      160 |     // Check if viewport meta tag prevents zoom
      161 |     const viewportMeta = page.locator('meta[name="viewport"]')
    > 162 |     const content = await viewportMeta.getAttribute('content')
          |                                        ^
      163 |     
      164 |     // This test depends on whether zoom prevention is desired
      165 |     // Some accessibility guidelines recommend allowing zoom
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:162:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-ce6d6-input-focus-if-implemented--Google-Chrome\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › handles device orientation changes gracefully" classname="mobile\responsive.spec.js" time="5.663">
<failure message="responsive.spec.js:172:3 handles device orientation changes gracefully" type="FAILURE">
<![CDATA[  [Google Chrome] › mobile\responsive.spec.js:172:3 › Mobile Specific Features › handles device orientation changes gracefully 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Liberty Tax • P&L Budget & Forecast')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Liberty Tax • P&L Budget & Forecast')


      173 |     // Start in portrait
      174 |     await page.setViewportSize({ width: 390, height: 844 })
    > 175 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
          |                                                                            ^
      176 |     
      177 |     // Switch to landscape
      178 |     await page.setViewportSize({ width: 844, height: 390 })
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:175:76

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-d86fe-entation-changes-gracefully-Google-Chrome\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Specific Features › supports dark mode if device prefers it" classname="mobile\responsive.spec.js" time="5.661">
<failure message="responsive.spec.js:186:3 supports dark mode if device prefers it" type="FAILURE">
<![CDATA[  [Google Chrome] › mobile\responsive.spec.js:186:3 › Mobile Specific Features › supports dark mode if device prefers it 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Liberty Tax • P&L Budget & Forecast')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('text=Liberty Tax • P&L Budget & Forecast')


      190 |     
      191 |     // App should still function (specific styling tests would go here)
    > 192 |     await expect(page.locator('text=Liberty Tax • P&L Budget & Forecast')).toBeVisible()
          |                                                                            ^
      193 |   })
      194 | })
      195 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:192:76

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Mobile-S-e1d63-k-mode-if-device-prefers-it-Google-Chrome\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility on Mobile › maintains proper focus management" classname="mobile\responsive.spec.js" time="5.692">
<failure message="responsive.spec.js:197:3 maintains proper focus management" type="FAILURE">
<![CDATA[  [Google Chrome] › mobile\responsive.spec.js:197:3 › Accessibility on Mobile › maintains proper focus management 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator(':focus')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator(':focus')


      199 |     await page.keyboard.press('Tab')
      200 |     const focusedElement = page.locator(':focus')
    > 201 |     await expect(focusedElement).toBeVisible()
          |                                  ^
      202 |   })
      203 |
      204 |   test('form labels work with screen readers', async ({ page }) => {
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:201:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Accessib-e6101-ins-proper-focus-management-Google-Chrome\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility on Mobile › form labels work with screen readers" classname="mobile\responsive.spec.js" time="31.921">
<failure message="responsive.spec.js:204:3 form labels work with screen readers" type="FAILURE">
<![CDATA[  [Google Chrome] › mobile\responsive.spec.js:204:3 › Accessibility on Mobile › form labels work with screen readers 

    Test timeout of 30000ms exceeded.

    Error: locator.textContent: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('label:has(input[type="number"])').first()


      204 |   test('form labels work with screen readers', async ({ page }) => {
      205 |     const avgNetFeeInput = page.locator('input[type="number"]').first()
    > 206 |     const labelText = await page.locator('label:has(input[type="number"])').first().textContent()
          |                                                                                     ^
      207 |     
      208 |     expect(labelText).toContain('Average Net Fee')
      209 |   })
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:206:85

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Accessib-1b299-ls-work-with-screen-readers-Google-Chrome\video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility on Mobile › maintains sufficient color contrast" classname="mobile\responsive.spec.js" time="0.407">
<failure message="responsive.spec.js:211:3 maintains sufficient color contrast" type="FAILURE">
<![CDATA[  [Google Chrome] › mobile\responsive.spec.js:211:3 › Accessibility on Mobile › maintains sufficient color contrast 

    Error: expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      215 |     const count = await kpiElements.count()
      216 |     
    > 217 |     expect(count).toBeGreaterThan(0)
          |                   ^
      218 |   })
      219 | })
      220 |
        at D:\Dev\liberty\libertytax-pnl-webapp\test\e2e\mobile\responsive.spec.js:217:19

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-Google-Chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-Google-Chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-Google-Chrome\test-failed-1.png]]

[[ATTACHMENT|test-results\mobile-responsive-Accessib-cd55a-s-sufficient-color-contrast-Google-Chrome\video.webm]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="snapshots.spec.ts" timestamp="2025-09-21T14:00:33.654Z" hostname="Google Chrome" tests="1" failures="0" skipped="0" time="5.929" errors="0">
<testcase name="UI Snapshots › capture key screens" classname="snapshots.spec.ts" time="5.929">
</testcase>
</testsuite>
</testsuites>