name: 🚀 Deploy to Environments

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened, closed ]

env:
  NODE_VERSION: '20.x'
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # ==========================================
  # 🔍 Pre-deployment validation
  # ==========================================
  pre-deploy-validation:
    name: 🔍 Pre-deployment Validation
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 🔧 Install dependencies
        run: npm ci
        
      - name: 🔍 Type check
        run: npm run type-check
        
      - name: 🎨 Lint check
        run: npm run lint
        
      - name: 💄 Format check
        run: npm run format:check
        
      - name: 🏗️ Build check
        run: npm run build
        
      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ github.sha }}
          path: dist/
          retention-days: 1

  # ==========================================
  # 👀 Preview Deployment (Pull Requests)
  # ==========================================
  deploy-preview:
    name: 👀 Deploy Preview Environment
    runs-on: ubuntu-latest
    needs: pre-deploy-validation
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    environment: 
      name: preview-pr-${{ github.event.number }}
      url: ${{ steps.deploy.outputs.preview-url }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 🔧 Install dependencies
        run: npm ci
        
      - name: 📦 Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-${{ github.sha }}
          path: dist/
        
      - name: 🚀 Deploy to Vercel Preview
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          scope: ${{ secrets.VERCEL_ORG_ID }}
          github-comment: true
          
      - name: 🧪 Run smoke tests on preview
        run: |
          # Wait for deployment to be ready
          sleep 30
          # Simple curl test
          curl -f ${{ steps.deploy.outputs.preview-url }} || exit 1
        continue-on-error: true
        
      - name: 📊 Comment deployment status
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 🚀 Preview Deployment\n\n✅ **Successfully deployed to preview environment**\n\n🔗 **Preview URL:** ${{ steps.deploy.outputs.preview-url }}\n\n📝 **Commit:** \`${{ github.sha }}\`\n\n---\n*This preview will be automatically updated when you push new commits.*`
            })

  # ==========================================
  # 🎯 Staging Deployment (develop branch)
  # ==========================================
  deploy-staging:
    name: 🎯 Deploy to Staging
    runs-on: ubuntu-latest
    needs: pre-deploy-validation
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    environment: 
      name: staging
      url: ${{ steps.deploy.outputs.preview-url }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 🔧 Install dependencies
        run: npm ci
        
      - name: 📦 Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-${{ github.sha }}
          path: dist/
        
      - name: 🎯 Deploy to Vercel Staging
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          scope: ${{ secrets.VERCEL_ORG_ID }}
          alias-domains: staging-libertytax-pnl.vercel.app
          
      - name: 🧪 Run integration tests on staging
        run: |
          # Wait for deployment
          sleep 30
          # Run basic health checks
          curl -f ${{ steps.deploy.outputs.preview-url }}/health || echo "Health check endpoint not found, skipping"
          curl -f ${{ steps.deploy.outputs.preview-url }} || exit 1
          
      - name: 📣 Notify staging deployment
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          text: |
            🎯 Staging deployment ${{ job.status }}
            🔗 URL: ${{ steps.deploy.outputs.preview-url }}
            📝 Commit: ${{ github.sha }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # ==========================================
  # 🚀 Production Deployment (main branch)
  # ==========================================
  deploy-production:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: pre-deploy-validation
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: 
      name: production
      url: https://libertytax-pnl.vercel.app
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 🔧 Install dependencies
        run: npm ci
        
      - name: 📦 Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-${{ github.sha }}
          path: dist/
        
      - name: 🚀 Deploy to Vercel Production
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          scope: ${{ secrets.VERCEL_ORG_ID }}
          vercel-args: '--prod'
          
      - name: ⚡ Run performance tests on production
        run: |
          # Wait for deployment
          sleep 60
          npm install -g @lhci/cli@0.12.x
          lhci autorun --collect.url=${{ steps.deploy.outputs.preview-url }}
        continue-on-error: true
        
      - name: 🧪 Run smoke tests on production
        run: |
          curl -f https://libertytax-pnl.vercel.app || exit 1
          # Add more critical path tests here
        
      - name: 📊 Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            ## 🚀 Production Release v${{ github.run_number }}
            
            **Deployed at:** $(date -u)
            **Commit:** ${{ github.sha }}
            **URL:** https://libertytax-pnl.vercel.app
            
            ### Changes in this release
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
        
      - name: 📣 Notify production deployment
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          text: |
            🚀 Production deployment ${{ job.status }}
            🔗 URL: https://libertytax-pnl.vercel.app
            📝 Commit: ${{ github.sha }}
            🏷️ Release: v${{ github.run_number }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # ==========================================
  # 🧹 Cleanup Preview Environments
  # ==========================================
  cleanup-preview:
    name: 🧹 Cleanup Preview Environment
    runs-on: ubuntu-latest
    if: github.event.action == 'closed' && github.event_name == 'pull_request'
    steps:
      - name: 🧹 Delete preview deployment
        uses: actions/github-script@v6
        with:
          script: |
            console.log('Preview environment cleanup triggered for PR #${{ github.event.number }}')
            // Add Vercel preview cleanup logic here if needed
            
      - name: 💬 Comment cleanup status
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 🧹 Preview Environment Cleaned Up\n\nThe preview environment for this PR has been cleaned up.`
            })